{"version":3,"sources":["webpack:///./node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/smalltalk.js"],"names":["module","exports","hljs","CHAR","className","begin","SYMBOL","UNDERSCORE_IDENT_RE","name","aliases","keywords","contains","COMMENT","APOS_STRING_MODE","relevance","VAR_IDENT_RE","C_NUMBER_MODE","returnBegin","end","illegal"],"mappings":"8EA+CAA,EAAOC,QAzCP,SAAmBC,GACjB,IACIC,EAAO,CACTC,UAAW,SACXC,MAAO,WAELC,EAAS,CACXF,UAAW,SACXC,MAAO,IAAMH,EAAKK,qBAEpB,MAAO,CACLC,KAAM,YACNC,QAAS,CAAC,MACVC,SAAU,wCAEVC,SAAU,CAACT,EAAKU,QAAQ,IAAK,KAAMV,EAAKW,iBAAkB,CACxDT,UAAW,OACXC,MAAO,wBACPS,UAAW,GACV,CACDT,MAAOU,sBACPD,UAAW,GACVZ,EAAKc,cAAeV,EAAQH,EAAM,CAInCE,MAAO,4DACPY,aAAa,EACbC,IAAK,KACLC,QAAS,KACTR,SAAU,CAAC,CACTN,MAAO,kCAER,CACDA,MAAO,SACPa,IAAK,MACLP,SAAU,CAACT,EAAKW,iBAAkBV,EAAMD,EAAKc,cAAeV","file":"react-syntax-highlighter_languages_highlight_smalltalk-0c962db9eccc297f76c2.js","sourcesContent":["/*\nLanguage: Smalltalk\nDescription: Smalltalk is an object-oriented, dynamically typed reflective programming language.\nAuthor: Vladimir Gubarkov <xonixx@gmail.com>\nWebsite: https://en.wikipedia.org/wiki/Smalltalk\n*/\nfunction smalltalk(hljs) {\n  var VAR_IDENT_RE = '[a-z][a-zA-Z0-9_]*';\n  var CHAR = {\n    className: 'string',\n    begin: '\\\\$.{1}'\n  };\n  var SYMBOL = {\n    className: 'symbol',\n    begin: '#' + hljs.UNDERSCORE_IDENT_RE\n  };\n  return {\n    name: 'Smalltalk',\n    aliases: ['st'],\n    keywords: 'self super nil true false thisContext',\n    // only 6\n    contains: [hljs.COMMENT('\"', '\"'), hljs.APOS_STRING_MODE, {\n      className: 'type',\n      begin: '\\\\b[A-Z][A-Za-z0-9_]*',\n      relevance: 0\n    }, {\n      begin: VAR_IDENT_RE + ':',\n      relevance: 0\n    }, hljs.C_NUMBER_MODE, SYMBOL, CHAR, {\n      // This looks more complicated than needed to avoid combinatorial\n      // explosion under V8. It effectively means `| var1 var2 ... |` with\n      // whitespace adjacent to `|` being optional.\n      begin: '\\\\|[ ]*' + VAR_IDENT_RE + '([ ]+' + VAR_IDENT_RE + ')*[ ]*\\\\|',\n      returnBegin: true,\n      end: /\\|/,\n      illegal: /\\S/,\n      contains: [{\n        begin: '(\\\\|[ ]*)?' + VAR_IDENT_RE\n      }]\n    }, {\n      begin: '\\\\#\\\\(',\n      end: '\\\\)',\n      contains: [hljs.APOS_STRING_MODE, CHAR, hljs.C_NUMBER_MODE, SYMBOL]\n    }]\n  };\n}\n\nmodule.exports = smalltalk;"],"sourceRoot":""}