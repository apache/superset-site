{"version":3,"sources":["webpack:///./node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/kotlin.js"],"names":["frac","concat","hexDigits","NUMERIC","className","variants","begin","relevance","module","exports","hljs","KEYWORDS","keyword","built_in","literal","LABEL","UNDERSCORE_IDENT_RE","SUBST","end","contains","C_NUMBER_MODE","VARIABLE","STRING","illegal","BACKSLASH_ESCAPE","push","ANNOTATION_USE_SITE","ANNOTATION","inherit","KOTLIN_NUMBER_MODE","KOTLIN_NESTED_COMMENT","COMMENT","C_BLOCK_COMMENT_MODE","KOTLIN_PAREN_TYPE","KOTLIN_PAREN_TYPE2","name","aliases","keywords","C_LINE_COMMENT_MODE","starts","beginKeywords","returnBegin","excludeEnd","UNDERSCORE_TITLE_MODE","endsParent","endsWithParent","excludeBegin","returnEnd"],"mappings":"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","file":"react-syntax-highlighter_languages_highlight_kotlin-4b9f5f22eab59b1ef34a.js","sourcesContent":["// https://docs.oracle.com/javase/specs/jls/se15/html/jls-3.html#jls-3.10\nvar decimalDigits = '[0-9](_*[0-9])*';\nvar frac = \"\\\\.(\".concat(decimalDigits, \")\");\nvar hexDigits = '[0-9a-fA-F](_*[0-9a-fA-F])*';\nvar NUMERIC = {\n  className: 'number',\n  variants: [// DecimalFloatingPointLiteral\n  // including ExponentPart\n  {\n    begin: \"(\\\\b(\".concat(decimalDigits, \")((\").concat(frac, \")|\\\\.)?|(\").concat(frac, \"))\") + \"[eE][+-]?(\".concat(decimalDigits, \")[fFdD]?\\\\b\")\n  }, // excluding ExponentPart\n  {\n    begin: \"\\\\b(\".concat(decimalDigits, \")((\").concat(frac, \")[fFdD]?\\\\b|\\\\.([fFdD]\\\\b)?)\")\n  }, {\n    begin: \"(\".concat(frac, \")[fFdD]?\\\\b\")\n  }, {\n    begin: \"\\\\b(\".concat(decimalDigits, \")[fFdD]\\\\b\")\n  }, // HexadecimalFloatingPointLiteral\n  {\n    begin: \"\\\\b0[xX]((\".concat(hexDigits, \")\\\\.?|(\").concat(hexDigits, \")?\\\\.(\").concat(hexDigits, \"))\") + \"[pP][+-]?(\".concat(decimalDigits, \")[fFdD]?\\\\b\")\n  }, // DecimalIntegerLiteral\n  {\n    begin: '\\\\b(0|[1-9](_*[0-9])*)[lL]?\\\\b'\n  }, // HexIntegerLiteral\n  {\n    begin: \"\\\\b0[xX](\".concat(hexDigits, \")[lL]?\\\\b\")\n  }, // OctalIntegerLiteral\n  {\n    begin: '\\\\b0(_*[0-7])*[lL]?\\\\b'\n  }, // BinaryIntegerLiteral\n  {\n    begin: '\\\\b0[bB][01](_*[01])*[lL]?\\\\b'\n  }],\n  relevance: 0\n};\n/*\n Language: Kotlin\n Description: Kotlin is an OSS statically typed programming language that targets the JVM, Android, JavaScript and Native.\n Author: Sergey Mashkov <cy6erGn0m@gmail.com>\n Website: https://kotlinlang.org\n Category: common\n */\n\nfunction kotlin(hljs) {\n  var KEYWORDS = {\n    keyword: 'abstract as val var vararg get set class object open private protected public noinline ' + 'crossinline dynamic final enum if else do while for when throw try catch finally ' + 'import package is in fun override companion reified inline lateinit init ' + 'interface annotation data sealed internal infix operator out by constructor super ' + 'tailrec where const inner suspend typealias external expect actual',\n    built_in: 'Byte Short Char Int Long Boolean Float Double Void Unit Nothing',\n    literal: 'true false null'\n  };\n  var KEYWORDS_WITH_LABEL = {\n    className: 'keyword',\n    begin: /\\b(break|continue|return|this)\\b/,\n    starts: {\n      contains: [{\n        className: 'symbol',\n        begin: /@\\w+/\n      }]\n    }\n  };\n  var LABEL = {\n    className: 'symbol',\n    begin: hljs.UNDERSCORE_IDENT_RE + '@'\n  }; // for string templates\n\n  var SUBST = {\n    className: 'subst',\n    begin: /\\$\\{/,\n    end: /\\}/,\n    contains: [hljs.C_NUMBER_MODE]\n  };\n  var VARIABLE = {\n    className: 'variable',\n    begin: '\\\\$' + hljs.UNDERSCORE_IDENT_RE\n  };\n  var STRING = {\n    className: 'string',\n    variants: [{\n      begin: '\"\"\"',\n      end: '\"\"\"(?=[^\"])',\n      contains: [VARIABLE, SUBST]\n    }, // Can't use built-in modes easily, as we want to use STRING in the meta\n    // context as 'meta-string' and there's no syntax to remove explicitly set\n    // classNames in built-in modes.\n    {\n      begin: '\\'',\n      end: '\\'',\n      illegal: /\\n/,\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: '\"',\n      end: '\"',\n      illegal: /\\n/,\n      contains: [hljs.BACKSLASH_ESCAPE, VARIABLE, SUBST]\n    }]\n  };\n  SUBST.contains.push(STRING);\n  var ANNOTATION_USE_SITE = {\n    className: 'meta',\n    begin: '@(?:file|property|field|get|set|receiver|param|setparam|delegate)\\\\s*:(?:\\\\s*' + hljs.UNDERSCORE_IDENT_RE + ')?'\n  };\n  var ANNOTATION = {\n    className: 'meta',\n    begin: '@' + hljs.UNDERSCORE_IDENT_RE,\n    contains: [{\n      begin: /\\(/,\n      end: /\\)/,\n      contains: [hljs.inherit(STRING, {\n        className: 'meta-string'\n      })]\n    }]\n  }; // https://kotlinlang.org/docs/reference/whatsnew11.html#underscores-in-numeric-literals\n  // According to the doc above, the number mode of kotlin is the same as java 8,\n  // so the code below is copied from java.js\n\n  var KOTLIN_NUMBER_MODE = NUMERIC;\n  var KOTLIN_NESTED_COMMENT = hljs.COMMENT('/\\\\*', '\\\\*/', {\n    contains: [hljs.C_BLOCK_COMMENT_MODE]\n  });\n  var KOTLIN_PAREN_TYPE = {\n    variants: [{\n      className: 'type',\n      begin: hljs.UNDERSCORE_IDENT_RE\n    }, {\n      begin: /\\(/,\n      end: /\\)/,\n      contains: [] // defined later\n\n    }]\n  };\n  var KOTLIN_PAREN_TYPE2 = KOTLIN_PAREN_TYPE;\n  KOTLIN_PAREN_TYPE2.variants[1].contains = [KOTLIN_PAREN_TYPE];\n  KOTLIN_PAREN_TYPE.variants[1].contains = [KOTLIN_PAREN_TYPE2];\n  return {\n    name: 'Kotlin',\n    aliases: ['kt', 'kts'],\n    keywords: KEYWORDS,\n    contains: [hljs.COMMENT('/\\\\*\\\\*', '\\\\*/', {\n      relevance: 0,\n      contains: [{\n        className: 'doctag',\n        begin: '@[A-Za-z]+'\n      }]\n    }), hljs.C_LINE_COMMENT_MODE, KOTLIN_NESTED_COMMENT, KEYWORDS_WITH_LABEL, LABEL, ANNOTATION_USE_SITE, ANNOTATION, {\n      className: 'function',\n      beginKeywords: 'fun',\n      end: '[(]|$',\n      returnBegin: true,\n      excludeEnd: true,\n      keywords: KEYWORDS,\n      relevance: 5,\n      contains: [{\n        begin: hljs.UNDERSCORE_IDENT_RE + '\\\\s*\\\\(',\n        returnBegin: true,\n        relevance: 0,\n        contains: [hljs.UNDERSCORE_TITLE_MODE]\n      }, {\n        className: 'type',\n        begin: /</,\n        end: />/,\n        keywords: 'reified',\n        relevance: 0\n      }, {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        endsParent: true,\n        keywords: KEYWORDS,\n        relevance: 0,\n        contains: [{\n          begin: /:/,\n          end: /[=,\\/]/,\n          endsWithParent: true,\n          contains: [KOTLIN_PAREN_TYPE, hljs.C_LINE_COMMENT_MODE, KOTLIN_NESTED_COMMENT],\n          relevance: 0\n        }, hljs.C_LINE_COMMENT_MODE, KOTLIN_NESTED_COMMENT, ANNOTATION_USE_SITE, ANNOTATION, STRING, hljs.C_NUMBER_MODE]\n      }, KOTLIN_NESTED_COMMENT]\n    }, {\n      className: 'class',\n      beginKeywords: 'class interface trait',\n      // remove 'trait' when removed from KEYWORDS\n      end: /[:\\{(]|$/,\n      excludeEnd: true,\n      illegal: 'extends implements',\n      contains: [{\n        beginKeywords: 'public protected internal private constructor'\n      }, hljs.UNDERSCORE_TITLE_MODE, {\n        className: 'type',\n        begin: /</,\n        end: />/,\n        excludeBegin: true,\n        excludeEnd: true,\n        relevance: 0\n      }, {\n        className: 'type',\n        begin: /[,:]\\s*/,\n        end: /[<\\(,]|$/,\n        excludeBegin: true,\n        returnEnd: true\n      }, ANNOTATION_USE_SITE, ANNOTATION]\n    }, STRING, {\n      className: 'meta',\n      begin: \"^#!/usr/bin/env\",\n      end: '$',\n      illegal: '\\n'\n    }, KOTLIN_NUMBER_MODE]\n  };\n}\n\nmodule.exports = kotlin;"],"sourceRoot":""}