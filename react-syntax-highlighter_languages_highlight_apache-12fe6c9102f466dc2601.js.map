{"version":3,"sources":["webpack:///./node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/apache.js"],"names":["module","exports","hljs","IP_ADDRESS","className","begin","name","aliases","case_insensitive","contains","HASH_COMMENT_MODE","end","inherit","QUOTE_STRING_MODE","relevance","keywords","nomarkup","starts","literal","illegal"],"mappings":"6EAuEAA,EAAOC,QA7DP,SAAgBC,GACd,IAQIC,EAAa,CACfC,UAAW,SACXC,MAAO,yDAMT,MAAO,CACLC,KAAM,gBACNC,QAAS,CAAC,cACVC,kBAAkB,EAClBC,SAAU,CAACP,EAAKQ,kBAAmB,CACjCN,UAAW,UACXC,MAAO,MACPM,IAAK,IACLF,SAAU,CAACN,EAZG,CAChBC,UAAW,SACXC,MAAO,aAYLH,EAAKU,QAAQV,EAAKW,kBAAmB,CACnCC,UAAW,MAEZ,CACDV,UAAW,YACXC,MAAO,MACPS,UAAW,EAGXC,SAAU,CACRC,SAAU,8JAEZC,OAAQ,CACNN,IAAK,IACLG,UAAW,EACXC,SAAU,CACRG,QAAS,yBAEXT,SAAU,CAAC,CACTL,UAAW,OACXC,MAAO,SACPM,IAAK,QACJ,CACDP,UAAW,WACXC,MAAO,YACPM,IAAK,MACLF,SAAU,CAAC,OApDF,CACfL,UAAW,SACXC,MAAO,gBAmDAF,EAjDI,CACXC,UAAW,SACXC,MAAO,QA+CoBH,EAAKW,sBAGhCM,QAAS","file":"react-syntax-highlighter_languages_highlight_apache-12fe6c9102f466dc2601.js","sourcesContent":["/*\nLanguage: Apache config\nAuthor: Ruslan Keba <rukeba@gmail.com>\nContributors: Ivan Sagalaev <maniac@softwaremaniacs.org>\nWebsite: https://httpd.apache.org\nDescription: language definition for Apache configuration files (httpd.conf & .htaccess)\nCategory: common, config\n*/\n\n/** @type LanguageFn */\nfunction apache(hljs) {\n  var NUMBER_REF = {\n    className: 'number',\n    begin: '[\\\\$%]\\\\d+'\n  };\n  var NUMBER = {\n    className: 'number',\n    begin: '\\\\d+'\n  };\n  var IP_ADDRESS = {\n    className: \"number\",\n    begin: '\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}(:\\\\d{1,5})?'\n  };\n  var PORT_NUMBER = {\n    className: \"number\",\n    begin: \":\\\\d{1,5}\"\n  };\n  return {\n    name: 'Apache config',\n    aliases: ['apacheconf'],\n    case_insensitive: true,\n    contains: [hljs.HASH_COMMENT_MODE, {\n      className: 'section',\n      begin: '</?',\n      end: '>',\n      contains: [IP_ADDRESS, PORT_NUMBER, // low relevance prevents us from claming XML/HTML where this rule would\n      // match strings inside of XML tags\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {\n        relevance: 0\n      })]\n    }, {\n      className: 'attribute',\n      begin: /\\w+/,\n      relevance: 0,\n      // keywords arenâ€™t needed for highlighting per se, they only boost relevance\n      // for a very generally defined mode (starts with a word, ends with line-end\n      keywords: {\n        nomarkup: 'order deny allow setenv rewriterule rewriteengine rewritecond documentroot ' + 'sethandler errordocument loadmodule options header listen serverroot ' + 'servername'\n      },\n      starts: {\n        end: /$/,\n        relevance: 0,\n        keywords: {\n          literal: 'on off all deny allow'\n        },\n        contains: [{\n          className: 'meta',\n          begin: '\\\\s\\\\[',\n          end: '\\\\]$'\n        }, {\n          className: 'variable',\n          begin: '[\\\\$%]\\\\{',\n          end: '\\\\}',\n          contains: ['self', NUMBER_REF]\n        }, IP_ADDRESS, NUMBER, hljs.QUOTE_STRING_MODE]\n      }\n    }],\n    illegal: /\\S/\n  };\n}\n\nmodule.exports = apache;"],"sourceRoot":""}