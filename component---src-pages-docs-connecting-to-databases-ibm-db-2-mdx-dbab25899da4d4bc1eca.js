(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{hOKB:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return c})),n.d(t,"default",(function(){return m}));var a=n("k1TG"),o=n("8o2o"),b=(n("q1tI"),n("7ljp")),r=n("hhGP"),c=(n("qKvR"),{});void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/pages/docs/Connecting to Databases/ibm-db2.mdx"}});var i={_frontmatter:c},s=r.a;function m(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(b.b)(s,Object(a.a)({},i,n,{components:t,mdxType:"MDXLayout"}),Object(b.b)("h2",{id:"ibm-db2"},"IBM DB2"),Object(b.b)("p",null,"The ",Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/ibmdb/python-ibmdbsa/tree/master/ibm_db_sa"}),"IBM_DB_SA")," library provides a\nPython / SQLAlchemy interface to IBM Data Servers."),Object(b.b)("p",null,"Here's the recommended connection string:"),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{}),"db2+ibm_db://{username}:{passport}@{hostname}:{port}/{database}\n")),Object(b.b)("p",null,"There are two DB2 dialect versions implemented in SQLAlchemy. If you are connecting to a DB2 version without ",Object(b.b)("inlineCode",{parentName:"p"},"LIMIT [n]")," syntax, the recommended connection string to be able to use the SQL Lab is:"),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{}),"ibm_db_sa://{username}:{passport}@{hostname}:{port}/{database}\n")))}void 0!==m&&m&&m===Object(m)&&Object.isExtensible(m)&&!m.hasOwnProperty("__filemeta")&&Object.defineProperty(m,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/pages/docs/Connecting to Databases/ibm-db2.mdx"}}),m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-docs-connecting-to-databases-ibm-db-2-mdx-dbab25899da4d4bc1eca.js.map