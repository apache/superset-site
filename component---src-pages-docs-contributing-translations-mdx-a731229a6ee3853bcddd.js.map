{"version":3,"sources":["webpack:///./src/pages/docs/Contributing/translations.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"wPAQaA,G,UAAe,S,8NAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,eADR,eAGA,+BAAc,6BAAGC,WAAW,KAAQ,CAChC,KAAQ,sCADE,SAAd,iEAGmC,0BAAYA,WAAW,KAAvB,KAHnC,oBAIA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,oBADZ,gDAIL,yEAAwD,0BAAYA,WAAW,KAAvB,qBAAxD,mDAC2C,0BAAYA,WAAW,KAAvB,KAD3C,oCAEQ,0BAAYA,WAAW,KAAvB,OAFR,kDAGA,wCAAuB,0BAAYA,WAAW,KAAvB,KAAvB,oJAGA,uFACQ,0BAAYA,WAAW,KAAvB,KADR,0BACgF,0BAAYA,WAAW,KAAvB,MADhF,uCAEA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,wDAIL,iBAAQ,CACN,GAAM,+BADR,+BAGA,gCAAe,0BAAYA,WAAW,KAAvB,aAAf,qBAA0F,0BAAYA,WAAW,KAAvB,sBAA1F,oIAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,oBADZ,gKAQL,iBAAQ,CACN,GAAM,0CADR,0CAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,8HAIL,2DAA0C,0BAAYA,WAAW,KAAvB,sCAA1C,mHAEA,iBAAQ,CACN,GAAM,2BADR,2BAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,uGAIL,wFACA,4FACF,0BAAYA,WAAW,KAAvB,wBADE,iDACgH,6BAAGA,WAAW,KAAQ,CAClI,KAAQ,gCADoG,UADhH,sBAIe,0BAAYA,WAAW,KAAvB,MAJf,4CAKa,6BAAGA,WAAW,KAAQ,CAC/B,KAAQ,8DADC,yBALb,KAQA,oKACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,6BAIL,wFAAuE,0BAAYA,WAAW,KAAvB,cAAvE,YACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,2BAIL,kDAAiC,0BAAYA,WAAW,KAAvB,WAAjC,yMAE+C,0BAAYA,WAAW,KAAvB,QAF/C,qEAGwB,0BAAYA,WAAW,KAAvB,0BAHxB,eAG0G,0BAAYA,WAAW,KAAvB,WAH1G,2BAIkB,0BAAYA,WAAW,KAAvB,cAJlB,OAIgF,0BAAYA,WAAW,KAAvB,iBAJhF,yBAImK,0BAAYA,WAAW,KAAvB,SAJnK,mBAKW,0BAAYA,WAAW,KAAvB,gBALX,qBAKyF,0BAAYA,WAAW,KAAvB,qBALzF,iBAMA,0HACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,+CAIL,iBAAQ,CACN,GAAM,sCADR,sCAGA,4FAA2E,0BAAYA,WAAW,KAAvB,iBAA3E,uEAC+C,0BAAYA,WAAW,KAAvB,MAD/C,SACuG,6BAAGA,WAAW,KAAQ,CACzH,KAAQ,gEAD2F,uCADvG,uBAIA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,0JAKL,8BAAa,6BAAGA,WAAW,KAAQ,CAC/B,KAAQ,4CADC,wCAAb,W,4NAOJJ,EAAWK,gBAAiB","file":"component---src-pages-docs-contributing-translations-mdx-a731229a6ee3853bcddd.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/superset/superset/docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"translating\"\n    }}>{`Translating`}</h2>\n    <p>{`We use `}<a parentName=\"p\" {...{\n        \"href\": \"http://babel.pocoo.org/en/latest/\"\n      }}>{`Babel`}</a>{` to translate Superset.\nIn Python files, we import the magic `}<inlineCode parentName=\"p\">{`_`}</inlineCode>{` function using:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`from flask_babel import lazy_gettext as _\n`}</code></pre>\n    <p>{`then wrap our translatable strings with it, e.g. `}<inlineCode parentName=\"p\">{`_('Translate me')`}</inlineCode>{`.\nDuring extraction, string literals passed to `}<inlineCode parentName=\"p\">{`_`}</inlineCode>{` will be added to the\ngenerated `}<inlineCode parentName=\"p\">{`.po`}</inlineCode>{` file for each language for later translation.`}</p>\n    <p>{`At runtime, the `}<inlineCode parentName=\"p\">{`_`}</inlineCode>{` function will return the translation of the given\nstring for the current language, or the given string itself\nif no translation is available.`}</p>\n    <p>{`In TypeScript/JavaScript, the technique is similar:\nwe import `}<inlineCode parentName=\"p\">{`t`}</inlineCode>{` (simple translation), `}<inlineCode parentName=\"p\">{`tn`}</inlineCode>{` (translation containing a number).`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { t, tn } from \"@superset-ui/translation\";\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"enabling-language-selection\"\n    }}>{`Enabling language selection`}</h3>\n    <p>{`Add the `}<inlineCode parentName=\"p\">{`LANGUAGES`}</inlineCode>{` variable to your `}<inlineCode parentName=\"p\">{`superset_config.py`}</inlineCode>{`. Having more than one\noption inside will add a language selection dropdown to the UI on the right side\nof the navigation bar.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`LANGUAGES = {\n    'en': {'flag': 'us', 'name': 'English'},\n    'fr': {'flag': 'fr', 'name': 'French'},\n    'zh': {'flag': 'cn', 'name': 'Chinese'},\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"extracting-new-strings-for-translation\"\n    }}>{`Extracting new strings for translation`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`pybabel extract -F superset/translations/babel.cfg -o superset/translations/messages.pot -k _ -k __ -k t -k tn -k tct .\n`}</code></pre>\n    <p>{`This will update the template file `}<inlineCode parentName=\"p\">{`superset/translations/messages.pot`}</inlineCode>{` with current application strings. Do not forget to update\nthis file with the appropriate license information.`}</p>\n    <h3 {...{\n      \"id\": \"updating-language-files\"\n    }}>{`Updating language files`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{` pybabel update -i superset/translations/messages.pot -d superset/translations --ignore-obsolete\n`}</code></pre>\n    <p>{`This will update language files with the new extracted strings.`}</p>\n    <p>{`You can then translate the strings gathered in files located under\n`}<inlineCode parentName=\"p\">{`superset/translation`}</inlineCode>{`, where there's one per language. You can use `}<a parentName=\"p\" {...{\n        \"href\": \"https://poedit.net/features\"\n      }}>{`Poedit`}</a>{`\nto translate the `}<inlineCode parentName=\"p\">{`po`}</inlineCode>{` file more conveniently.\nThere are some `}<a parentName=\"p\" {...{\n        \"href\": \"https://wiki.lxde.org/en/Translate_*.po_files_with_Poedit\"\n      }}>{`tutorials in the wiki`}</a>{`.`}</p>\n    <p>{`In the case of JS translation, we need to convert the PO file into a JSON file, and we need the global download of the npm package po2json.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm install -g po2json\n`}</code></pre>\n    <p>{`To convert all PO files to formatted JSON files you can use the `}<inlineCode parentName=\"p\">{`po2json.sh`}</inlineCode>{` script.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`./scripts/po2json.sh\n`}</code></pre>\n    <p>{`If you get errors running `}<inlineCode parentName=\"p\">{`po2json`}</inlineCode>{`, you might be running the Ubuntu package with the same\nname, rather than the Node.js package (they have a different format for the arguments). If\nthere is a conflict, you may need to update your `}<inlineCode parentName=\"p\">{`PATH`}</inlineCode>{` environment variable or fully qualify\nthe executable path (e.g. `}<inlineCode parentName=\"p\">{`/usr/local/bin/po2json`}</inlineCode>{` instead of `}<inlineCode parentName=\"p\">{`po2json`}</inlineCode>{`).\nIf you get a lot of `}<inlineCode parentName=\"p\">{`[null,***]`}</inlineCode>{` in `}<inlineCode parentName=\"p\">{`messages.json`}</inlineCode>{`, just delete all the `}<inlineCode parentName=\"p\">{`null,`}</inlineCode>{`.\nFor example, `}<inlineCode parentName=\"p\">{`\"year\":[\"年\"]`}</inlineCode>{` is correct while `}<inlineCode parentName=\"p\">{`\"year\":[null,\"年\"]`}</inlineCode>{`is incorrect.`}</p>\n    <p>{`For the translations to take effect we need to compile translation catalogs into binary MO files.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`pybabel compile -d superset/translations\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"creating-a-new-language-dictionary\"\n    }}>{`Creating a new language dictionary`}</h3>\n    <p>{`To create a dictionary for a new language, run the following, where `}<inlineCode parentName=\"p\">{`LANGUAGE_CODE`}</inlineCode>{` is replaced with\nthe language code for your target language, e.g. `}<inlineCode parentName=\"p\">{`es`}</inlineCode>{` (see `}<a parentName=\"p\" {...{\n        \"href\": \"https://flask-appbuilder.readthedocs.io/en/latest/i18n.html\"\n      }}>{`Flask AppBuilder i18n documentation`}</a>{` for more details):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`pip install -r superset/translations/requirements.txt\npybabel init -i superset/translations/messages.pot -d superset/translations -l LANGUAGE_CODE\n`}</code></pre>\n    <p>{`Then, `}<a parentName=\"p\" {...{\n        \"href\": \"#extracting-new-strings-for-translation\"\n      }}>{`extract strings for the new language`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}