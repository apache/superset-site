{"version":3,"sources":["webpack:///./node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/rust.js"],"names":["module","exports","hljs","NUM_SUFFIX","BUILTINS","name","aliases","keywords","$pattern","IDENT_RE","keyword","literal","built_in","illegal","contains","C_LINE_COMMENT_MODE","COMMENT","inherit","QUOTE_STRING_MODE","begin","className","variants","relevance","beginKeywords","end","excludeEnd","UNDERSCORE_TITLE_MODE","endsParent"],"mappings":"8EA8FAA,EAAOC,QAvFP,SAAcC,GACZ,IAAIC,EAAa,wCAEbC,EACJ,upBAIA,MAAO,CACLC,KAAM,OACNC,QAAS,CAAC,MACVC,SAAU,CACRC,SAAUN,EAAKO,SAAW,KAC1BC,QAXW,2RAYXC,QAAS,8BACTC,SAAUR,GAEZS,QAAS,KACTC,SAAU,CAACZ,EAAKa,oBAAqBb,EAAKc,QAAQ,OAAQ,OAAQ,CAChEF,SAAU,CAAC,UACTZ,EAAKe,QAAQf,EAAKgB,kBAAmB,CACvCC,MAAO,MACPN,QAAS,OACP,CACFO,UAAW,SACXC,SAAU,CAAC,CACTF,MAAO,0BACN,CACDA,MAAO,qCAER,CACDC,UAAW,SACXD,MAAO,2BACN,CACDC,UAAW,SACXC,SAAU,CAAC,CACTF,MAAO,gBAAkBhB,GACxB,CACDgB,MAAO,iBAAmBhB,GACzB,CACDgB,MAAO,uBAAyBhB,GAC/B,CACDgB,MAAO,kDAAoDhB,IAE7DmB,UAAW,GACV,CACDF,UAAW,WACXG,cAAe,KACfC,IAAK,UACLC,YAAY,EACZX,SAAU,CAACZ,EAAKwB,wBACf,CACDN,UAAW,OACXD,MAAO,WACPK,IAAK,MACLV,SAAU,CAAC,CACTM,UAAW,cACXD,MAAO,IACPK,IAAK,OAEN,CACDJ,UAAW,QACXG,cAAe,OACfC,IAAK,IACLV,SAAU,CAACZ,EAAKe,QAAQf,EAAKwB,sBAAuB,CAClDC,YAAY,KAEdd,QAAS,OACR,CACDO,UAAW,QACXG,cAAe,0BACfC,IAAK,IACLV,SAAU,CAACZ,EAAKe,QAAQf,EAAKwB,sBAAuB,CAClDC,YAAY,KAEdd,QAAS,YACR,CACDM,MAAOjB,EAAKO,SAAW,KACvBF,SAAU,CACRK,SAAUR,IAEX,CACDe,MAAO","file":"react-syntax-highlighter_languages_highlight_rust-043d2752eb60527eada8.js","sourcesContent":["/*\nLanguage: Rust\nAuthor: Andrey Vlasovskikh <andrey.vlasovskikh@gmail.com>\nContributors: Roman Shmatov <romanshmatov@gmail.com>, Kasper Andersen <kma_untrusted@protonmail.com>\nWebsite: https://www.rust-lang.org\nCategory: common, system\n*/\nfunction rust(hljs) {\n  var NUM_SUFFIX = '([ui](8|16|32|64|128|size)|f(32|64))\\?';\n  var KEYWORDS = 'abstract as async await become box break const continue crate do dyn ' + 'else enum extern false final fn for if impl in let loop macro match mod ' + 'move mut override priv pub ref return self Self static struct super ' + 'trait true try type typeof unsafe unsized use virtual where while yield';\n  var BUILTINS = // functions\n  'drop ' + // types\n  'i8 i16 i32 i64 i128 isize ' + 'u8 u16 u32 u64 u128 usize ' + 'f32 f64 ' + 'str char bool ' + 'Box Option Result String Vec ' + // traits\n  'Copy Send Sized Sync Drop Fn FnMut FnOnce ToOwned Clone Debug ' + 'PartialEq PartialOrd Eq Ord AsRef AsMut Into From Default Iterator ' + 'Extend IntoIterator DoubleEndedIterator ExactSizeIterator ' + 'SliceConcatExt ToString ' + // macros\n  'assert! assert_eq! bitflags! bytes! cfg! col! concat! concat_idents! ' + 'debug_assert! debug_assert_eq! env! panic! file! format! format_args! ' + 'include_bin! include_str! line! local_data_key! module_path! ' + 'option_env! print! println! select! stringify! try! unimplemented! ' + 'unreachable! vec! write! writeln! macro_rules! assert_ne! debug_assert_ne!';\n  return {\n    name: 'Rust',\n    aliases: ['rs'],\n    keywords: {\n      $pattern: hljs.IDENT_RE + '!?',\n      keyword: KEYWORDS,\n      literal: 'true false Some None Ok Err',\n      built_in: BUILTINS\n    },\n    illegal: '</',\n    contains: [hljs.C_LINE_COMMENT_MODE, hljs.COMMENT('/\\\\*', '\\\\*/', {\n      contains: ['self']\n    }), hljs.inherit(hljs.QUOTE_STRING_MODE, {\n      begin: /b?\"/,\n      illegal: null\n    }), {\n      className: 'string',\n      variants: [{\n        begin: /r(#*)\"(.|\\n)*?\"\\1(?!#)/\n      }, {\n        begin: /b?'\\\\?(x\\w{2}|u\\w{4}|U\\w{8}|.)'/\n      }]\n    }, {\n      className: 'symbol',\n      begin: /'[a-zA-Z_][a-zA-Z0-9_]*/\n    }, {\n      className: 'number',\n      variants: [{\n        begin: '\\\\b0b([01_]+)' + NUM_SUFFIX\n      }, {\n        begin: '\\\\b0o([0-7_]+)' + NUM_SUFFIX\n      }, {\n        begin: '\\\\b0x([A-Fa-f0-9_]+)' + NUM_SUFFIX\n      }, {\n        begin: '\\\\b(\\\\d[\\\\d_]*(\\\\.[0-9_]+)?([eE][+-]?[0-9_]+)?)' + NUM_SUFFIX\n      }],\n      relevance: 0\n    }, {\n      className: 'function',\n      beginKeywords: 'fn',\n      end: '(\\\\(|<)',\n      excludeEnd: true,\n      contains: [hljs.UNDERSCORE_TITLE_MODE]\n    }, {\n      className: 'meta',\n      begin: '#\\\\!?\\\\[',\n      end: '\\\\]',\n      contains: [{\n        className: 'meta-string',\n        begin: /\"/,\n        end: /\"/\n      }]\n    }, {\n      className: 'class',\n      beginKeywords: 'type',\n      end: ';',\n      contains: [hljs.inherit(hljs.UNDERSCORE_TITLE_MODE, {\n        endsParent: true\n      })],\n      illegal: '\\\\S'\n    }, {\n      className: 'class',\n      beginKeywords: 'trait enum struct union',\n      end: '{',\n      contains: [hljs.inherit(hljs.UNDERSCORE_TITLE_MODE, {\n        endsParent: true\n      })],\n      illegal: '[\\\\w\\\\d]'\n    }, {\n      begin: hljs.IDENT_RE + '::',\n      keywords: {\n        built_in: BUILTINS\n      }\n    }, {\n      begin: '->'\n    }]\n  };\n}\n\nmodule.exports = rust;"],"sourceRoot":""}