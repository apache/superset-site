{"version":3,"sources":["webpack:///./src/pages/docs/Contributing/hooks-and-linting.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"0PAQaA,G,UAAe,S,mOAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,aADR,aAGA,uEAAsD,6BAAGC,WAAW,KAAQ,CACxE,KAAQ,4BAD0C,cAAtD,mCAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,uEAKL,oFACA,gFACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,wBAIL,2DACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,iCAIL,iBAAQ,CACN,GAAM,WADR,WAGA,iBAAQ,CACN,GAAM,UADR,UAGA,+BAAc,6BAAGA,WAAW,KAAQ,CAChC,KAAQ,wBADE,UAAd,0CAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,kCAKL,sHAAqG,0BAAYA,WAAW,KAAvB,aAArG,sMACA,6EAA4D,6BAAGA,WAAW,KAAQ,CAC9E,KAAQ,oCADgD,SAA5D,uEAG0D,6BAAGA,WAAW,KAAQ,CAC5E,KAAQ,mEAD8C,wBAG1D,iBAAQ,CACN,GAAM,cADR,cAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,iDAML,uGAAsF,0BAAYA,WAAW,KAAvB,iBAAtF,UACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,qE,iOAUTJ,EAAWK,gBAAiB","file":"component---src-pages-docs-contributing-hooks-and-linting-mdx-f773fd0696b210babb84.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/superset/superset/docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"git-hooks\"\n    }}>{`Git Hooks`}</h2>\n    <p>{`Superset uses Git pre-commit hooks courtesy of `}<a parentName=\"p\" {...{\n        \"href\": \"https://pre-commit.com/\"\n      }}>{`pre-commit`}</a>{`. To install run the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`pip3 install -r requirements/integration.txt\npre-commit install\n`}</code></pre>\n    <p>{`A series of checks will now run when you make a git commit.`}</p>\n    <p>{`Alternatively it is possible to run pre-commit via tox:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`tox -e pre-commit\n`}</code></pre>\n    <p>{`Or by running pre-commit manually:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`pre-commit run --all-files\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"linting\"\n    }}>{`Linting`}</h2>\n    <h3 {...{\n      \"id\": \"python\"\n    }}>{`Python`}</h3>\n    <p>{`We use `}<a parentName=\"p\" {...{\n        \"href\": \"https://pylint.org/\"\n      }}>{`Pylint`}</a>{` for linting which can be invoked via:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`# for python\ntox -e pylint\n`}</code></pre>\n    <p>{`In terms of best practices please advoid blanket disablement of Pylint messages globally (via `}<inlineCode parentName=\"p\">{`.pylintrc`}</inlineCode>{`) or top-level within the file header, albeit there being a few exceptions. Disablement should occur inline as it prevents masking issues and provides context as to why said message is disabled.`}</p>\n    <p>{`Additionally the Python code is auto-formatted using `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/python/black\"\n      }}>{`Black`}</a>{` which\nis configured as a pre-commit hook. There are also numerous `}<a parentName=\"p\" {...{\n        \"href\": \"https://black.readthedocs.io/en/stable/editor_integration.html\"\n      }}>{`editor integrations`}</a></p>\n    <h3 {...{\n      \"id\": \"typescript\"\n    }}>{`TypeScript`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`cd superset-frontend\nnpm ci\nnpm run lint\n`}</code></pre>\n    <p>{`If using the eslint extension with vscode, put the following in your workspace `}<inlineCode parentName=\"p\">{`settings.json`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"eslint.workingDirectories\": [\n  \"superset-frontend\"\n]\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}