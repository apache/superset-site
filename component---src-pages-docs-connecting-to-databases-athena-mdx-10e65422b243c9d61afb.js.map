{"version":3,"sources":["webpack:///./src/pages/docs/Connecting to Databases/athena.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"wPAQaA,G,UAAe,S,mOAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,cADR,cAGA,iBAAQ,CACN,GAAM,gBADR,gBAGA,qBAAG,6BAAGC,WAAW,KAAQ,CACrB,KAAQ,2CADT,gBAAH,kDAGF,6BAAGA,WAAW,KAAQ,CAChB,KAAQ,wEADd,6BAHE,KAMA,+EACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,wJAEL,6GACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,6BAEL,iBAAQ,CACN,GAAM,YADR,YAGA,yCAAwB,6BAAGA,WAAW,KAAQ,CAC1C,KAAQ,uCADY,oBAAxB,8DAIA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,8J,iOAMTJ,EAAWK,gBAAiB","file":"component---src-pages-docs-connecting-to-databases-athena-mdx-10e65422b243c9d61afb.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/superset/superset/docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"aws-athena\"\n    }}>{`AWS Athena`}</h2>\n    <h3 {...{\n      \"id\": \"pyathenajdbc\"\n    }}>{`PyAthenaJDBC`}</h3>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://pypi.org/project/PyAthenaJDBC/\"\n      }}>{`PyAthenaJDBC`}</a>{` is a Python DB 2.0 compliant wrapper for the\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.aws.amazon.com/athena/latest/ug/connect-with-jdbc.html\"\n      }}>{`Amazon Athena JDBC driver`}</a>{`.`}</p>\n    <p>{`The connection string for Amazon Athena is as follows:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`awsathena+jdbc://{aws_access_key_id}:{aws_secret_access_key}@athena.{region_name}.amazonaws.com/{schema_name}?s3_staging_dir={s3_staging_dir}&...\n`}</code></pre>\n    <p>{`Note that you'll need to escape & encode when forming the connection string like so:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`s3://... -> s3%3A//...\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"pyathena\"\n    }}>{`PyAthena`}</h3>\n    <p>{`You can also use `}<a parentName=\"p\" {...{\n        \"href\": \"https://pypi.org/project/PyAthena/\"\n      }}>{`PyAthena library`}</a>{` (no Java required) with the\nfollowing connection string:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`awsathena+rest://{aws_access_key_id}:{aws_secret_access_key}@athena.{region_name}.amazonaws.com/{schema_name}?s3_staging_dir={s3_staging_dir}&...\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}