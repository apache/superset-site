{"version":3,"sources":["webpack:///./src/pages/docs/Contributing/pull-request-guidelines.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-docs-contributing-pull-request-guidelines-mdx-00de0f5c8317c4b30761.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/superset/superset/docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"pull-request-guidelines\"\n    }}>{`Pull Request Guidelines`}</h2>\n    <p>{`A philosophy we would like to strongly encourage is`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Before creating a PR, create an issue.`}</p>\n    </blockquote>\n    <p>{`The purpose is to separate problem from possible solutions.`}</p>\n    <p><strong parentName=\"p\">{`Bug fixes:`}</strong>{` If you’re only fixing a small bug, it’s fine to submit a pull request right away but we highly recommend to file an issue detailing what you’re fixing. This is helpful in case we don’t accept that specific fix but want to keep track of the issue. Please keep in mind that the project maintainers reserve the rights to accept or reject incoming PRs, so it is better to separate the issue and the code to fix it from each other. In some cases, project maintainers may request you to create a separate issue from PR before proceeding.`}</p>\n    <p><strong parentName=\"p\">{`Refactor:`}</strong>{` For small refactors, it can be a standalone PR itself detailing what you are refactoring and why. If there are concerns, project maintainers may request you to create a `}<inlineCode parentName=\"p\">{`#SIP`}</inlineCode>{` for the PR before proceeding.`}</p>\n    <p><strong parentName=\"p\">{`Feature/Large changes:`}</strong>{` If you intend to change the public API, or make any non-trivial changes to the implementation, we require you to file a new issue as `}<inlineCode parentName=\"p\">{`#SIP`}</inlineCode>{` (Superset Improvement Proposal). This lets us reach an agreement on your proposal before you put significant effort into it. You are welcome to submit a PR along with the SIP (sometimes necessary for demonstration), but we will not review/merge the code until the SIP is approved.`}</p>\n    <p>{`In general, small PRs are always easier to review than large PRs. The best practice is to break your work into smaller independent PRs and refer to the same issue. This will greatly reduce turnaround time.`}</p>\n    <p>{`If you wish to share your work which is not ready to merge yet, create a `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.blog/2019-02-14-introducing-draft-pull-requests/\"\n      }}>{`Draft PR`}</a>{`. This will enable maintainers and the CI runner to prioritize mature PR's.`}</p>\n    <p>{`Finally, never submit a PR that will put master branch in broken state. If the PR is part of multiple PRs to complete a large feature and cannot work on its own, you can create a feature branch and merge all related PRs into the feature branch before creating a PR from feature branch to master.`}</p>\n    <h3 {...{\n      \"id\": \"protocol\"\n    }}>{`Protocol`}</h3>\n    <h4 {...{\n      \"id\": \"authoring\"\n    }}>{`Authoring`}</h4>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Fill in all sections of the PR template.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Title the PR with one of the following semantic prefixes (inspired by `}<a parentName=\"p\" {...{\n            \"href\": \"http://karma-runner.github.io/0.10/dev/git-commit-msg.html%5D\"\n          }}>{`Karma`}</a>{`):`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`feat`}</inlineCode>{` (new feature)`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`fix`}</inlineCode>{` (bug fix)`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`docs`}</inlineCode>{` (changes to the documentation)`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`style`}</inlineCode>{` (formatting, missing semi colons, etc; no application logic change)`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`refactor`}</inlineCode>{` (refactoring code)`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`test`}</inlineCode>{` (adding missing tests, refactoring tests; no application logic change)`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`chore`}</inlineCode>{` (updating tasks etc; no application logic change)`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`perf`}</inlineCode>{` (performance-related change)`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`build`}</inlineCode>{` (build tooling, Docker configuration change)`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`ci`}</inlineCode>{` (test runner, Github Actions workflow changes)`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`other`}</inlineCode>{` (changes that don't correspond to the above -- should be rare!)`}</li>\n          <li parentName=\"ul\">{`Examples:`}\n            <ul parentName=\"li\">\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`feat: export charts as ZIP files`}</inlineCode></li>\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`perf(api): improve API info performance`}</inlineCode></li>\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`fix(chart-api): cached-indicator always shows value is cached`}</inlineCode></li>\n            </ul>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Add prefix `}<inlineCode parentName=\"p\">{`[WIP]`}</inlineCode>{` to title if not ready for review (WIP = work-in-progress). We recommend creating a PR with `}<inlineCode parentName=\"p\">{`[WIP]`}</inlineCode>{` first and remove it once you have passed CI test and read through your code changes at least once.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`If you believe your PR contributes a potentially breaking change, put a `}<inlineCode parentName=\"p\">{`!`}</inlineCode>{` after the semantic prefix but before the colon in the PR title, like so: `}<inlineCode parentName=\"p\">{`feat!: Added foo functionality to bar`}</inlineCode></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Screenshots/GIFs:`}</strong>{` Changes to user interface require before/after screenshots, or GIF for interactions`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Recommended capture tools (`}<a parentName=\"li\" {...{\n              \"href\": \"https://getkap.co/\"\n            }}>{`Kap`}</a>{`, `}<a parentName=\"li\" {...{\n              \"href\": \"https://www.cockos.com/licecap/\"\n            }}>{`LICEcap`}</a>{`, `}<a parentName=\"li\" {...{\n              \"href\": \"https://download.cnet.com/Skitch/3000-13455_4-189876.html\"\n            }}>{`Skitch`}</a>{`)`}</li>\n          <li parentName=\"ul\">{`If no screenshot is provided, the committers will mark the PR with `}<inlineCode parentName=\"li\">{`need:screenshot`}</inlineCode>{` label and will not review until screenshot is provided.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Dependencies:`}</strong>{` Be careful about adding new dependency and avoid unnecessary dependencies.`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`For Python, include it in `}<inlineCode parentName=\"li\">{`setup.py`}</inlineCode>{` denoting any specific restrictions and in `}<inlineCode parentName=\"li\">{`requirements.txt`}</inlineCode>{` pinned to a specific version which ensures that the application build is deterministic.`}</li>\n          <li parentName=\"ul\">{`For TypeScript/JavaScript, include new libraries in `}<inlineCode parentName=\"li\">{`package.json`}</inlineCode></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Tests:`}</strong>{` The pull request should include tests, either as doctests, unit tests, or both. Make sure to resolve all errors and test failures. See `}<a parentName=\"p\" {...{\n            \"href\": \"#testing\"\n          }}>{`Testing`}</a>{` for how to run tests.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Documentation:`}</strong>{` If the pull request adds functionality, the docs should be updated as part of the same PR.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`CI:`}</strong>{` Reviewers will not review the code until all CI tests are passed. Sometimes there can be flaky tests. You can close and open PR to re-run CI test. Please report if the issue persists. After the CI fix has been deployed to `}<inlineCode parentName=\"p\">{`master`}</inlineCode>{`, please rebase your PR.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Code coverage:`}</strong>{` Please ensure that code coverage does not decrease.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Remove `}<inlineCode parentName=\"p\">{`[WIP]`}</inlineCode>{` when ready for review. Please note that it may be merged soon after approved so please make sure the PR is ready to merge and do not expect more time for post-approval edits.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`If the PR was not ready for review and inactive for > 30 days, we will close it due to inactivity. The author is welcome to re-open and update.`}</p>\n      </li>\n    </ul>\n    <h4 {...{\n      \"id\": \"reviewing\"\n    }}>{`Reviewing`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`Use constructive tone when writing reviews.`}</li>\n      <li parentName=\"ul\">{`If there are changes required, state clearly what needs to be done before the PR can be approved.`}</li>\n      <li parentName=\"ul\">{`If you are asked to update your pull request with some changes there's no need to create a new one. Push your changes to the same branch.`}</li>\n      <li parentName=\"ul\">{`The committers reserve the right to reject any PR and in some cases may request the author to file an issue.`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"test-environments\"\n    }}>{`Test Environments`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`Members of the Apache GitHub org can launch an ephemeral test environment directly on a pull request by creating a comment containing (only) the command `}<inlineCode parentName=\"li\">{`/testenv up`}</inlineCode>{`.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Note that org membership must be public in order for this validation to function properly.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Feature flags may be set for a test environment by specifying the flag name (prefixed with `}<inlineCode parentName=\"li\">{`FEATURE_`}</inlineCode>{`) and value after the command.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Format: `}<inlineCode parentName=\"li\">{`/testenv up FEATURE_<feature flag name>=true|false`}</inlineCode></li>\n          <li parentName=\"ul\">{`Example: `}<inlineCode parentName=\"li\">{`/testenv up FEATURE_DASHBOARD_NATIVE_FILTERS=true`}</inlineCode></li>\n          <li parentName=\"ul\">{`Multiple feature flags may be set in single command, separated by whitespace`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`A comment will be created by the workflow script with the address and login information for the ephemeral environment.`}</li>\n      <li parentName=\"ul\">{`Test environments may be created once the Docker build CI workflow for the PR has completed successfully.`}</li>\n      <li parentName=\"ul\">{`Test environments do not currently update automatically when new commits are added to a pull request.`}</li>\n      <li parentName=\"ul\">{`Test environments do not currently support async workers, though this is planned.`}</li>\n      <li parentName=\"ul\">{`Running test environments will be shutdown upon closing the pull request.`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"merging\"\n    }}>{`Merging`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`At least one approval is required for merging a PR.`}</li>\n      <li parentName=\"ul\">{`PR is usually left open for at least 24 hours before merging.`}</li>\n      <li parentName=\"ul\">{`After the PR is merged, `}<a parentName=\"li\" {...{\n          \"href\": \"https://help.github.com/articles/closing-issues-using-keywords/\"\n        }}>{`close the corresponding issue(s)`}</a>{`.`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"post-merge-responsibility\"\n    }}>{`Post-merge Responsibility`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`Project maintainers may contact the PR author if new issues are introduced by the PR.`}</li>\n      <li parentName=\"ul\">{`Project maintainers may revert your changes if a critical issue is found, such as breaking master branch CI.`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}