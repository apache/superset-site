{"version":3,"sources":["webpack:///./src/pages/docs/Connecting to Databases/databricks.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"0PAQaA,G,UAAe,S,uOAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,cADR,cAGA,gEAA+C,6BAAGC,WAAW,KAAQ,CACjE,KAAQ,+CADmC,oBAA/C,+CAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,+CAIL,oLAAmK,6BAAGA,WAAW,KAAQ,CACrL,KAAQ,6DADuJ,iBAAnK,KAGA,iBAAQ,CACN,GAAM,QADR,QAGA,wGACA,sBACE,kBAAIA,WAAW,MAAf,mBACA,kBAAIA,WAAW,MAAf,QACA,kBAAIA,WAAW,MAAf,cAEF,uGACA,6GACA,0JACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,wFAEL,iIACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,+DAEL,iBAAQ,CACN,GAAM,QADR,QAGA,+DAA8C,6BAAGA,WAAW,KAAQ,CAChE,KAAQ,uDADkC,kCAA9C,KAGA,iFACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,wFAEL,0DACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,sGAEL,mDACA,sBACE,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,mDAApB,aACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,gDAApB,aAEF,4GACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,8G,qOAMTJ,EAAWK,gBAAiB","file":"component---src-pages-docs-connecting-to-databases-databricks-mdx-8eb0ee82d15d490d1470.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/superset/superset/docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"databricks\"\n    }}>{`Databricks`}</h2>\n    <p>{`To connect to Databricks, first install `}<a parentName=\"p\" {...{\n        \"href\": \"https://pypi.org/project/databricks-dbapi/\"\n      }}>{`databricks-dbapi`}</a>{` with the optional SQLAlchemy dependencies:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`pip install databricks-dbapi[sqlalchemy]\n`}</code></pre>\n    <p>{`There are two ways to connect to Databricks: using a Hive connector or an ODBC connector. Both ways work similarly, but only ODBC can be used to connect to `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.databricks.com/sql/admin/sql-endpoints.html\"\n      }}>{`SQL endpoints`}</a>{`.`}</p>\n    <h3 {...{\n      \"id\": \"hive\"\n    }}>{`Hive`}</h3>\n    <p>{`To use the Hive connector you need the following information from your cluster:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Server hostname`}</li>\n      <li parentName=\"ul\">{`Port`}</li>\n      <li parentName=\"ul\">{`HTTP path`}</li>\n    </ul>\n    <p>{`These can be found under \"Configuration\" -> \"Advanced Options\" -> \"JDBC/ODBC\".`}</p>\n    <p>{`You also need an access token from \"Settings\" -> \"User Settings\" -> \"Access Tokens\".`}</p>\n    <p>{`Once you have all this information, add a database of type \"Databricks (Hive)\" in Superset, and use the following SQLAlchemy URI:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`databricks+pyhive://token:{access token}@{server hostname}:{port}/{database name}\n`}</code></pre>\n    <p>{`You also need to add the following configuration to \"Other\" -> \"Engine Parameters\", with your HTTP path:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{\"connect_args\": {\"http_path\": \"sql/protocolv1/o/****\"}}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"odbc\"\n    }}>{`ODBC`}</h3>\n    <p>{`For ODBC you first need to install the `}<a parentName=\"p\" {...{\n        \"href\": \"https://databricks.com/spark/odbc-drivers-download\"\n      }}>{`ODBC drivers for your platform`}</a>{`.`}</p>\n    <p>{`For a regular connection use this as the SQLAlchemy URI:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`databricks+pyodbc://token:{access token}@{server hostname}:{port}/{database name}\n`}</code></pre>\n    <p>{`And for the connection arguments:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{\"connect_args\": {\"http_path\": \"sql/protocolv1/o/****\", \"driver_path\": \"/path/to/odbc/driver\"}}\n`}</code></pre>\n    <p>{`The driver path should be:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`/Library/simba/spark/lib/libsparkodbc_sbu.dylib`}</inlineCode>{` (Mac OS)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`/opt/simba/spark/lib/64/libsparkodbc_sb64.so`}</inlineCode>{` (Linux)`}</li>\n    </ul>\n    <p>{`For a connection to a SQL endpoint you need to use the HTTP path from the endpoint:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{\"connect_args\": {\"http_path\": \"/sql/1.0/endpoints/****\", \"driver_path\": \"/path/to/odbc/driver\"}}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}