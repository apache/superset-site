{"version":3,"sources":["webpack:///./src/pages/docs/Connecting to Databases/elasticsearch.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"wPAQaA,G,UAAe,S,0OAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,iBADR,iBAGA,gFACF,6BAAGC,WAAW,KAAQ,CAChB,KAAQ,qDADd,uBADE,KAIA,iFACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,0DAEL,qBAAG,sBAAQA,WAAW,KAAnB,gBACH,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,2DAEL,8JAEA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,wBAEL,8EACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,8CAEL,0HACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,gIAOL,wF,wOAKJJ,EAAWK,gBAAiB","file":"component---src-pages-docs-connecting-to-databases-elasticsearch-mdx-91e3d47f05e625a30125.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/superset/superset/docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"elasticsearch\"\n    }}>{`Elasticsearch`}</h2>\n    <p>{`The recommended connector library for Elasticsearch is\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/preset-io/elasticsearch-dbapi\"\n      }}>{`elasticsearch-dbapi`}</a>{`.`}</p>\n    <p>{`The connection string for Elasticsearch looks like this:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`elasticsearch+http://{user}:{password}@{host}:9200/\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Using HTTPS`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`elasticsearch+https://{user}:{password}@{host}:9200/\n`}</code></pre>\n    <p>{`Elasticsearch as a default limit of 10000 rows, so you can increase this limit on your cluster or\nset Supersetâ€™s row limit on config`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`ROW_LIMIT = 10000\n`}</code></pre>\n    <p>{`You can query multiple indices on SQL Lab for example`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`SELECT timestamp, agent FROM \"logstash\"\n`}</code></pre>\n    <p>{`But, to use visualizations for multiple indices you need to create an alias index on your cluster`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`POST /_aliases\n{\n    \"actions\" : [\n        { \"add\" : { \"index\" : \"logstash-**\", \"alias\" : \"logstash_all\" } }\n    ]\n}\n`}</code></pre>\n    <p>{`Then register your table with the alias name logstasg_all`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}