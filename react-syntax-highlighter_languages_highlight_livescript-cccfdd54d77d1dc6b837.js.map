{"version":3,"sources":["webpack:///./node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/livescript.js"],"names":["KEYWORDS","LITERALS","BUILT_INS","concat","module","exports","hljs","KEYWORDS$1","keyword","join","literal","built_in","JS_IDENT_RE","TITLE","inherit","TITLE_MODE","begin","SUBST","className","end","keywords","SUBST_SIMPLE","EXPRESSIONS","BINARY_NUMBER_MODE","relevance","starts","variants","contains","BACKSLASH_ESCAPE","excludeEnd","HASH_COMMENT_MODE","excludeBegin","subLanguage","PARAMS","returnBegin","name","aliases","illegal","COMMENT","beginKeywords","endsWithParent","returnEnd"],"mappings":"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","file":"react-syntax-highlighter_languages_highlight_livescript-cccfdd54d77d1dc6b837.js","sourcesContent":["var KEYWORDS = [\"as\", // for exports\n\"in\", \"of\", \"if\", \"for\", \"while\", \"finally\", \"var\", \"new\", \"function\", \"do\", \"return\", \"void\", \"else\", \"break\", \"catch\", \"instanceof\", \"with\", \"throw\", \"case\", \"default\", \"try\", \"switch\", \"continue\", \"typeof\", \"delete\", \"let\", \"yield\", \"const\", \"class\", // JS handles these with a special rule\n// \"get\",\n// \"set\",\n\"debugger\", \"async\", \"await\", \"static\", \"import\", \"from\", \"export\", \"extends\"];\nvar LITERALS = [\"true\", \"false\", \"null\", \"undefined\", \"NaN\", \"Infinity\"];\nvar TYPES = [\"Intl\", \"DataView\", \"Number\", \"Math\", \"Date\", \"String\", \"RegExp\", \"Object\", \"Function\", \"Boolean\", \"Error\", \"Symbol\", \"Set\", \"Map\", \"WeakSet\", \"WeakMap\", \"Proxy\", \"Reflect\", \"JSON\", \"Promise\", \"Float64Array\", \"Int16Array\", \"Int32Array\", \"Int8Array\", \"Uint16Array\", \"Uint32Array\", \"Float32Array\", \"Array\", \"Uint8Array\", \"Uint8ClampedArray\", \"ArrayBuffer\"];\nvar ERROR_TYPES = [\"EvalError\", \"InternalError\", \"RangeError\", \"ReferenceError\", \"SyntaxError\", \"TypeError\", \"URIError\"];\nvar BUILT_IN_GLOBALS = [\"setInterval\", \"setTimeout\", \"clearInterval\", \"clearTimeout\", \"require\", \"exports\", \"eval\", \"isFinite\", \"isNaN\", \"parseFloat\", \"parseInt\", \"decodeURI\", \"decodeURIComponent\", \"encodeURI\", \"encodeURIComponent\", \"escape\", \"unescape\"];\nvar BUILT_IN_VARIABLES = [\"arguments\", \"this\", \"super\", \"console\", \"window\", \"document\", \"localStorage\", \"module\", \"global\" // Node.js\n];\nvar BUILT_INS = [].concat(BUILT_IN_GLOBALS, BUILT_IN_VARIABLES, TYPES, ERROR_TYPES);\n/*\nLanguage: LiveScript\nAuthor: Taneli Vatanen <taneli.vatanen@gmail.com>\nContributors: Jen Evers-Corvina <jen@sevvie.net>\nOrigin: coffeescript.js\nDescription: LiveScript is a programming language that transcompiles to JavaScript. For info about language see http://livescript.net/\nWebsite: https://livescript.net\nCategory: scripting\n*/\n\nfunction livescript(hljs) {\n  var LIVESCRIPT_BUILT_INS = ['npm', 'print'];\n  var LIVESCRIPT_LITERALS = ['yes', 'no', 'on', 'off', 'it', 'that', 'void'];\n  var LIVESCRIPT_KEYWORDS = ['then', 'unless', 'until', 'loop', 'of', 'by', 'when', 'and', 'or', 'is', 'isnt', 'not', 'it', 'that', 'otherwise', 'from', 'to', 'til', 'fallthrough', 'case', 'enum', 'native', 'list', 'map', '__hasProp', '__extends', '__slice', '__bind', '__indexOf'];\n  var KEYWORDS$1 = {\n    keyword: KEYWORDS.concat(LIVESCRIPT_KEYWORDS).join(\" \"),\n    literal: LITERALS.concat(LIVESCRIPT_LITERALS).join(\" \"),\n    built_in: BUILT_INS.concat(LIVESCRIPT_BUILT_INS).join(\" \")\n  };\n  var JS_IDENT_RE = '[A-Za-z$_](?:\\-[0-9A-Za-z$_]|[0-9A-Za-z$_])*';\n  var TITLE = hljs.inherit(hljs.TITLE_MODE, {\n    begin: JS_IDENT_RE\n  });\n  var SUBST = {\n    className: 'subst',\n    begin: /#\\{/,\n    end: /}/,\n    keywords: KEYWORDS$1\n  };\n  var SUBST_SIMPLE = {\n    className: 'subst',\n    begin: /#[A-Za-z$_]/,\n    end: /(?:\\-[0-9A-Za-z$_]|[0-9A-Za-z$_])*/,\n    keywords: KEYWORDS$1\n  };\n  var EXPRESSIONS = [hljs.BINARY_NUMBER_MODE, {\n    className: 'number',\n    begin: '(\\\\b0[xX][a-fA-F0-9_]+)|(\\\\b\\\\d(\\\\d|_\\\\d)*(\\\\.(\\\\d(\\\\d|_\\\\d)*)?)?(_*[eE]([-+]\\\\d(_\\\\d|\\\\d)*)?)?[_a-z]*)',\n    relevance: 0,\n    starts: {\n      end: '(\\\\s*/)?',\n      relevance: 0\n    } // a number tries to eat the following slash to prevent treating it as a regexp\n\n  }, {\n    className: 'string',\n    variants: [{\n      begin: /'''/,\n      end: /'''/,\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: /'/,\n      end: /'/,\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: /\"\"\"/,\n      end: /\"\"\"/,\n      contains: [hljs.BACKSLASH_ESCAPE, SUBST, SUBST_SIMPLE]\n    }, {\n      begin: /\"/,\n      end: /\"/,\n      contains: [hljs.BACKSLASH_ESCAPE, SUBST, SUBST_SIMPLE]\n    }, {\n      begin: /\\\\/,\n      end: /(\\s|$)/,\n      excludeEnd: true\n    }]\n  }, {\n    className: 'regexp',\n    variants: [{\n      begin: '//',\n      end: '//[gim]*',\n      contains: [SUBST, hljs.HASH_COMMENT_MODE]\n    }, {\n      // regex can't start with space to parse x / 2 / 3 as two divisions\n      // regex can't start with *, and it supports an \"illegal\" in the main mode\n      begin: /\\/(?![ *])(\\\\\\/|.)*?\\/[gim]*(?=\\W)/\n    }]\n  }, {\n    begin: '@' + JS_IDENT_RE\n  }, {\n    begin: '``',\n    end: '``',\n    excludeBegin: true,\n    excludeEnd: true,\n    subLanguage: 'javascript'\n  }];\n  SUBST.contains = EXPRESSIONS;\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\(',\n    returnBegin: true,\n\n    /* We need another contained nameless mode to not have every nested\n    pair of parens to be called \"params\" */\n    contains: [{\n      begin: /\\(/,\n      end: /\\)/,\n      keywords: KEYWORDS$1,\n      contains: ['self'].concat(EXPRESSIONS)\n    }]\n  };\n  var SYMBOLS = {\n    begin: '(#=>|=>|\\\\|>>|-?->|\\\\!->)'\n  };\n  return {\n    name: 'LiveScript',\n    aliases: ['ls'],\n    keywords: KEYWORDS$1,\n    illegal: /\\/\\*/,\n    contains: EXPRESSIONS.concat([hljs.COMMENT('\\\\/\\\\*', '\\\\*\\\\/'), hljs.HASH_COMMENT_MODE, SYMBOLS, // relevance booster\n    {\n      className: 'function',\n      contains: [TITLE, PARAMS],\n      returnBegin: true,\n      variants: [{\n        begin: '(' + JS_IDENT_RE + '\\\\s*(?:=|:=)\\\\s*)?(\\\\(.*\\\\))?\\\\s*\\\\B\\\\->\\\\*?',\n        end: '\\\\->\\\\*?'\n      }, {\n        begin: '(' + JS_IDENT_RE + '\\\\s*(?:=|:=)\\\\s*)?!?(\\\\(.*\\\\))?\\\\s*\\\\B[-~]{1,2}>\\\\*?',\n        end: '[-~]{1,2}>\\\\*?'\n      }, {\n        begin: '(' + JS_IDENT_RE + '\\\\s*(?:=|:=)\\\\s*)?(\\\\(.*\\\\))?\\\\s*\\\\B!?[-~]{1,2}>\\\\*?',\n        end: '!?[-~]{1,2}>\\\\*?'\n      }]\n    }, {\n      className: 'class',\n      beginKeywords: 'class',\n      end: '$',\n      illegal: /[:=\"\\[\\]]/,\n      contains: [{\n        beginKeywords: 'extends',\n        endsWithParent: true,\n        illegal: /[:=\"\\[\\]]/,\n        contains: [TITLE]\n      }, TITLE]\n    }, {\n      begin: JS_IDENT_RE + ':',\n      end: ':',\n      returnBegin: true,\n      returnEnd: true,\n      relevance: 0\n    }])\n  };\n}\n\nmodule.exports = livescript;"],"sourceRoot":""}