{"version":3,"sources":["webpack:///./src/pages/docs/installation/frontend-assets.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"wPAQaA,G,UAAe,S,iOAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,YADR,YAGA,yGAAwF,0BAAYC,WAAW,KAAvB,qBAAxF,wJAEE,0BAAYA,WAAW,KAAvB,qBAFF,4PAKA,iBAAQ,CACN,GAAM,gBADR,gBAGA,iBAAQ,CACN,GAAM,gBADR,gBAGA,gGACA,sBACE,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,WAApB,gBACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,OAApB,gBAEF,2CAA0B,6BAAGA,WAAW,KAAQ,CAC5C,KAAQ,kCADc,OAA1B,qCAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,gJAQL,qFAAoE,0BAAYA,WAAW,KAAvB,OAApE,UACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,4FAIL,mEAAkD,6BAAGA,WAAW,KAAQ,CACpE,KAAQ,2DADsC,OAAlD,4FAIA,iBAAQ,CACN,GAAM,wBADR,wBAGA,mEAAkD,0BAAYA,WAAW,KAAvB,gBAAlD,SACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,yHAQL,iBAAQ,CACN,GAAM,gBADR,gBAGA,uEACA,sBACE,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,iBAApB,2DACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,sBAApB,uEACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,8BAApB,oFAEF,iBAAQ,CACN,GAAM,sBADR,sBAGA,4DAA2C,0BAAYA,WAAW,KAAvB,yBAA3C,wCAAqJ,0BAAYA,WAAW,KAAvB,yBAArJ,8CAEA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,oZAcL,4BAAW,0BAAYA,WAAW,KAAvB,eAAX,+OAEA,iBAAQ,CACN,GAAM,sBADR,sBAGA,yFACA,sBACE,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,qBAApB,uCACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,eAApB,2F,+NAMNJ,EAAWK,gBAAiB","file":"component---src-pages-docs-installation-frontend-assets-mdx-3781ea69167ea64c23b5.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/superset/superset/docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h3 {...{\n      \"id\": \"frontend\"\n    }}>{`Frontend`}</h3>\n    <p>{`If you plan to make contributions to the superset frontend (contained within the `}<inlineCode parentName=\"p\">{`superset-frontend`}</inlineCode>{` folder in the main repo),\nfrontend assets (TypeScript, JavaScript, CSS, and images) must be compiled in order to properly display the web UI.\nThe `}<inlineCode parentName=\"p\">{`superset-frontend`}</inlineCode>{` directory contains all NPM-managed frontend assets.\nNote that for some legacy pages there are additional frontend assets bundled with Flask-Appbuilder (e.g. jQuery and bootstrap).\nThese are not managed by NPM and may be phased out in the future.`}</p>\n    <h4 {...{\n      \"id\": \"prerequisite\"\n    }}>{`Prerequisite`}</h4>\n    <h5 {...{\n      \"id\": \"nvm-and-node\"\n    }}>{`nvm and node`}</h5>\n    <p>{`First, be sure you are using the following versions of Node.js and npm:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Node.js`}</inlineCode>{`: Version 16`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`npm`}</inlineCode>{`: Version 7`}</li>\n    </ul>\n    <p>{`We recommend using `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/nvm-sh/nvm\"\n      }}>{`nvm`}</a>{` to manage your node environment:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.0/install.sh | bash\n\ncd superset-frontend\nnvm install --lts\nnvm use --lts\n`}</code></pre>\n    <p>{`Or if you use the default macOS starting with Catalina shell `}<inlineCode parentName=\"p\">{`zsh`}</inlineCode>{`, try:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-zsh\"\n      }}>{`sh -c \"$(curl -fsSL https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.0/install.sh)\"\n`}</code></pre>\n    <p>{`For those interested, you may also try out `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/nvm-sh/nvm#deeper-shell-integration\"\n      }}>{`avn`}</a>{` to automatically\nswitch to the node version that is required to run Superset frontend.`}</p>\n    <h4 {...{\n      \"id\": \"install-dependencies\"\n    }}>{`Install dependencies`}</h4>\n    <p>{`Install third-party dependencies listed in `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` via:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`# From the root of the repository\ncd superset-frontend\n\n# Install dependencies from \\`package-lock.json\\`\nnpm ci\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"build-assets\"\n    }}>{`Build assets`}</h4>\n    <p>{`There are three types of assets you can build:`}</p>\n    <ol>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`npm run build`}</inlineCode>{`: the production assets, CSS/JSS minified and optimized`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`npm run dev-server`}</inlineCode>{`: local development assets, with sourcemaps and hot refresh support`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`npm run build-instrumented`}</inlineCode>{`: instrumented application code for collecting code coverage from Cypress tests`}</li>\n    </ol>\n    <h4 {...{\n      \"id\": \"webpack-dev-server\"\n    }}>{`Webpack dev server`}</h4>\n    <p>{`The dev server by default starts at `}<inlineCode parentName=\"p\">{`http://localhost:9000`}</inlineCode>{` and proxies the backend requests to `}<inlineCode parentName=\"p\">{`http://localhost:8088`}</inlineCode>{`.\nIt's possible to change these settings:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`# Start the dev server at http://localhost:9000\nnpm run dev-server\n\n# Run the dev server on a non-default port\nnpm run dev-server -- --devserverPort=9001\n\n# Proxy backend requests to a Flask server running on a non-default port\nnpm run dev-server -- --supersetPort=8081\n\n# Proxy to a remote backend but serve local assets\nnpm run dev-server -- --superset=https://superset-dev.example.com\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`--superset=`}</inlineCode>{` option is useful in case you want to debug a production issue or have to setup Superset behind a firewall.\nIt allows you to run Flask server in another environment while keep assets building locally for the best developer experience.`}</p>\n    <h4 {...{\n      \"id\": \"other-npm-commands\"\n    }}>{`Other npm commands`}</h4>\n    <p>{`Alternatively, there are other NPM commands you may find useful:`}</p>\n    <ol>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`npm run build-dev`}</inlineCode>{`: build assets in development mode.`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`npm run dev`}</inlineCode>{`: built dev assets in watch mode, will automatically rebuild when a file changes`}</li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}