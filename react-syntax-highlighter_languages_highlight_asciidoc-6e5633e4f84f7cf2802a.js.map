{"version":3,"sources":["webpack:///./node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/asciidoc.js"],"names":["module","exports","hljs","name","aliases","contains","COMMENT","relevance","className","begin","end","variants","excludeEnd","subLanguage","returnBegin","excludeBegin"],"mappings":"6EAmKAA,EAAOC,QAzJP,SAAkBC,GAChB,MAAO,CACLC,KAAM,WACNC,QAAS,CAAC,QACVC,SAAU,CACVH,EAAKI,QAAQ,YAAa,YAG1B,CACEC,UAAW,KAEbL,EAAKI,QAAQ,MAAO,IAAK,CACvBC,UAAW,IAEb,CACEC,UAAW,QACXC,MAAO,cAET,CACEA,MAAO,iBACPC,IAAK,kBACLH,UAAW,IAEb,CACEC,UAAW,UACXD,UAAW,GACXI,SAAU,CAAC,CACTF,MAAO,yBACN,CACDA,MAAO,0CAGX,CACED,UAAW,OACXC,MAAO,SACPC,IAAK,MACLE,YAAY,EACZL,UAAW,IAEb,CACEC,UAAW,OACXC,MAAO,cACPF,UAAW,GAEb,CACEC,UAAW,QACXC,MAAO,YACPC,IAAK,YACLH,UAAW,IAEb,CACEC,UAAW,OACXC,MAAO,mBACPC,IAAK,mBACLH,UAAW,IAEb,CACEE,MAAO,cACPC,IAAK,cACLL,SAAU,CAAC,CACTI,MAAO,IACPC,IAAK,IACLG,YAAa,MACbN,UAAW,IAEbA,UAAW,IAEb,CACEC,UAAW,SACXC,MAAO,oCAET,CACED,UAAW,SACXC,MAAO,6CACPF,UAAW,IAEb,CACEC,UAAW,SAEXC,MAAO,qBACPC,IAAK,eAELL,SAAU,CAAC,CACTI,MAAO,WACPF,UAAW,KAGf,CACEC,UAAW,WAEXC,MAAO,iBACPC,IAAK,aAELL,SAAU,CAAC,CACTI,MAAO,WACPF,UAAW,IAEbA,UAAW,GAEb,CACEC,UAAW,WAEXC,MAAO,cACPC,IAAK,aACLH,UAAW,GAEb,CACEC,UAAW,SACXG,SAAU,CAAC,CACTF,MAAO,WACN,CACDA,MAAO,WAGX,CACED,UAAW,OACXC,MAAO,oBACPF,UAAW,GAEb,CACEC,UAAW,OACXC,MAAO,UACPC,IAAK,IACLH,UAAW,GAEb,CACEE,MAAO,iBACPF,UAAW,IAEb,CACEE,MAAO,0DACPK,aAAa,EACbT,SAAU,CAAC,CACTI,MAAO,kBACPF,UAAW,GACV,CACDC,UAAW,OACXC,MAAO,MACPC,IAAK,UACLH,UAAW,GACV,CACDC,UAAW,SACXC,MAAO,MACPC,IAAK,MACLK,cAAc,EACdH,YAAY,EACZL,UAAW,IAEbA,UAAW","file":"react-syntax-highlighter_languages_highlight_asciidoc-6e5633e4f84f7cf2802a.js","sourcesContent":["/*\nLanguage: AsciiDoc\nRequires: xml.js\nAuthor: Dan Allen <dan.j.allen@gmail.com>\nWebsite: http://asciidoc.org\nDescription: A semantic, text-based document format that can be exported to HTML, DocBook and other backends.\nCategory: markup\n*/\n\n/** @type LanguageFn */\nfunction asciidoc(hljs) {\n  return {\n    name: 'AsciiDoc',\n    aliases: ['adoc'],\n    contains: [// block comment\n    hljs.COMMENT('^/{4,}\\\\n', '\\\\n/{4,}$', // can also be done as...\n    //'^/{4,}$',\n    //'^/{4,}$',\n    {\n      relevance: 10\n    }), // line comment\n    hljs.COMMENT('^//', '$', {\n      relevance: 0\n    }), // title\n    {\n      className: 'title',\n      begin: '^\\\\.\\\\w.*$'\n    }, // example, admonition & sidebar blocks\n    {\n      begin: '^[=\\\\*]{4,}\\\\n',\n      end: '\\\\n^[=\\\\*]{4,}$',\n      relevance: 10\n    }, // headings\n    {\n      className: 'section',\n      relevance: 10,\n      variants: [{\n        begin: '^(={1,5}) .+?( \\\\1)?$'\n      }, {\n        begin: '^[^\\\\[\\\\]\\\\n]+?\\\\n[=\\\\-~\\\\^\\\\+]{2,}$'\n      }]\n    }, // document attributes\n    {\n      className: 'meta',\n      begin: '^:.+?:',\n      end: '\\\\s',\n      excludeEnd: true,\n      relevance: 10\n    }, // block attributes\n    {\n      className: 'meta',\n      begin: '^\\\\[.+?\\\\]$',\n      relevance: 0\n    }, // quoteblocks\n    {\n      className: 'quote',\n      begin: '^_{4,}\\\\n',\n      end: '\\\\n_{4,}$',\n      relevance: 10\n    }, // listing and literal blocks\n    {\n      className: 'code',\n      begin: '^[\\\\-\\\\.]{4,}\\\\n',\n      end: '\\\\n[\\\\-\\\\.]{4,}$',\n      relevance: 10\n    }, // passthrough blocks\n    {\n      begin: '^\\\\+{4,}\\\\n',\n      end: '\\\\n\\\\+{4,}$',\n      contains: [{\n        begin: '<',\n        end: '>',\n        subLanguage: 'xml',\n        relevance: 0\n      }],\n      relevance: 10\n    }, // lists (can only capture indicators)\n    {\n      className: 'bullet',\n      begin: '^(\\\\*+|\\\\-+|\\\\.+|[^\\\\n]+?::)\\\\s+'\n    }, // admonition\n    {\n      className: 'symbol',\n      begin: '^(NOTE|TIP|IMPORTANT|WARNING|CAUTION):\\\\s+',\n      relevance: 10\n    }, // inline strong\n    {\n      className: 'strong',\n      // must not follow a word character or be followed by an asterisk or space\n      begin: '\\\\B\\\\*(?![\\\\*\\\\s])',\n      end: '(\\\\n{2}|\\\\*)',\n      // allow escaped asterisk followed by word char\n      contains: [{\n        begin: '\\\\\\\\*\\\\w',\n        relevance: 0\n      }]\n    }, // inline emphasis\n    {\n      className: 'emphasis',\n      // must not follow a word character or be followed by a single quote or space\n      begin: '\\\\B\\'(?![\\'\\\\s])',\n      end: '(\\\\n{2}|\\')',\n      // allow escaped single quote followed by word char\n      contains: [{\n        begin: '\\\\\\\\\\'\\\\w',\n        relevance: 0\n      }],\n      relevance: 0\n    }, // inline emphasis (alt)\n    {\n      className: 'emphasis',\n      // must not follow a word character or be followed by an underline or space\n      begin: '_(?![_\\\\s])',\n      end: '(\\\\n{2}|_)',\n      relevance: 0\n    }, // inline smart quotes\n    {\n      className: 'string',\n      variants: [{\n        begin: \"``.+?''\"\n      }, {\n        begin: \"`.+?'\"\n      }]\n    }, // inline code snippets (TODO should get same treatment as strong and emphasis)\n    {\n      className: 'code',\n      begin: '(`.+?`|\\\\+.+?\\\\+)',\n      relevance: 0\n    }, // indented literal block\n    {\n      className: 'code',\n      begin: '^[ \\\\t]',\n      end: '$',\n      relevance: 0\n    }, // horizontal rules\n    {\n      begin: '^\\'{3,}[ \\\\t]*$',\n      relevance: 10\n    }, // images and links\n    {\n      begin: '(link:)?(http|https|ftp|file|irc|image:?):\\\\S+\\\\[.*?\\\\]',\n      returnBegin: true,\n      contains: [{\n        begin: '(link|image:?):',\n        relevance: 0\n      }, {\n        className: 'link',\n        begin: '\\\\w',\n        end: '[^\\\\[]+',\n        relevance: 0\n      }, {\n        className: 'string',\n        begin: '\\\\[',\n        end: '\\\\]',\n        excludeBegin: true,\n        excludeEnd: true,\n        relevance: 0\n      }],\n      relevance: 10\n    }]\n  };\n}\n\nmodule.exports = asciidoc;"],"sourceRoot":""}