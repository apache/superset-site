(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{HT4b:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return o})),n.d(t,"default",(function(){return p}));var a=n("k1TG"),i=n("8o2o"),r=(n("q1tI"),n("7ljp")),l=n("hhGP"),o=(n("qKvR"),{});void 0!==o&&o&&o===Object(o)&&Object.isExtensible(o)&&!o.hasOwnProperty("__filemeta")&&Object.defineProperty(o,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/pages/docs/Contributing/translations.mdx"}});var s={_frontmatter:o},b=l.a;function p(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(r.b)(b,Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"translating"},"Translating"),Object(r.b)("p",null,"We use ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"http://babel.pocoo.org/en/latest/"}),"Babel")," to translate Superset.\nIn Python files, we import the magic ",Object(r.b)("inlineCode",{parentName:"p"},"_")," function using:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"from flask_babel import lazy_gettext as _\n")),Object(r.b)("p",null,"then wrap our translatable strings with it, e.g. ",Object(r.b)("inlineCode",{parentName:"p"},"_('Translate me')"),".\nDuring extraction, string literals passed to ",Object(r.b)("inlineCode",{parentName:"p"},"_")," will be added to the\ngenerated ",Object(r.b)("inlineCode",{parentName:"p"},".po")," file for each language for later translation."),Object(r.b)("p",null,"At runtime, the ",Object(r.b)("inlineCode",{parentName:"p"},"_")," function will return the translation of the given\nstring for the current language, or the given string itself\nif no translation is available."),Object(r.b)("p",null,"In TypeScript/JavaScript, the technique is similar:\nwe import ",Object(r.b)("inlineCode",{parentName:"p"},"t")," (simple translation), ",Object(r.b)("inlineCode",{parentName:"p"},"tn")," (translation containing a number)."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'import { t, tn } from "@superset-ui/translation";\n')),Object(r.b)("h3",{id:"enabling-language-selection"},"Enabling language selection"),Object(r.b)("p",null,"Add the ",Object(r.b)("inlineCode",{parentName:"p"},"LANGUAGES")," variable to your ",Object(r.b)("inlineCode",{parentName:"p"},"superset_config.py"),". Having more than one\noption inside will add a language selection dropdown to the UI on the right side\nof the navigation bar."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"LANGUAGES = {\n    'en': {'flag': 'us', 'name': 'English'},\n    'fr': {'flag': 'fr', 'name': 'French'},\n    'zh': {'flag': 'cn', 'name': 'Chinese'},\n}\n")),Object(r.b)("h3",{id:"extracting-new-strings-for-translation"},"Extracting new strings for translation"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"pybabel extract -F superset/translations/babel.cfg -o superset/translations/messages.pot -k _ -k __ -k t -k tn -k tct .\n")),Object(r.b)("p",null,"This will update the template file ",Object(r.b)("inlineCode",{parentName:"p"},"superset/translations/messages.pot")," with current application strings. Do not forget to update\nthis file with the appropriate license information."),Object(r.b)("h3",{id:"updating-language-files"},"Updating language files"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"})," pybabel update -i superset/translations/messages.pot -d superset/translations --ignore-obsolete\n")),Object(r.b)("p",null,"This will update language files with the new extracted strings."),Object(r.b)("p",null,"You can then translate the strings gathered in files located under\n",Object(r.b)("inlineCode",{parentName:"p"},"superset/translation"),", where there's one per language. You can use ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://poedit.net/features"}),"Poedit"),"\nto translate the ",Object(r.b)("inlineCode",{parentName:"p"},"po")," file more conveniently.\nThere are some ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://wiki.lxde.org/en/Translate_*.po_files_with_Poedit"}),"tutorials in the wiki"),"."),Object(r.b)("p",null,"In the case of JS translation, we need to convert the PO file into a JSON file, and we need the global download of the npm package po2json."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"npm install -g po2json\n")),Object(r.b)("p",null,"To convert all PO files to formatted JSON files you can use the ",Object(r.b)("inlineCode",{parentName:"p"},"po2json.sh")," script."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"./scripts/po2json.sh\n")),Object(r.b)("p",null,"If you get errors running ",Object(r.b)("inlineCode",{parentName:"p"},"po2json"),", you might be running the Ubuntu package with the same\nname, rather than the Node.js package (they have a different format for the arguments). If\nthere is a conflict, you may need to update your ",Object(r.b)("inlineCode",{parentName:"p"},"PATH")," environment variable or fully qualify\nthe executable path (e.g. ",Object(r.b)("inlineCode",{parentName:"p"},"/usr/local/bin/po2json")," instead of ",Object(r.b)("inlineCode",{parentName:"p"},"po2json"),").\nIf you get a lot of ",Object(r.b)("inlineCode",{parentName:"p"},"[null,***]")," in ",Object(r.b)("inlineCode",{parentName:"p"},"messages.json"),", just delete all the ",Object(r.b)("inlineCode",{parentName:"p"},"null,"),".\nFor example, ",Object(r.b)("inlineCode",{parentName:"p"},'"year":["年"]')," is correct while ",Object(r.b)("inlineCode",{parentName:"p"},'"year":[null,"年"]'),"is incorrect."),Object(r.b)("p",null,"For the translations to take effect we need to compile translation catalogs into binary MO files."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"pybabel compile -d superset/translations\n")),Object(r.b)("h3",{id:"creating-a-new-language-dictionary"},"Creating a new language dictionary"),Object(r.b)("p",null,"To create a dictionary for a new language, run the following, where ",Object(r.b)("inlineCode",{parentName:"p"},"LANGUAGE_CODE")," is replaced with\nthe language code for your target language, e.g. ",Object(r.b)("inlineCode",{parentName:"p"},"es")," (see ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://flask-appbuilder.readthedocs.io/en/latest/i18n.html"}),"Flask AppBuilder i18n documentation")," for more details):"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"pip install -r superset/translations/requirements.txt\npybabel init -i superset/translations/messages.pot -d superset/translations -l LANGUAGE_CODE\n")),Object(r.b)("p",null,"Then, ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"#extracting-new-strings-for-translation"}),"extract strings for the new language"),"."))}void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/pages/docs/Contributing/translations.mdx"}}),p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-docs-contributing-translations-mdx-a731229a6ee3853bcddd.js.map