"use strict";(self.webpackChunkdocs_v_2=self.webpackChunkdocs_v_2||[]).push([[7026],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return h}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,c=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=s(n),h=o,f=d["".concat(l,".").concat(h)]||d[h]||p[h]||c;return n?r.createElement(f,a(a({ref:t},u),{},{components:n})):r.createElement(f,a({ref:t},u))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=n.length,a=new Array(c);a[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var s=2;s<c;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},96406:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return u},default:function(){return d}});var r=n(83117),o=n(80102),c=(n(67294),n(3905)),a=["components"],i={title:"Clickhouse",hide_title:!0,sidebar_position:15,version:1},l=void 0,s={unversionedId:"connecting-to-databases/clickhouse",id:"connecting-to-databases/clickhouse",isDocsHomePage:!1,title:"Clickhouse",description:"Clickhouse",source:"@site/docs/connecting-to-databases/clickhouse.mdx",sourceDirName:"connecting-to-databases",slug:"/connecting-to-databases/clickhouse",permalink:"/docs/connecting-to-databases/clickhouse",editUrl:"https://github.com/apache/superset/tree/master/docs-v2/docs/connecting-to-databases/clickhouse.mdx",tags:[],version:"current",sidebarPosition:15,frontMatter:{title:"Clickhouse",hide_title:!0,sidebar_position:15,version:1},sidebar:"tutorialSidebar",previous:{title:"Apache Spark SQL",permalink:"/docs/connecting-to-databases/spark-sql"},next:{title:"CockroachDB",permalink:"/docs/connecting-to-databases/cockroachdb"}},u=[{value:"Clickhouse",id:"clickhouse",children:[],level:2}],p={toc:u};function d(e){var t=e.components,n=(0,o.Z)(e,a);return(0,c.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h2",{id:"clickhouse"},"Clickhouse"),(0,c.kt)("p",null,"To use Clickhouse with Superset, you will need to add the following Python libraries:"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"clickhouse-driver==0.2.0\nclickhouse-sqlalchemy==0.1.6\n")),(0,c.kt)("p",null,"If running Superset using Docker Compose, add the following to your ",(0,c.kt)("inlineCode",{parentName:"p"},"./docker/requirements-local.txt")," file:"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"clickhouse-driver>=0.2.0\nclickhouse-sqlalchemy>=0.1.6\n")),(0,c.kt)("p",null,"The recommended connector library for Clickhouse is\n",(0,c.kt)("a",{parentName:"p",href:"https://github.com/cloudflare/sqlalchemy-clickhouse"},"sqlalchemy-clickhouse"),"."),(0,c.kt)("p",null,"The expected connection string is formatted as follows:"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"clickhouse+native://<user>:<password>@<host>:<port>/<database>[?options\u2026]clickhouse://{username}:{password}@{hostname}:{port}/{database}\n")),(0,c.kt)("p",null,"Here's a concrete example of a real connection string:"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"clickhouse+native://demo:demo@github.demo.trial.altinity.cloud/default?secure=true\n")),(0,c.kt)("p",null,"If you're using Clickhouse locally on your computer, you can get away with using a native protocol URL that\nuses the default user without a password (and doesn't encrypt the connection):"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"clickhouse+native://localhost/default\n")))}d.isMDXComponent=!0}}]);