"use strict";(self.webpackChunkdocs_v_2=self.webpackChunkdocs_v_2||[]).push([[8913],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),g=p(n),d=r,m=g["".concat(s,".").concat(d)]||g[d]||c[d]||i;return n?a.createElement(m,l(l({ref:t},u),{},{components:n})):a.createElement(m,l({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=g;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},96353:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return u},default:function(){return g}});var a=n(83117),r=n(80102),i=(n(67294),n(3905)),l=["components"],o={title:"Translating",hide_title:!0,sidebar_position:9,version:1},s=void 0,p={unversionedId:"Contributing/translations",id:"Contributing/translations",isDocsHomePage:!1,title:"Translating",description:"Translating",source:"@site/docs/Contributing/translations.mdx",sourceDirName:"Contributing",slug:"/Contributing/translations",permalink:"/docs/Contributing/translations",editUrl:"https://github.com/apache/superset/tree/master/docs-v2/docs/Contributing/translations.mdx",tags:[],version:"current",sidebarPosition:9,frontMatter:{title:"Translating",hide_title:!0,sidebar_position:9,version:1},sidebar:"tutorialSidebar",previous:{title:"Testing",permalink:"/docs/Contributing/testing-locally"},next:{title:"contributing-page",permalink:"/docs/Contributing/contributing-page"}},u=[{value:"Translating",id:"translating",children:[{value:"Enabling language selection",id:"enabling-language-selection",children:[],level:3},{value:"Extracting new strings for translation",id:"extracting-new-strings-for-translation",children:[],level:3},{value:"Updating language files",id:"updating-language-files",children:[],level:3},{value:"Creating a new language dictionary",id:"creating-a-new-language-dictionary",children:[],level:3}],level:2}],c={toc:u};function g(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"translating"},"Translating"),(0,i.kt)("p",null,"We use ",(0,i.kt)("a",{parentName:"p",href:"http://babel.pocoo.org/en/latest/"},"Babel")," to translate Superset.\nIn Python files, we import the magic ",(0,i.kt)("inlineCode",{parentName:"p"},"_")," function using:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"from flask_babel import lazy_gettext as _\n")),(0,i.kt)("p",null,"then wrap our translatable strings with it, e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"_('Translate me')"),".\nDuring extraction, string literals passed to ",(0,i.kt)("inlineCode",{parentName:"p"},"_")," will be added to the\ngenerated ",(0,i.kt)("inlineCode",{parentName:"p"},".po")," file for each language for later translation."),(0,i.kt)("p",null,"At runtime, the ",(0,i.kt)("inlineCode",{parentName:"p"},"_")," function will return the translation of the given\nstring for the current language, or the given string itself\nif no translation is available."),(0,i.kt)("p",null,"In TypeScript/JavaScript, the technique is similar:\nwe import ",(0,i.kt)("inlineCode",{parentName:"p"},"t")," (simple translation), ",(0,i.kt)("inlineCode",{parentName:"p"},"tn")," (translation containing a number)."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'import { t, tn } from "@superset-ui/translation";\n')),(0,i.kt)("h3",{id:"enabling-language-selection"},"Enabling language selection"),(0,i.kt)("p",null,"Add the ",(0,i.kt)("inlineCode",{parentName:"p"},"LANGUAGES")," variable to your ",(0,i.kt)("inlineCode",{parentName:"p"},"superset_config.py"),". Having more than one\noption inside will add a language selection dropdown to the UI on the right side\nof the navigation bar."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"LANGUAGES = {\n    'en': {'flag': 'us', 'name': 'English'},\n    'fr': {'flag': 'fr', 'name': 'French'},\n    'zh': {'flag': 'cn', 'name': 'Chinese'},\n}\n")),(0,i.kt)("h3",{id:"extracting-new-strings-for-translation"},"Extracting new strings for translation"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pybabel extract -F superset/translations/babel.cfg -o superset/translations/messages.pot -k _ -k __ -k t -k tn -k tct .\n")),(0,i.kt)("p",null,"This will update the template file ",(0,i.kt)("inlineCode",{parentName:"p"},"superset/translations/messages.pot")," with current application strings. Do not forget to update\nthis file with the appropriate license information."),(0,i.kt)("h3",{id:"updating-language-files"},"Updating language files"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"}," pybabel update -i superset/translations/messages.pot -d superset/translations --ignore-obsolete\n")),(0,i.kt)("p",null,"This will update language files with the new extracted strings."),(0,i.kt)("p",null,"You can then translate the strings gathered in files located under\n",(0,i.kt)("inlineCode",{parentName:"p"},"superset/translation"),", where there's one per language. You can use ",(0,i.kt)("a",{parentName:"p",href:"https://poedit.net/features"},"Poedit"),"\nto translate the ",(0,i.kt)("inlineCode",{parentName:"p"},"po")," file more conveniently.\nThere are some ",(0,i.kt)("a",{parentName:"p",href:"https://wiki.lxde.org/en/Translate_*.po_files_with_Poedit"},"tutorials in the wiki"),"."),(0,i.kt)("p",null,"In the case of JS translation, we need to convert the PO file into a JSON file, and we need the global download of the npm package po2json."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm install -g po2json\n")),(0,i.kt)("p",null,"To convert all PO files to formatted JSON files you can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"po2json.sh")," script."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"./scripts/po2json.sh\n")),(0,i.kt)("p",null,"If you get errors running ",(0,i.kt)("inlineCode",{parentName:"p"},"po2json"),", you might be running the Ubuntu package with the same\nname, rather than the Node.js package (they have a different format for the arguments). If\nthere is a conflict, you may need to update your ",(0,i.kt)("inlineCode",{parentName:"p"},"PATH")," environment variable or fully qualify\nthe executable path (e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"/usr/local/bin/po2json")," instead of ",(0,i.kt)("inlineCode",{parentName:"p"},"po2json"),").\nIf you get a lot of ",(0,i.kt)("inlineCode",{parentName:"p"},"[null,***]")," in ",(0,i.kt)("inlineCode",{parentName:"p"},"messages.json"),", just delete all the ",(0,i.kt)("inlineCode",{parentName:"p"},"null,"),".\nFor example, ",(0,i.kt)("inlineCode",{parentName:"p"},'"year":["\u5e74"]')," is correct while ",(0,i.kt)("inlineCode",{parentName:"p"},'"year":[null,"\u5e74"]'),"is incorrect."),(0,i.kt)("p",null,"For the translations to take effect we need to compile translation catalogs into binary MO files."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pybabel compile -d superset/translations\n")),(0,i.kt)("h3",{id:"creating-a-new-language-dictionary"},"Creating a new language dictionary"),(0,i.kt)("p",null,"To create a dictionary for a new language, run the following, where ",(0,i.kt)("inlineCode",{parentName:"p"},"LANGUAGE_CODE")," is replaced with\nthe language code for your target language, e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"es")," (see ",(0,i.kt)("a",{parentName:"p",href:"https://flask-appbuilder.readthedocs.io/en/latest/i18n.html"},"Flask AppBuilder i18n documentation")," for more details):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pip install -r superset/translations/requirements.txt\npybabel init -i superset/translations/messages.pot -d superset/translations -l LANGUAGE_CODE\n")),(0,i.kt)("p",null,"Then, ",(0,i.kt)("a",{parentName:"p",href:"#extracting-new-strings-for-translation"},"extract strings for the new language"),"."))}g.isMDXComponent=!0}}]);