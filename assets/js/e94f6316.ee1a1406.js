"use strict";(self.webpackChunkdocs_v_2=self.webpackChunkdocs_v_2||[]).push([[8679],{36432:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>l,frontMatter:()=>i,metadata:()=>g,toc:()=>d});var s=t(74848),o=t(28453);const i={title:"Event Logging",sidebar_position:9,version:1},r="Logging",g={id:"configuration/event-logging",title:"Event Logging",description:"Event Logging",source:"@site/docs/configuration/event-logging.mdx",sourceDirName:"configuration",slug:"/configuration/event-logging",permalink:"/docs/configuration/event-logging",draft:!1,unlisted:!1,editUrl:"https://github.com/apache/superset/edit/master/docs/docs/configuration/event-logging.mdx",tags:[],version:"current",sidebarPosition:9,frontMatter:{title:"Event Logging",sidebar_position:9,version:1},sidebar:"CustomSidebar",previous:{title:"Setup SSH Tunneling",permalink:"/docs/configuration/setup-ssh-tunneling"},next:{title:"Country Map Tools",permalink:"/docs/configuration/country-map-tools"}},a={},d=[{value:"Event Logging",id:"event-logging",level:2},{value:"StatsD Logging",id:"statsd-logging",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"logging",children:"Logging"})}),"\n",(0,s.jsx)(n.h2,{id:"event-logging",children:"Event Logging"}),"\n",(0,s.jsxs)(n.p,{children:["Superset by default logs special action events in its internal database (DBEventLogger). These logs can be accessed\non the UI by navigating to ",(0,s.jsx)(n.strong,{children:"Security > Action Log"}),". You can freely customize these logs by\nimplementing your own event log class.\n",(0,s.jsx)(n.strong,{children:"When custom log class is enabled DBEventLogger is disabled and logs\nstop being populated in UI logs view."}),"\nTo achieve both, custom log class should extend built-in DBEventLogger log class."]}),"\n",(0,s.jsx)(n.p,{children:"Here's an example of a simple JSON-to-stdout class:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"    def log(self, user_id, action, *args, **kwargs):\n        records = kwargs.get('records', list())\n        dashboard_id = kwargs.get('dashboard_id')\n        slice_id = kwargs.get('slice_id')\n        duration_ms = kwargs.get('duration_ms')\n        referrer = kwargs.get('referrer')\n\n        for record in records:\n            log = dict(\n                action=action,\n                json=record,\n                dashboard_id=dashboard_id,\n                slice_id=slice_id,\n                duration_ms=duration_ms,\n                referrer=referrer,\n                user_id=user_id\n            )\n            print(json.dumps(log))\n"})}),"\n",(0,s.jsx)(n.p,{children:"End by updating your config to pass in an instance of the logger you want to use:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"EVENT_LOGGER = JSONStdOutEventLogger()\n"})}),"\n",(0,s.jsx)(n.h2,{id:"statsd-logging",children:"StatsD Logging"}),"\n",(0,s.jsxs)(n.p,{children:["Superset can be configured to log events to ",(0,s.jsx)(n.a,{href:"https://github.com/statsd/statsd",children:"StatsD"}),"\nif desired. Most endpoints hit are logged as\nwell as key events like query start and end in SQL Lab."]}),"\n",(0,s.jsxs)(n.p,{children:["To setup StatsD logging, it\u2019s a matter of configuring the logger in your ",(0,s.jsx)(n.code,{children:"superset_config.py"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"from superset.stats_logger import StatsdStatsLogger\nSTATS_LOGGER = StatsdStatsLogger(host='localhost', port=8125, prefix='superset')\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Note that it\u2019s also possible to implement your own logger by deriving\n",(0,s.jsx)(n.code,{children:"superset.stats_logger.BaseStatsLogger"}),"."]})]})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>g});var s=t(96540);const o={},i=s.createContext(o);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function g(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);