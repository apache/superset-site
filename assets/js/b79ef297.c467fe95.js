"use strict";(self.webpackChunkdocs_v_2=self.webpackChunkdocs_v_2||[]).push([[3342],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return d}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=l(r),d=a,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||o;return r?n.createElement(f,i(i({ref:t},p),{},{components:r})):n.createElement(f,i({ref:t},p))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1141:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return p},default:function(){return m}});var n=r(83117),a=r(80102),o=(r(67294),r(3905)),i=["components"],c={title:"Vertica",hide_title:!0,sidebar_position:32,version:1},s=void 0,l={unversionedId:"connecting-to-databases/vertica",id:"connecting-to-databases/vertica",isDocsHomePage:!1,title:"Vertica",description:"Vertica",source:"@site/docs/connecting-to-databases/vertica.mdx",sourceDirName:"connecting-to-databases",slug:"/connecting-to-databases/vertica",permalink:"/docs/connecting-to-databases/vertica",editUrl:"https://github.com/apache/superset/tree/master/docs-v2/docs/connecting-to-databases/vertica.mdx",tags:[],version:"current",sidebarPosition:32,frontMatter:{title:"Vertica",hide_title:!0,sidebar_position:32,version:1},sidebar:"tutorialSidebar",previous:{title:"Teradata",permalink:"/docs/connecting-to-databases/teradata"},next:{title:"Hologres",permalink:"/docs/connecting-to-databases/hologres"}},p=[{value:"Vertica",id:"vertica",children:[],level:2}],u={toc:p};function m(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"vertica"},"Vertica"),(0,o.kt)("p",null,"The recommended connector library is\n",(0,o.kt)("a",{parentName:"p",href:"https://pypi.org/project/sqlalchemy-vertica-python/"},"sqlalchemy-vertica-python"),". The\n",(0,o.kt)("a",{parentName:"p",href:"http://www.vertica.com/"},"Vertica")," connection parameters are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"User Name:")," UserName"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Password:")," DBPassword"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Database Host:"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"For Localhost : localhost or 127.0.0.1"),(0,o.kt)("li",{parentName:"ul"},"For On Prem : IP address or Host name"),(0,o.kt)("li",{parentName:"ul"},"For Cloud: IP Address or Host Name"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Database Name:")," Database Name"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Port:")," default 5433")),(0,o.kt)("p",null,"The connection string is formatted as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"vertica+vertica_python://{username}:{password}@{host}/{database}\n")),(0,o.kt)("p",null,"Other parameters:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Load Balancer - Backup Host")))}m.isMDXComponent=!0}}]);