"use strict";(self.webpackChunkdocs_v_2=self.webpackChunkdocs_v_2||[]).push([[7162],{4420:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var r=s(74848),t=s(28453),i=s(86025);const a={title:"Kubernetes",hide_title:!0,sidebar_position:2,version:1},l="Installing on Kubernetes",o={id:"installation/kubernetes",title:"Kubernetes",description:"Running Superset on Kubernetes is supported with the provided Helm chart",source:"@site/docs/installation/kubernetes.mdx",sourceDirName:"installation",slug:"/installation/kubernetes",permalink:"/docs/installation/kubernetes",draft:!1,unlisted:!1,editUrl:"https://github.com/apache/superset/edit/master/docs/docs/installation/kubernetes.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Kubernetes",hide_title:!0,sidebar_position:2,version:1},sidebar:"CustomSidebar",previous:{title:"Architecture",permalink:"/docs/installation/architecture"},next:{title:"PyPI",permalink:"/docs/installation/pypi"}},d={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Running",id:"running",level:2},{value:"Important settings",id:"important-settings",level:2},{value:"Security settings",id:"security-settings",level:3},{value:"Dependencies",id:"dependencies",level:3},{value:"superset_config.py",id:"superset_configpy",level:3},{value:"Environment Variables",id:"environment-variables",level:3},{value:"System packages",id:"system-packages",level:3},{value:"Data sources",id:"data-sources",level:3},{value:"Configuration Examples",id:"configuration-examples",level:2},{value:"Setting up OAuth",id:"setting-up-oauth",level:3},{value:"Enable Alerts and Reports",id:"enable-alerts-and-reports",level:3},{value:"Install a supported webdriver in the Celery worker",id:"install-a-supported-webdriver-in-the-celery-worker",level:4},{value:"Run the Celery beat",id:"run-the-celery-beat",level:4},{value:"Configure the appropriate Celery jobs and SMTP/Slack settings",id:"configure-the-appropriate-celery-jobs-and-smtpslack-settings",level:4},{value:"Load the Examples data and dashboards",id:"load-the-examples-data-and-dashboards",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"installing-on-kubernetes",children:"Installing on Kubernetes"})}),"\n",(0,r.jsx)("img",{src:(0,i.Ay)("/img/k8s.png"),width:"150"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.p,{children:["Running Superset on Kubernetes is supported with the provided ",(0,r.jsx)(n.a,{href:"https://helm.sh/",children:"Helm"})," chart\nfound in the official ",(0,r.jsx)(n.a,{href:"https://apache.github.io/superset/index.yaml",children:"Superset helm repository"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"A Kubernetes cluster"}),"\n",(0,r.jsx)(n.li,{children:"Helm installed"}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["For simpler, single host environments, we recommend using\n",(0,r.jsx)(n.a,{href:"https://minikube.sigs.k8s.io/docs/start/",children:"minikube"})," which is easy to setup on many platforms\nand works fantastically well with the Helm chart referenced here."]})}),"\n",(0,r.jsx)(n.h2,{id:"running",children:"Running"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Add the Superset helm repository"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:'helm repo add superset https://apache.github.io/superset\n"superset" has been added to your repositories\n'})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:"View charts in repo"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"helm search repo superset\nNAME                    CHART VERSION   APP VERSION     DESCRIPTION\nsuperset/superset       0.1.1           1.0             Apache Superset is a modern, enterprise-ready b...\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsx)(n.li,{children:"Configure your setting overrides"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Just like any typical Helm chart, you'll need to craft a ",(0,r.jsx)(n.code,{children:"values.yaml"})," file that would define/override any of the values exposed into the default ",(0,r.jsx)(n.a,{href:"https://github.com/apache/superset/tree/master/helm/superset/values.yaml",children:"values.yaml"}),", or from any of the dependent charts it depends on:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://artifacthub.io/packages/helm/bitnami/redis",children:"bitnami/redis"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://artifacthub.io/packages/helm/bitnami/postgresql",children:"bitnami/postgresql"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"More info down below on some important overrides you might need."}),"\n",(0,r.jsxs)(n.ol,{start:"4",children:["\n",(0,r.jsx)(n.li,{children:"Install and run"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"helm upgrade --install --values my-values.yaml superset superset/superset\n"})}),"\n",(0,r.jsx)(n.p,{children:"You should see various pods popping up, such as:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"kubectl get pods\nNAME                                    READY   STATUS      RESTARTS   AGE\nsuperset-celerybeat-7cdcc9575f-k6xmc    1/1     Running     0          119s\nsuperset-f5c9c667-dw9lp                 1/1     Running     0          4m7s\nsuperset-f5c9c667-fk8bk                 1/1     Running     0          4m11s\nsuperset-init-db-zlm9z                  0/1     Completed   0          111s\nsuperset-postgresql-0                   1/1     Running     0          6d20h\nsuperset-redis-master-0                 1/1     Running     0          6d20h\nsuperset-worker-75b48bbcc-jmmjr         1/1     Running     0          4m8s\nsuperset-worker-75b48bbcc-qrq49         1/1     Running     0          4m12s\n"})}),"\n",(0,r.jsx)(n.p,{children:"The exact list will depend on some of your specific configuration overrides but you should generally expect:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["N ",(0,r.jsx)(n.code,{children:"superset-xxxx-yyyy"})," and ",(0,r.jsx)(n.code,{children:"superset-worker-xxxx-yyyy"})," pods (depending on your ",(0,r.jsx)(n.code,{children:"supersetNode.replicaCount"})," and ",(0,r.jsx)(n.code,{children:"supersetWorker.replicaCount"})," values)"]}),"\n",(0,r.jsxs)(n.li,{children:["1 ",(0,r.jsx)(n.code,{children:"superset-postgresql-0"})," depending on your postgres settings"]}),"\n",(0,r.jsxs)(n.li,{children:["1 ",(0,r.jsx)(n.code,{children:"superset-redis-master-0"})," depending on your redis settings"]}),"\n",(0,r.jsxs)(n.li,{children:["1 ",(0,r.jsx)(n.code,{children:"superset-celerybeat-xxxx-yyyy"})," pod if you have ",(0,r.jsx)(n.code,{children:"supersetCeleryBeat.enabled = true"})," in your values overrides"]}),"\n"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Access it"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The chart will publish appropriate services to expose the Superset UI internally within your k8s cluster. To access it externally you will have to either:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Configure the Service as a ",(0,r.jsx)(n.code,{children:"LoadBalancer"})," or ",(0,r.jsx)(n.code,{children:"NodePort"})]}),"\n",(0,r.jsxs)(n.li,{children:["Set up an ",(0,r.jsx)(n.code,{children:"Ingress"})," for it - the chart includes a definition, but will need to be tuned to your needs (hostname, tls, annotations etc...)"]}),"\n",(0,r.jsxs)(n.li,{children:["Run ",(0,r.jsx)(n.code,{children:"kubectl port-forward superset-xxxx-yyyy :8088"})," to directly tunnel one pod's port into your localhost"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Depending how you configured external access, the URL will vary. Once you've identified the appropriate URL you can log in with:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["user: ",(0,r.jsx)(n.code,{children:"admin"})]}),"\n",(0,r.jsxs)(n.li,{children:["password: ",(0,r.jsx)(n.code,{children:"admin"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"important-settings",children:"Important settings"}),"\n",(0,r.jsx)(n.h3,{id:"security-settings",children:"Security settings"}),"\n",(0,r.jsxs)(n.p,{children:["Default security settings and passwords are included but you ",(0,r.jsx)(n.strong,{children:"MUST"})," update them to run ",(0,r.jsx)(n.code,{children:"prod"})," instances, in particular:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"postgresql:\n  postgresqlPassword: superset\n"})}),"\n",(0,r.jsx)(n.p,{children:"Make sure, you set a unique strong complex alphanumeric string for your SECRET_KEY and use a tool to help you generate\na sufficiently random sequence."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["To generate a good key you can run, ",(0,r.jsx)(n.code,{children:"openssl rand -base64 42"})]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"configOverrides:\n  secret: |\n    SECRET_KEY = 'YOUR_OWN_RANDOM_GENERATED_SECRET_KEY'\n"})}),"\n",(0,r.jsxs)(n.p,{children:["If you want to change the previous secret key then you should rotate the keys.\nDefault secret key for kubernetes deployment is ",(0,r.jsx)(n.code,{children:"thisISaSECRET_1234"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"configOverrides:\n  my_override: |\n    PREVIOUS_SECRET_KEY = 'YOUR_PREVIOUS_SECRET_KEY'\n    SECRET_KEY = 'YOUR_OWN_RANDOM_GENERATED_SECRET_KEY'\ninit:\n  command:\n    - /bin/sh\n    - -c\n    - |\n      . {{ .Values.configMountPath }}/superset_bootstrap.sh\n      superset re-encrypt-secrets\n      . {{ .Values.configMountPath }}/superset_init.sh\n"})}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsxs)(n.p,{children:["Superset uses ",(0,r.jsx)(n.a,{href:"https://about.scarf.sh/scarf-gateway",children:"Scarf Gateway"})," to collect telemetry data.  Knowing the installation counts for different Superset versions informs the  project's decisions about patching and long-term support. Scarf purges personally identifiable information (PII) and provides only aggregated statistics."]}),(0,r.jsxs)(n.p,{children:["To opt-out of this data collection in your Helm-based installation, edit the ",(0,r.jsx)(n.code,{children:"repository:"})," line in your ",(0,r.jsx)(n.code,{children:"helm/superset/values.yaml"})," file, replacing ",(0,r.jsx)(n.code,{children:"apachesuperset.docker.scarf.sh/apache/superset"})," with ",(0,r.jsx)(n.code,{children:"apache/superset"})," to pull the image directly from Docker Hub."]})]}),"\n",(0,r.jsx)(n.h3,{id:"dependencies",children:"Dependencies"}),"\n",(0,r.jsx)(n.p,{children:"Install additional packages and do any other bootstrap configuration in the bootstrap script.\nFor production clusters it's recommended to build own image with this step done in CI."}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsx)(n.p,{children:"Superset requires a Python DB-API database driver and a SQLAlchemy\ndialect to be installed for each datastore you want to connect to."}),(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"/docs/configuration/databases",children:"Install Database Drivers"})," for more information."]})]}),"\n",(0,r.jsx)(n.p,{children:"The following example installs the drivers for BigQuery and Elasticsearch, allowing you to connect to these data sources within your Superset setup:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'bootstrapScript: |\n  #!/bin/bash\n  pip install psycopg2==2.9.6 \\\n    sqlalchemy-bigquery==1.6.1 \\\n    elasticsearch-dbapi==0.2.5 &&\\\n  if [ ! -f ~/bootstrap ]; then echo "Running Superset with uid {{ .Values.runAsUser }}" > ~/bootstrap; fi\n'})}),"\n",(0,r.jsx)(n.h3,{id:"superset_configpy",children:"superset_config.py"}),"\n",(0,r.jsxs)(n.p,{children:["The default ",(0,r.jsx)(n.code,{children:"superset_config.py"})," is fairly minimal and you will very likely need to extend it. This is done by specifying one or more key/value entries in ",(0,r.jsx)(n.code,{children:"configOverrides"}),", e.g.:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'configOverrides:\n  my_override: |\n    # This will make sure the redirect_uri is properly computed, even with SSL offloading\n    ENABLE_PROXY_FIX = True\n    FEATURE_FLAGS = {\n        "DYNAMIC_PLUGINS": True\n    }\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Those will be evaluated as Helm templates and therefore will be able to reference other ",(0,r.jsx)(n.code,{children:"values.yaml"})," variables e.g. ",(0,r.jsx)(n.code,{children:"{{ .Values.ingress.hosts[0] }}"})," will resolve to your ingress external domain."]}),"\n",(0,r.jsxs)(n.p,{children:["The entire ",(0,r.jsx)(n.code,{children:"superset_config.py"})," will be installed as a secret, so it is safe to pass sensitive parameters directly... however it might be more readable to use secret env variables for that."]}),"\n",(0,r.jsxs)(n.p,{children:["Full python files can be provided by running ",(0,r.jsx)(n.code,{children:"helm upgrade --install --values my-values.yaml --set-file configOverrides.oauth=set_oauth.py"})]}),"\n",(0,r.jsx)(n.h3,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,r.jsxs)(n.p,{children:["Those can be passed as key/values either with ",(0,r.jsx)(n.code,{children:"extraEnv"})," or ",(0,r.jsx)(n.code,{children:"extraSecretEnv"})," if they're sensitive. They can then be referenced from ",(0,r.jsx)(n.code,{children:"superset_config.py"})," using e.g. ",(0,r.jsx)(n.code,{children:'os.environ.get("VAR")'}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'extraEnv:\n  SMTP_HOST: smtp.gmail.com\n  SMTP_USER: user@gmail.com\n  SMTP_PORT: "587"\n  SMTP_MAIL_FROM: user@gmail.com\n\nextraSecretEnv:\n  SMTP_PASSWORD: xxxx\n\nconfigOverrides:\n  smtp: |\n    import ast\n    SMTP_HOST = os.getenv("SMTP_HOST","localhost")\n    SMTP_STARTTLS = ast.literal_eval(os.getenv("SMTP_STARTTLS", "True"))\n    SMTP_SSL = ast.literal_eval(os.getenv("SMTP_SSL", "False"))\n    SMTP_USER = os.getenv("SMTP_USER","superset")\n    SMTP_PORT = os.getenv("SMTP_PORT",25)\n    SMTP_PASSWORD = os.getenv("SMTP_PASSWORD","superset")\n'})}),"\n",(0,r.jsx)(n.h3,{id:"system-packages",children:"System packages"}),"\n",(0,r.jsxs)(n.p,{children:["If new system packages are required, they can be installed before application startup by overriding the container's ",(0,r.jsx)(n.code,{children:"command"}),", e.g.:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"supersetWorker:\n  command:\n    - /bin/sh\n    - -c\n    - |\n      apt update\n      apt install -y somepackage\n      apt autoremove -yqq --purge\n      apt clean\n\n      # Run celery worker\n      . {{ .Values.configMountPath }}/superset_bootstrap.sh; celery --app=superset.tasks.celery_app:app worker\n"})}),"\n",(0,r.jsx)(n.h3,{id:"data-sources",children:"Data sources"}),"\n",(0,r.jsxs)(n.p,{children:["Data source definitions can be automatically declared by providing key/value yaml definitions in ",(0,r.jsx)(n.code,{children:"extraConfigs"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'extraConfigs:\n  import_datasources.yaml: |\n    databases:\n    - allow_file_upload: true\n      allow_ctas: true\n      allow_cvas: true\n      database_name: example-db\n      extra: "{\\r\\n    \\"metadata_params\\": {},\\r\\n    \\"engine_params\\": {},\\r\\n    \\"\\\n        metadata_cache_timeout\\": {},\\r\\n    \\"schemas_allowed_for_file_upload\\": []\\r\\n\\\n        }"\n      sqlalchemy_uri: example://example-db.local\n      tables: []\n'})}),"\n",(0,r.jsx)(n.p,{children:"Those will also be mounted as secrets and can include sensitive parameters."}),"\n",(0,r.jsx)(n.h2,{id:"configuration-examples",children:"Configuration Examples"}),"\n",(0,r.jsx)(n.h3,{id:"setting-up-oauth",children:"Setting up OAuth"}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["OAuth setup requires that the ",(0,r.jsx)(n.a,{href:"https://authlib.org/",children:"authlib"})," Python library is installed. This can\nbe done using ",(0,r.jsx)(n.code,{children:"pip"})," by updating the ",(0,r.jsx)(n.code,{children:"bootstrapScript"}),". See the ",(0,r.jsx)(n.a,{href:"#dependencies",children:"Dependencies"})," section\nfor more information."]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'extraEnv:\n  AUTH_DOMAIN: example.com\n\nextraSecretEnv:\n  GOOGLE_KEY: xxxxxxxxxxxx-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.apps.googleusercontent.com\n  GOOGLE_SECRET: xxxxxxxxxxxxxxxxxxxxxxxx\n\nconfigOverrides:\n  enable_oauth: |\n    # This will make sure the redirect_uri is properly computed, even with SSL offloading\n    ENABLE_PROXY_FIX = True\n\n    from flask_appbuilder.security.manager import AUTH_OAUTH\n    AUTH_TYPE = AUTH_OAUTH\n    OAUTH_PROVIDERS = [\n        {\n            "name": "google",\n            "icon": "fa-google",\n            "token_key": "access_token",\n            "remote_app": {\n                "client_id": os.getenv("GOOGLE_KEY"),\n                "client_secret": os.getenv("GOOGLE_SECRET"),\n                "api_base_url": "https://www.googleapis.com/oauth2/v2/",\n                "client_kwargs": {"scope": "email profile"},\n                "request_token_url": None,\n                "access_token_url": "https://accounts.google.com/o/oauth2/token",\n                "authorize_url": "https://accounts.google.com/o/oauth2/auth",\n                "authorize_params": {"hd": os.getenv("AUTH_DOMAIN", "")}\n            },\n        }\n    ]\n\n    # Map Authlib roles to superset roles\n    AUTH_ROLE_ADMIN = \'Admin\'\n    AUTH_ROLE_PUBLIC = \'Public\'\n\n    # Will allow user self registration, allowing to create Flask users from Authorized User\n    AUTH_USER_REGISTRATION = True\n\n    # The default user self registration role\n    AUTH_USER_REGISTRATION_ROLE = "Admin"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"enable-alerts-and-reports",children:"Enable Alerts and Reports"}),"\n",(0,r.jsxs)(n.p,{children:["For this, as per the ",(0,r.jsx)(n.a,{href:"/docs/configuration/alerts-reports",children:"Alerts and Reports doc"}),", you will need to:"]}),"\n",(0,r.jsx)(n.h4,{id:"install-a-supported-webdriver-in-the-celery-worker",children:"Install a supported webdriver in the Celery worker"}),"\n",(0,r.jsxs)(n.p,{children:["This is done either by using a custom image that has the webdriver pre-installed, or installing at startup time by overriding the ",(0,r.jsx)(n.code,{children:"command"}),". Here's a working example for ",(0,r.jsx)(n.code,{children:"chromedriver"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"supersetWorker:\n  command:\n    - /bin/sh\n    - -c\n    - |\n      # Install chrome webdriver\n      # See https://github.com/apache/superset/blob/4fa3b6c7185629b87c27fc2c0e5435d458f7b73d/docs/src/pages/docs/installation/email_reports.mdx\n      apt-get update\n      apt-get install -y wget\n      wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb\n      apt-get install -y --no-install-recommends ./google-chrome-stable_current_amd64.deb\n      wget https://chromedriver.storage.googleapis.com/88.0.4324.96/chromedriver_linux64.zip\n      apt-get install -y zip\n      unzip chromedriver_linux64.zip\n      chmod +x chromedriver\n      mv chromedriver /usr/bin\n      apt-get autoremove -yqq --purge\n      apt-get clean\n      rm -f google-chrome-stable_current_amd64.deb chromedriver_linux64.zip\n\n      # Run\n      . {{ .Values.configMountPath }}/superset_bootstrap.sh; celery --app=superset.tasks.celery_app:app worker\n"})}),"\n",(0,r.jsx)(n.h4,{id:"run-the-celery-beat",children:"Run the Celery beat"}),"\n",(0,r.jsx)(n.p,{children:"This pod will trigger the scheduled tasks configured in the alerts and reports UI section:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"supersetCeleryBeat:\n  enabled: true\n"})}),"\n",(0,r.jsx)(n.h4,{id:"configure-the-appropriate-celery-jobs-and-smtpslack-settings",children:"Configure the appropriate Celery jobs and SMTP/Slack settings"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'extraEnv:\n  SMTP_HOST: smtp.gmail.com\n  SMTP_USER: user@gmail.com\n  SMTP_PORT: "587"\n  SMTP_MAIL_FROM: user@gmail.com\n\nextraSecretEnv:\n  SLACK_API_TOKEN: xoxb-xxxx-yyyy\n  SMTP_PASSWORD: xxxx-yyyy\n\nconfigOverrides:\n  feature_flags: |\n    import ast\n\n    FEATURE_FLAGS = {\n        "ALERT_REPORTS": True\n    }\n\n    SMTP_HOST = os.getenv("SMTP_HOST","localhost")\n    SMTP_STARTTLS = ast.literal_eval(os.getenv("SMTP_STARTTLS", "True"))\n    SMTP_SSL = ast.literal_eval(os.getenv("SMTP_SSL", "False"))\n    SMTP_USER = os.getenv("SMTP_USER","superset")\n    SMTP_PORT = os.getenv("SMTP_PORT",25)\n    SMTP_PASSWORD = os.getenv("SMTP_PASSWORD","superset")\n    SMTP_MAIL_FROM = os.getenv("SMTP_MAIL_FROM","superset@superset.com")\n\n    SLACK_API_TOKEN = os.getenv("SLACK_API_TOKEN",None)\n  celery_conf: |\n    from celery.schedules import crontab\n\n    class CeleryConfig:\n      broker_url = f"redis://{env(\'REDIS_HOST\')}:{env(\'REDIS_PORT\')}/0"\n      imports = (\n          "superset.sql_lab",\n          "superset.tasks.cache",\n          "superset.tasks.scheduler",\n      )\n      result_backend = f"redis://{env(\'REDIS_HOST\')}:{env(\'REDIS_PORT\')}/0"\n      task_annotations = {\n          "sql_lab.get_sql_results": {\n              "rate_limit": "100/s",\n          },\n      }\n      beat_schedule = {\n          "reports.scheduler": {\n              "task": "reports.scheduler",\n              "schedule": crontab(minute="*", hour="*"),\n          },\n          "reports.prune_log": {\n              "task": "reports.prune_log",\n              \'schedule\': crontab(minute=0, hour=0),\n          },\n          \'cache-warmup-hourly\': {\n              "task": "cache-warmup",\n              "schedule": crontab(minute="*/30", hour="*"),\n              "kwargs": {\n                  "strategy_name": "top_n_dashboards",\n                  "top_n": 10,\n                  "since": "7 days ago",\n              },\n          }\n      }\n\n    CELERY_CONFIG = CeleryConfig\n  reports: |\n    EMAIL_PAGE_RENDER_WAIT = 60\n    WEBDRIVER_BASEURL = "http://{{ template "superset.fullname" . }}:{{ .Values.service.port }}/"\n    WEBDRIVER_BASEURL_USER_FRIENDLY = "https://www.example.com/"\n    WEBDRIVER_TYPE= "chrome"\n    WEBDRIVER_OPTION_ARGS = [\n        "--force-device-scale-factor=2.0",\n        "--high-dpi-support=2.0",\n        "--headless",\n        "--disable-gpu",\n        "--disable-dev-shm-usage",\n        # This is required because our process runs as root (in order to install pip packages)\n        "--no-sandbox",\n        "--disable-setuid-sandbox",\n        "--disable-extensions",\n    ]\n'})}),"\n",(0,r.jsx)(n.h3,{id:"load-the-examples-data-and-dashboards",children:"Load the Examples data and dashboards"}),"\n",(0,r.jsxs)(n.p,{children:["If you are trying Superset out and want some data and dashboards to explore, you can load some examples by creating a ",(0,r.jsx)(n.code,{children:"my_values.yaml"})," and deploying it as described above in the ",(0,r.jsx)(n.strong,{children:"Configure your setting overrides"})," step of the ",(0,r.jsx)(n.strong,{children:"Running"})," section.\nTo load the examples, add the following to the ",(0,r.jsx)(n.code,{children:"my_values.yaml"})," file:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"init:\n  loadExamples: true\n"})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var r=s(96540);const t={},i=r.createContext(t);function a(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);