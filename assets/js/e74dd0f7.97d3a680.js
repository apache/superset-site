"use strict";(self.webpackChunkdocs_v_2=self.webpackChunkdocs_v_2||[]).push([[1786],{15680:(e,n,t)=>{t.d(n,{xA:()=>g,yg:()=>c});var a=t(96540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),p=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},g=function(e){var n=p(e.components);return a.createElement(l.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,g=s(e,["components","mdxType","originalType","parentName"]),u=p(t),m=r,c=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return t?a.createElement(c,i(i({ref:n},g),{},{components:t})):a.createElement(c,i({ref:n},g))}));function c(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[u]="string"==typeof e?e:r,i[1]=s;for(var p=2;p<o;p++)i[p]=t[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},47274:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var a=t(58168),r=(t(96540),t(15680));const o={title:"Setting up a Development Environment",sidebar_position:3,version:1},i="Setting up a Development Envrionment",s={unversionedId:"contributing/development",id:"contributing/development",title:"Setting up a Development Environment",description:"The documentation in this section is a bit of a patchwork of knowledge representing the",source:"@site/docs/contributing/development.mdx",sourceDirName:"contributing",slug:"/contributing/development",permalink:"/docs/contributing/development",draft:!1,editUrl:"https://github.com/apache/superset/edit/master/docs/docs/contributing/development.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Setting up a Development Environment",sidebar_position:3,version:1},sidebar:"CustomSidebar",previous:{title:"Guidelines",permalink:"/docs/contributing/guidelines"},next:{title:"Development How-tos",permalink:"/docs/contributing/howtos"}},l={},p=[{value:"Fork and Clone",id:"fork-and-clone",level:2},{value:"docker-compose (recommended!)",id:"docker-compose-recommended",level:2},{value:"Installing Development Tools",id:"installing-development-tools",level:2},{value:"Python environment",id:"python-environment",level:3},{value:"Git Hooks",id:"git-hooks",level:3},{value:"Alternatives to docker-compose",id:"alternatives-to-docker-compose",level:2},{value:"Flask server",id:"flask-server",level:3},{value:"OS Dependencies",id:"os-dependencies",level:4},{value:"Dependencies",id:"dependencies",level:4},{value:"Logging to the browser console",id:"logging-to-the-browser-console",level:4},{value:"Frontend",id:"frontend",level:3},{value:"Prerequisite",id:"prerequisite",level:4},{value:"nvm and node",id:"nvm-and-node",level:5},{value:"Install dependencies",id:"install-dependencies",level:4},{value:"Build assets",id:"build-assets",level:4},{value:"Webpack dev server",id:"webpack-dev-server",level:4},{value:"Other npm commands",id:"other-npm-commands",level:4},{value:"Docker (docker compose)",id:"docker-docker-compose",level:4},{value:"Updating NPM packages",id:"updating-npm-packages",level:4},{value:"Feature flags",id:"feature-flags",level:4},{value:"Git Hooks",id:"git-hooks-1",level:2},{value:"Linting",id:"linting",level:2},{value:"Python",id:"python",level:3},{value:"TypeScript",id:"typescript",level:3},{value:"Testing",id:"testing",level:2},{value:"Python Testing",id:"python-testing",level:3},{value:"Frontend Testing",id:"frontend-testing",level:3},{value:"Integration Testing",id:"integration-testing",level:3},{value:"Debugging Server App",id:"debugging-server-app",level:3},{value:"Local",id:"local",level:4},{value:"Raw Docker (without docker-compose)",id:"raw-docker-without-docker-compose",level:4},{value:"Debugging Server App in Kubernetes Environment",id:"debugging-server-app-in-kubernetes-environment",level:3},{value:"Storybook",id:"storybook",level:3},{value:"Translating",id:"translating",level:2},{value:"Enabling language selection",id:"enabling-language-selection",level:3},{value:"Updating language files",id:"updating-language-files",level:3},{value:"Creating a new language dictionary",id:"creating-a-new-language-dictionary",level:3},{value:"Tips",id:"tips",level:2},{value:"Adding a new datasource",id:"adding-a-new-datasource",level:3},{value:"Visualization Plugins",id:"visualization-plugins",level:3},{value:"Adding a DB migration",id:"adding-a-db-migration",level:3},{value:"Merging DB migrations",id:"merging-db-migrations",level:3}],g={toc:p},u="wrapper";function d(e){let{components:n,...t}=e;return(0,r.yg)(u,(0,a.A)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"setting-up-a-development-envrionment"},"Setting up a Development Envrionment"),(0,r.yg)("p",null,"The documentation in this section is a bit of a patchwork of knowledge representing the\nmultitude of ways that exist to run Superset (",(0,r.yg)("inlineCode",{parentName:"p"},"docker-compose"),', just "docker", on "metal", using\na Makefile).'),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("p",{parentName:"admonition"},"Now we have evolved to recommend and support ",(0,r.yg)("inlineCode",{parentName:"p"},"docker-compose")," more actively as the main way\nto run Superset for development and preserve your sanity. ",(0,r.yg)("strong",{parentName:"p"},'Most people should stick to\nthe first few sections - ("Fork & Clone", "docker-compose" and "Installing Dev Tools")'))),(0,r.yg)("h2",{id:"fork-and-clone"},"Fork and Clone"),(0,r.yg)("p",null,"First, ",(0,r.yg)("a",{parentName:"p",href:"https://help.github.com/articles/about-forks/"},"fork the repository on GitHub"),",\nthen clone it."),(0,r.yg)("p",null,"Second, you can clone the main repository directly, but you won't be able to send pull requests."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"git clone git@github.com:your-username/superset.git\ncd superset\n")),(0,r.yg)("h2",{id:"docker-compose-recommended"},"docker-compose (recommended!)"),(0,r.yg)("p",null,'Setting things up to squeeze an "hello world" into any part of Superset should be as simple as'),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"docker-compose up\n")),(0,r.yg)("p",null,"Note that:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"this will pull/build docker images and run a cluster of services, including:",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"A Superset ",(0,r.yg)("strong",{parentName:"li"},"Flask web server"),", mounting the local python repo/code"),(0,r.yg)("li",{parentName:"ul"},"A Superset ",(0,r.yg)("strong",{parentName:"li"},"Celery worker"),", also mounting the local python repo/code"),(0,r.yg)("li",{parentName:"ul"},"A Superset ",(0,r.yg)("strong",{parentName:"li"},"Node service"),", mounting, compiling and bundling the JS/TS assets"),(0,r.yg)("li",{parentName:"ul"},"A Superset ",(0,r.yg)("strong",{parentName:"li"},"Node websocket service")," to power the async backend"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Postgres")," as the metadata database and to store example datasets, charts and dashboards whic\nshould be populated upon startup"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Redis")," as the message queue for our async backend and caching backend"))),(0,r.yg)("li",{parentName:"ul"},"It'll load up examples into the database upon first startup"),(0,r.yg)("li",{parentName:"ul"},"all other details and pointers available in\n",(0,r.yg)("a",{parentName:"li",href:"https://github.com/apache/superset/blob/master/docker-compose.yml"},"docker-compose.yml")),(0,r.yg)("li",{parentName:"ul"},"The local repository is mounted withing the services, meaning updating\nthe code on the host will be reflected in the docker images"),(0,r.yg)("li",{parentName:"ul"},"Superset is served at localhost:8088/"),(0,r.yg)("li",{parentName:"ul"},"You can login with admin/admin")),(0,r.yg)("admonition",{type:"caution"},(0,r.yg)("p",{parentName:"admonition"},"Since ",(0,r.yg)("inlineCode",{parentName:"p"},"docker-compose")," is primarily designed to run a set of containers on ",(0,r.yg)("strong",{parentName:"p"},"a single host"),"\nand can't credibly support ",(0,r.yg)("strong",{parentName:"p"},"high availability")," as a result, we do not support nor recommend\nusing our ",(0,r.yg)("inlineCode",{parentName:"p"},"docker-compose")," constructs to support production-type use-cases. For single host\nenvironments, we recommend using ",(0,r.yg)("a",{parentName:"p",href:"https://minikube.sigs.k8s.io/docs/start/"},"minikube")," along\nour ",(0,r.yg)("a",{parentName:"p",href:"https://superset.apache.org/docs/installation/running-on-kubernetes"},"installing on k8s"),"\ndocumentation.\nconfigured to be secure.")),(0,r.yg)("h2",{id:"installing-development-tools"},"Installing Development Tools"),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("p",{parentName:"admonition"},"While docker-compose simplifies a lot of the setup, there are still\nmany things you'll want to set up locally to power your IDE, and things like\n",(0,r.yg)("strong",{parentName:"p"},"commit hooks"),", ",(0,r.yg)("strong",{parentName:"p"},"linters"),", and ",(0,r.yg)("strong",{parentName:"p"},"test-runners"),". Note that you can do these\nthings inside docker images with commands like ",(0,r.yg)("inlineCode",{parentName:"p"},"docker-compose exec superset_app bash")," for\ninstance, but many people like to run that tooling from their host.")),(0,r.yg)("h3",{id:"python-environment"},"Python environment"),(0,r.yg)("p",null,"Assuming you already have a way to setup your python environments\nlike ",(0,r.yg)("inlineCode",{parentName:"p"},"pyenv"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"virtualenv")," or something else, all you should have to\ndo is to install our dev, pinned python requirements bundle"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"pip install -r requirements/development.txt\n")),(0,r.yg)("h3",{id:"git-hooks"},"Git Hooks"),(0,r.yg)("p",null,"Superset uses Git pre-commit hooks courtesy of ",(0,r.yg)("a",{parentName:"p",href:"https://pre-commit.com/"},"pre-commit"),".\nTo install run the following:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"pre-commit install\n")),(0,r.yg)("p",null,"A series of checks will now run when you make a git commit."),(0,r.yg)("h2",{id:"alternatives-to-docker-compose"},"Alternatives to docker-compose"),(0,r.yg)("admonition",{type:"caution"},(0,r.yg)("p",{parentName:"admonition"},"This part of the documentation is a patchwork of information related to setting up\ndevelopment environments without ",(0,r.yg)("inlineCode",{parentName:"p"},"docker-compose")," and are documented/supported to varying\ndegrees. It's been difficult to maintain this wide array of methods and insure they're\nfunctioning across environments.")),(0,r.yg)("h3",{id:"flask-server"},"Flask server"),(0,r.yg)("h4",{id:"os-dependencies"},"OS Dependencies"),(0,r.yg)("p",null,"Make sure your machine meets the ",(0,r.yg)("a",{parentName:"p",href:"https://superset.apache.org/docs/installation/pypi#os-dependencies"},"OS dependencies")," before following these steps.\nYou also need to install MySQL or ",(0,r.yg)("a",{parentName:"p",href:"https://mariadb.com/downloads"},"MariaDB"),"."),(0,r.yg)("p",null,"Ensure that you are using Python version 3.9, 3.10 or 3.11, then proceed with:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"# Create a virtual environment and activate it (recommended)\npython3 -m venv venv # setup a python3 virtualenv\nsource venv/bin/activate\n\n# Install external dependencies\npip install -r requirements/development.txt\n\n# Install Superset in editable (development) mode\npip install -e .\n\n# Initialize the database\nsuperset db upgrade\n\n# Create an admin user in your metadata database (use `admin` as username to be able to load the examples)\nsuperset fab create-admin\n\n# Create default roles and permissions\nsuperset init\n\n# Load some data to play with.\n# Note: you MUST have previously created an admin user with the username `admin` for this command to work.\nsuperset load-examples\n\n# Start the Flask dev web server from inside your virtualenv.\n# Note that your page may not have CSS at this point.\n# See instructions below how to build the front-end assets.\nsuperset run -p 8088 --with-threads --reload --debugger --debug\n")),(0,r.yg)("p",null,"Or you can install via our Makefile"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"# Create a virtual environment and activate it (recommended)\n$ python3 -m venv venv # setup a python3 virtualenv\n$ source venv/bin/activate\n\n# install pip packages + pre-commit\n$ make install\n\n# Install superset pip packages and setup env only\n$ make superset\n\n# Setup pre-commit only\n$ make pre-commit\n")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Note: the FLASK_APP env var should not need to be set, as it's currently controlled\nvia ",(0,r.yg)("inlineCode",{parentName:"strong"},".flaskenv"),", however if needed, it should be set to ",(0,r.yg)("inlineCode",{parentName:"strong"},"superset.app:create_app()"))),(0,r.yg)("p",null,"If you have made changes to the FAB-managed templates, which are not built the same way as the newer, React-powered front-end assets, you need to start the app without the ",(0,r.yg)("inlineCode",{parentName:"p"},"--with-threads")," argument like so:\n",(0,r.yg)("inlineCode",{parentName:"p"},"superset run -p 8088 --reload --debugger --debug")),(0,r.yg)("h4",{id:"dependencies"},"Dependencies"),(0,r.yg)("p",null,"If you add a new requirement or update an existing requirement (per the ",(0,r.yg)("inlineCode",{parentName:"p"},"install_requires")," section in ",(0,r.yg)("inlineCode",{parentName:"p"},"setup.py"),") you must recompile (freeze) the Python dependencies to ensure that for CI, testing, etc. the build is deterministic. This can be achieved via,"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"$ python3 -m venv venv\n$ source venv/bin/activate\n$ python3 -m pip install -r requirements/development.txt\n$ pip-compile-multi --no-upgrade\n")),(0,r.yg)("p",null,"When upgrading the version number of a single package, you should run ",(0,r.yg)("inlineCode",{parentName:"p"},"pip-compile-multi")," with the ",(0,r.yg)("inlineCode",{parentName:"p"},"-P")," flag:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"$ pip-compile-multi -P my-package\n")),(0,r.yg)("p",null,"To bring all dependencies up to date as per the restrictions defined in ",(0,r.yg)("inlineCode",{parentName:"p"},"setup.py")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"requirements/*.in"),", run pip-compile-multi` without any flags:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"$ pip-compile-multi\n")),(0,r.yg)("p",null,"This should be done periodically, but it is recommended to do thorough manual testing of the application to ensure no breaking changes have been introduced that aren't caught by the unit and integration tests."),(0,r.yg)("h4",{id:"logging-to-the-browser-console"},"Logging to the browser console"),(0,r.yg)("p",null,"This feature is only available on Python 3. When debugging your application, you can have the server logs sent directly to the browser console using the ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/betodealmeida/consolelog"},"ConsoleLog")," package. You need to mutate the app, by adding the following to your ",(0,r.yg)("inlineCode",{parentName:"p"},"config.py")," or ",(0,r.yg)("inlineCode",{parentName:"p"},"superset_config.py"),":"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},"from console_log import ConsoleLog\n\ndef FLASK_APP_MUTATOR(app):\n    app.wsgi_app = ConsoleLog(app.wsgi_app, app.logger)\n")),(0,r.yg)("p",null,"Then make sure you run your WSGI server using the right worker type:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},'gunicorn "superset.app:create_app()" -k "geventwebsocket.gunicorn.workers.GeventWebSocketWorker" -b 127.0.0.1:8088 --reload\n')),(0,r.yg)("p",null,"You can log anything to the browser console, including objects:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},"from superset import app\napp.logger.error('An exception occurred!')\napp.logger.info(form_data)\n")),(0,r.yg)("h3",{id:"frontend"},"Frontend"),(0,r.yg)("p",null,"Frontend assets (TypeScript, JavaScript, CSS, and images) must be compiled in order to properly display the web UI. The ",(0,r.yg)("inlineCode",{parentName:"p"},"superset-frontend")," directory contains all NPM-managed frontend assets. Note that for some legacy pages there are additional frontend assets bundled with Flask-Appbuilder (e.g. jQuery and bootstrap). These are not managed by NPM and may be phased out in the future."),(0,r.yg)("h4",{id:"prerequisite"},"Prerequisite"),(0,r.yg)("h5",{id:"nvm-and-node"},"nvm and node"),(0,r.yg)("p",null,"First, be sure you are using the following versions of Node.js and npm:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"Node.js"),": Version 18"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"npm"),": Version 10")),(0,r.yg)("p",null,"We recommend using ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/nvm-sh/nvm"},"nvm")," to manage your node environment:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},'curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.0/install.sh | bash\n\nincase it shows \'-bash: nvm: command not found\'\nexport NVM_DIR="$HOME/.nvm"\n[ -s "$NVM_DIR/nvm.sh" ] && \\. "$NVM_DIR/nvm.sh"  # This loads nvm\n[ -s "$NVM_DIR/bash_completion" ] && \\. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion\n\ncd superset-frontend\nnvm install --lts\nnvm use --lts\n')),(0,r.yg)("p",null,"Or if you use the default macOS starting with Catalina shell ",(0,r.yg)("inlineCode",{parentName:"p"},"zsh"),", try:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-zsh"},'sh -c "$(curl -fsSL https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.0/install.sh)"\n')),(0,r.yg)("p",null,"For those interested, you may also try out ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/nvm-sh/nvm#deeper-shell-integration"},"avn")," to automatically switch to the node version that is required to run Superset frontend."),(0,r.yg)("h4",{id:"install-dependencies"},"Install dependencies"),(0,r.yg)("p",null,"Install third-party dependencies listed in ",(0,r.yg)("inlineCode",{parentName:"p"},"package.json")," via:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"# From the root of the repository\ncd superset-frontend\n\n# Install dependencies from `package-lock.json`\nnpm ci\n")),(0,r.yg)("p",null,"Note that Superset uses ",(0,r.yg)("a",{parentName:"p",href:"https://docs.scarf.sh"},"Scarf")," to capture telemetry/analytics about versions being installed, including the ",(0,r.yg)("inlineCode",{parentName:"p"},"scarf-js")," npm package and an analytics pixel. As noted elsewhere in this documentation, Scarf gathers aggregated stats for the sake of security/release strategy, and does not capture/retain PII. ",(0,r.yg)("a",{parentName:"p",href:"https://docs.scarf.sh/package-analytics/"},"You can read here")," about the ",(0,r.yg)("inlineCode",{parentName:"p"},"scarf-js")," package, and various means to opt out of it, but you can opt out of the npm package ",(0,r.yg)("em",{parentName:"p"},"and")," the pixel by setting the ",(0,r.yg)("inlineCode",{parentName:"p"},"SCARF_ANALYTICS")," envinronment variable to ",(0,r.yg)("inlineCode",{parentName:"p"},"false")," or opt out of the pixel by adding this setting in ",(0,r.yg)("inlineCode",{parentName:"p"},"superset-frontent/package.json"),":"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'// your-package/package.json\n{\n  // ...\n  "scarfSettings": {\n    "enabled": false\n  }\n  // ...\n}\n')),(0,r.yg)("h4",{id:"build-assets"},"Build assets"),(0,r.yg)("p",null,"There are three types of assets you can build:"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("inlineCode",{parentName:"li"},"npm run build"),": the production assets, CSS/JSS minified and optimized"),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("inlineCode",{parentName:"li"},"npm run dev-server"),": local development assets, with sourcemaps and hot refresh support"),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("inlineCode",{parentName:"li"},"npm run build-instrumented"),": instrumented application code for collecting code coverage from Cypress tests")),(0,r.yg)("p",null,"If while using the above commands you encounter an error related to the limit of file watchers:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"Error: ENOSPC: System limit for number of file watchers reached\n")),(0,r.yg)("p",null,"The error is thrown because the number of files monitored by the system has reached the limit.\nYou can address this this error by increasing the number of inotify watchers."),(0,r.yg)("p",null,"The current value of max watches can be checked with:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"cat /proc/sys/fs/inotify/max_user_watches\n")),(0,r.yg)("p",null,"Edit the file /etc/sysctl.conf to increase this value.\nThe value needs to be decided based on the system memory ",(0,r.yg)("a",{parentName:"p",href:"https://stackoverflow.com/questions/535768/what-is-a-reasonable-amount-of-inotify-watches-with-linux"},"(see this StackOverflow answer for more context)"),"."),(0,r.yg)("p",null,"Open the file in editor and add a line at the bottom specifying the max watches values."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"fs.inotify.max_user_watches=524288\n")),(0,r.yg)("p",null,"Save the file and exit editor.\nTo confirm that the change succeeded, run the following command to load the updated value of max_user_watches from sysctl.conf:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo sysctl -p\n")),(0,r.yg)("h4",{id:"webpack-dev-server"},"Webpack dev server"),(0,r.yg)("p",null,"The dev server by default starts at ",(0,r.yg)("inlineCode",{parentName:"p"},"http://localhost:9000")," and proxies the backend requests to ",(0,r.yg)("inlineCode",{parentName:"p"},"http://localhost:8088"),"."),(0,r.yg)("p",null,"So a typical development workflow is the following:"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("a",{parentName:"li",href:"#flask-server"},"run Superset locally")," using Flask, on port ",(0,r.yg)("inlineCode",{parentName:"li"},"8088")," \u2014 but don't access it directly,",(0,r.yg)("br",null),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"# Install Superset and dependencies, plus load your virtual environment first, as detailed above.\nsuperset run -p 8088 --with-threads --reload --debugger --debug\n"))),(0,r.yg)("li",{parentName:"ol"},"in parallel, run the Webpack dev server locally on port ",(0,r.yg)("inlineCode",{parentName:"li"},"9000"),",",(0,r.yg)("br",null),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"npm run dev-server\n"))),(0,r.yg)("li",{parentName:"ol"},"access ",(0,r.yg)("inlineCode",{parentName:"li"},"http://localhost:9000")," (the Webpack server, ",(0,r.yg)("em",{parentName:"li"},"not")," Flask) in your web browser. This will use the hot-reloading front-end assets from the Webpack development server while redirecting back-end queries to Flask/Superset: your changes on Superset codebase \u2014 either front or back-end \u2014 will then be reflected live in the browser.")),(0,r.yg)("p",null,"It's possible to change the Webpack server settings:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"# Start the dev server at http://localhost:9000\nnpm run dev-server\n\n# Run the dev server on a non-default port\nnpm run dev-server -- --port=9001\n\n# Proxy backend requests to a Flask server running on a non-default port\nnpm run dev-server -- --env=--supersetPort=8081\n\n# Proxy to a remote backend but serve local assets\nnpm run dev-server -- --env=--superset=https://superset-dev.example.com\n")),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"--superset=")," option is useful in case you want to debug a production issue or have to setup Superset behind a firewall. It allows you to run Flask server in another environment while keep assets building locally for the best developer experience."),(0,r.yg)("h4",{id:"other-npm-commands"},"Other npm commands"),(0,r.yg)("p",null,"Alternatively, there are other NPM commands you may find useful:"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("inlineCode",{parentName:"li"},"npm run build-dev"),": build assets in development mode."),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("inlineCode",{parentName:"li"},"npm run dev"),": built dev assets in watch mode, will automatically rebuild when a file changes")),(0,r.yg)("h4",{id:"docker-docker-compose"},"Docker (docker compose)"),(0,r.yg)("p",null,"See docs ",(0,r.yg)("a",{parentName:"p",href:"https://superset.apache.org/docs/installation/docker-compose"},"here")),(0,r.yg)("h4",{id:"updating-npm-packages"},"Updating NPM packages"),(0,r.yg)("p",null,"Use npm in the prescribed way, making sure that\n",(0,r.yg)("inlineCode",{parentName:"p"},"superset-frontend/package-lock.json")," is updated according to ",(0,r.yg)("inlineCode",{parentName:"p"},"npm"),"-prescribed\nbest practices."),(0,r.yg)("h4",{id:"feature-flags"},"Feature flags"),(0,r.yg)("p",null,"Superset supports a server-wide feature flag system, which eases the incremental development of features. To add a new feature flag, simply modify ",(0,r.yg)("inlineCode",{parentName:"p"},"superset_config.py")," with something like the following:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},"FEATURE_FLAGS = {\n    'SCOPED_FILTER': True,\n}\n")),(0,r.yg)("p",null,"If you want to use the same flag in the client code, also add it to the FeatureFlag TypeScript enum in ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/apache/superset/blob/master/superset-frontend/packages/superset-ui-core/src/utils/featureFlags.ts"},"@superset-ui/core"),". For example,"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},'export enum FeatureFlag {\n  SCOPED_FILTER = "SCOPED_FILTER",\n}\n')),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"superset/config.py")," contains ",(0,r.yg)("inlineCode",{parentName:"p"},"DEFAULT_FEATURE_FLAGS")," which will be overwritten by\nthose specified under FEATURE_FLAGS in ",(0,r.yg)("inlineCode",{parentName:"p"},"superset_config.py"),". For example, ",(0,r.yg)("inlineCode",{parentName:"p"},"DEFAULT_FEATURE_FLAGS = { 'FOO': True, 'BAR': False }")," in ",(0,r.yg)("inlineCode",{parentName:"p"},"superset/config.py")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"FEATURE_FLAGS = { 'BAR': True, 'BAZ': True }")," in ",(0,r.yg)("inlineCode",{parentName:"p"},"superset_config.py")," will result\nin combined feature flags of ",(0,r.yg)("inlineCode",{parentName:"p"},"{ 'FOO': True, 'BAR': True, 'BAZ': True }"),"."),(0,r.yg)("p",null,"The current status of the usability of each flag (stable vs testing, etc) can be found in ",(0,r.yg)("inlineCode",{parentName:"p"},"RESOURCES/FEATURE_FLAGS.md"),"."),(0,r.yg)("h2",{id:"git-hooks-1"},"Git Hooks"),(0,r.yg)("p",null,"Superset uses Git pre-commit hooks courtesy of ",(0,r.yg)("a",{parentName:"p",href:"https://pre-commit.com/"},"pre-commit"),". To install run the following:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"pip3 install -r requirements/development.txt\npre-commit install\n")),(0,r.yg)("p",null,"A series of checks will now run when you make a git commit."),(0,r.yg)("p",null,"Alternatively it is possible to run pre-commit via tox:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"tox -e pre-commit\n")),(0,r.yg)("p",null,"Or by running pre-commit manually:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"pre-commit run --all-files\n")),(0,r.yg)("h2",{id:"linting"},"Linting"),(0,r.yg)("h3",{id:"python"},"Python"),(0,r.yg)("p",null,"We use ",(0,r.yg)("a",{parentName:"p",href:"https://pylint.org/"},"Pylint")," for linting which can be invoked via:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"# for python\ntox -e pylint\n")),(0,r.yg)("p",null,"In terms of best practices please avoid blanket disabling of Pylint messages globally (via ",(0,r.yg)("inlineCode",{parentName:"p"},".pylintrc"),") or top-level within the file header, albeit there being a few exceptions. Disabling should occur inline as it prevents masking issues and provides context as to why said message is disabled."),(0,r.yg)("p",null,"Additionally, the Python code is auto-formatted using ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/python/black"},"Black")," which\nis configured as a pre-commit hook. There are also numerous ",(0,r.yg)("a",{parentName:"p",href:"https://black.readthedocs.io/en/stable/integrations/editors.html"},"editor integrations")),(0,r.yg)("h3",{id:"typescript"},"TypeScript"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"cd superset-frontend\nnpm ci\n# run eslint checks\nnpm run eslint -- .\n# run tsc (typescript) checks\nnpm run type\n")),(0,r.yg)("p",null,"If using the eslint extension with vscode, put the following in your workspace ",(0,r.yg)("inlineCode",{parentName:"p"},"settings.json")," file:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'"eslint.workingDirectories": [\n  "superset-frontend"\n]\n')),(0,r.yg)("h2",{id:"testing"},"Testing"),(0,r.yg)("h3",{id:"python-testing"},"Python Testing"),(0,r.yg)("p",null,"All python tests are carried out in ",(0,r.yg)("a",{parentName:"p",href:"https://tox.readthedocs.io/en/latest/index.html"},"tox"),"\na standardized testing framework.\nAll python tests can be run with any of the tox ",(0,r.yg)("a",{parentName:"p",href:"https://tox.readthedocs.io/en/latest/example/basic.html#a-simple-tox-ini-default-environments"},"environments"),", via,"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"tox -e <environment>\n")),(0,r.yg)("p",null,"For example,"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"tox -e py38\n")),(0,r.yg)("p",null,"Alternatively, you can run all tests in a single file via,"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"tox -e <environment> -- tests/test_file.py\n")),(0,r.yg)("p",null,"or for a specific test via,"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"tox -e <environment> -- tests/test_file.py::TestClassName::test_method_name\n")),(0,r.yg)("p",null,"Note that the test environment uses a temporary directory for defining the\nSQLite databases which will be cleared each time before the group of test\ncommands are invoked."),(0,r.yg)("p",null,"There is also a utility script included in the Superset codebase to run python integration tests. The ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/apache/superset/tree/master/scripts/tests"},"readme can be\nfound here")),(0,r.yg)("p",null,"To run all integration tests for example, run this script from the root directory:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"scripts/tests/run.sh\n")),(0,r.yg)("p",null,"You can run unit tests found in './tests/unit_tests' for example with pytest. It is a simple way to run an isolated test that doesn't need any database setup"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"pytest ./link_to_test.py\n")),(0,r.yg)("h3",{id:"frontend-testing"},"Frontend Testing"),(0,r.yg)("p",null,"We use ",(0,r.yg)("a",{parentName:"p",href:"https://jestjs.io/"},"Jest")," and ",(0,r.yg)("a",{parentName:"p",href:"https://airbnb.io/enzyme/"},"Enzyme")," to test TypeScript/JavaScript. Tests can be run with:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"cd superset-frontend\nnpm run test\n")),(0,r.yg)("p",null,"To run a single test file:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"npm run test -- path/to/file.js\n")),(0,r.yg)("h3",{id:"integration-testing"},"Integration Testing"),(0,r.yg)("p",null,"We use ",(0,r.yg)("a",{parentName:"p",href:"https://www.cypress.io/"},"Cypress")," for integration tests. Tests can be run by ",(0,r.yg)("inlineCode",{parentName:"p"},"tox -e cypress"),". To open Cypress and explore tests first setup and run test server:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},'export SUPERSET_CONFIG=tests.integration_tests.superset_test_config\nexport SUPERSET_TESTENV=true\nexport CYPRESS_BASE_URL="http://localhost:8081"\nsuperset db upgrade\nsuperset load_test_users\nsuperset load-examples --load-test-data\nsuperset init\nsuperset run --port 8081\n')),(0,r.yg)("p",null,"Run Cypress tests:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},'cd superset-frontend\nnpm run build-instrumented\n\ncd cypress-base\nnpm install\n\n# run tests via headless Chrome browser (requires Chrome 64+)\nnpm run cypress-run-chrome\n\n# run tests from a specific file\nnpm run cypress-run-chrome -- --spec cypress/e2e/explore/link.test.ts\n\n# run specific file with video capture\nnpm run cypress-run-chrome -- --spec cypress/e2e/dashboard/index.test.js --config video=true\n\n# to open the cypress ui\nnpm run cypress-debug\n\n# to point cypress to a url other than the default (http://localhost:8088) set the environment variable before running the script\n# e.g., CYPRESS_BASE_URL="http://localhost:9000"\nCYPRESS_BASE_URL=<your url> npm run cypress open\n')),(0,r.yg)("p",null,"See ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/apache/superset/blob/master/superset-frontend/cypress_build.sh"},(0,r.yg)("inlineCode",{parentName:"a"},"superset-frontend/cypress_build.sh")),"."),(0,r.yg)("p",null,"As an alternative you can use docker compose environment for testing:"),(0,r.yg)("p",null,"Make sure you have added below line to your /etc/hosts file:\n",(0,r.yg)("inlineCode",{parentName:"p"},"127.0.0.1 db")),(0,r.yg)("p",null,"If you already have launched Docker environment please use the following command to assure a fresh database instance:\n",(0,r.yg)("inlineCode",{parentName:"p"},"docker compose down -v")),(0,r.yg)("p",null,"Launch environment:"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"CYPRESS_CONFIG=true docker compose up")),(0,r.yg)("p",null,"It will serve backend and frontend on port 8088."),(0,r.yg)("p",null,"Run Cypress tests:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"cd cypress-base\nnpm install\nnpm run cypress open\n")),(0,r.yg)("h3",{id:"debugging-server-app"},"Debugging Server App"),(0,r.yg)("h4",{id:"local"},"Local"),(0,r.yg)("p",null,"For debugging locally using VSCode, you can configure a launch configuration file .vscode/launch.json such as"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "version": "0.2.0",\n  "configurations": [\n    {\n      "name": "Python: Flask",\n      "type": "python",\n      "request": "launch",\n      "module": "flask",\n      "env": {\n        "FLASK_APP": "superset",\n        "SUPERSET_ENV": "development"\n      },\n      "args": ["run", "-p 8088", "--with-threads", "--reload", "--debugger"],\n      "jinja": true,\n      "justMyCode": true\n    }\n  ]\n}\n')),(0,r.yg)("h4",{id:"raw-docker-without-docker-compose"},"Raw Docker (without docker-compose)"),(0,r.yg)("p",null,"Follow these instructions to debug the Flask app running inside a docker container. Note that\nthis will run a barebones Superset web server,"),(0,r.yg)("p",null,"First add the following to the ./docker-compose.yaml file"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-diff"},'superset:\n    env_file: docker/.env\n    image: *superset-image\n    container_name: superset_app\n    command: ["/app/docker/docker-bootstrap.sh", "app"]\n    restart: unless-stopped\n+   cap_add:\n+     - SYS_PTRACE\n    ports:\n      - 8088:8088\n+     - 5678:5678\n    user: "root"\n    depends_on: *superset-depends-on\n    volumes: *superset-volumes\n    environment:\n      CYPRESS_CONFIG: "${CYPRESS_CONFIG}"\n')),(0,r.yg)("p",null,"Start Superset as usual"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"docker compose up\n")),(0,r.yg)("p",null,"Install the required libraries and packages to the docker container"),(0,r.yg)("p",null,"Enter the superset_app container"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"docker exec -it superset_app /bin/bash\nroot@39ce8cf9d6ab:/app#\n")),(0,r.yg)("p",null,"Run the following commands inside the container"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"apt update\napt install -y gdb\napt install -y net-tools\npip install debugpy\n")),(0,r.yg)("p",null,"Find the PID for the Flask process. Make sure to use the first PID. The Flask app will re-spawn a sub-process every time you change any of the python code. So it's important to use the first PID."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"ps -ef\n\nUID        PID  PPID  C STIME TTY          TIME CMD\nroot         1     0  0 14:09 ?        00:00:00 bash /app/docker/docker-bootstrap.sh app\nroot         6     1  4 14:09 ?        00:00:04 /usr/local/bin/python /usr/bin/flask run -p 8088 --with-threads --reload --debugger --host=0.0.0.0\nroot        10     6  7 14:09 ?        00:00:07 /usr/local/bin/python /usr/bin/flask run -p 8088 --with-threads --reload --debugger --host=0.0.0.0\n")),(0,r.yg)("p",null,"Inject debugpy into the running Flask process. In this case PID 6."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"python3 -m debugpy --listen 0.0.0.0:5678 --pid 6\n")),(0,r.yg)("p",null,"Verify that debugpy is listening on port 5678"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"netstat -tunap\n\nActive Internet connections (servers and established)\nProto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name\ntcp        0      0 0.0.0.0:5678            0.0.0.0:*               LISTEN      462/python\ntcp        0      0 0.0.0.0:8088            0.0.0.0:*               LISTEN      6/python\n")),(0,r.yg)("p",null,"You are now ready to attach a debugger to the process. Using VSCode you can configure a launch configuration file .vscode/launch.json like so."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "version": "0.2.0",\n  "configurations": [\n    {\n      "name": "Attach to Superset App in Docker Container",\n      "type": "python",\n      "request": "attach",\n      "connect": {\n        "host": "127.0.0.1",\n        "port": 5678\n      },\n      "pathMappings": [\n        {\n          "localRoot": "${workspaceFolder}",\n          "remoteRoot": "/app"\n        }\n      ]\n    }\n  ]\n}\n')),(0,r.yg)("p",null,'VSCode will not stop on breakpoints right away. We\'ve attached to PID 6 however it does not yet know of any sub-processes. In order to "wake up" the debugger you need to modify a python file. This will trigger Flask to reload the code and create a new sub-process. This new sub-process will be detected by VSCode and breakpoints will be activated.'),(0,r.yg)("h3",{id:"debugging-server-app-in-kubernetes-environment"},"Debugging Server App in Kubernetes Environment"),(0,r.yg)("p",null,"To debug Flask running in POD inside kubernetes cluster. You'll need to make sure the pod runs as root and is granted the SYS_TRACE capability.These settings should not be used in production environments."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},'  securityContext:\n    capabilities:\n      add: ["SYS_PTRACE"]\n')),(0,r.yg)("p",null,"See (set capabilities for a container)","[https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-capabilities-for-a-container]"," for more details."),(0,r.yg)("p",null,"Once the pod is running as root and has the SYS_PTRACE capability it will be able to debug the Flask app."),(0,r.yg)("p",null,"You can follow the same instructions as in the docker-compose. Enter the pod and install the required library and packages; gdb, netstat and debugpy."),(0,r.yg)("p",null,"Often in a Kubernetes environment nodes are not addressable from outside the cluster. VSCode will thus be unable to remotely connect to port 5678 on a Kubernetes node. In order to do this you need to create a tunnel that port forwards 5678 to your local machine."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"kubectl port-forward  pod/superset-<some random id> 5678:5678\n")),(0,r.yg)("p",null,"You can now launch your VSCode debugger with the same config as above. VSCode will connect to to 127.0.0.1:5678 which is forwarded by kubectl to your remote kubernetes POD."),(0,r.yg)("h3",{id:"storybook"},"Storybook"),(0,r.yg)("p",null,"Superset includes a ",(0,r.yg)("a",{parentName:"p",href:"https://storybook.js.org/"},"Storybook")," to preview the layout/styling of various Superset components, and variations thereof. To open and view the Storybook:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"cd superset-frontend\nnpm run storybook\n")),(0,r.yg)("p",null,"When contributing new React components to Superset, please try to add a Story alongside the component's ",(0,r.yg)("inlineCode",{parentName:"p"},"jsx/tsx")," file."),(0,r.yg)("h2",{id:"translating"},"Translating"),(0,r.yg)("p",null,"We use ",(0,r.yg)("a",{parentName:"p",href:"https://python-babel.github.io/flask-babel/"},"Flask-Babel")," to translate Superset.\nIn Python files, we import the magic ",(0,r.yg)("inlineCode",{parentName:"p"},"_")," function using:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},"from flask_babel import lazy_gettext as _\n")),(0,r.yg)("p",null,"then wrap our translatable strings with it, e.g. ",(0,r.yg)("inlineCode",{parentName:"p"},"_('Translate me')"),".\nDuring extraction, string literals passed to ",(0,r.yg)("inlineCode",{parentName:"p"},"_")," will be added to the\ngenerated ",(0,r.yg)("inlineCode",{parentName:"p"},".po")," file for each language for later translation."),(0,r.yg)("p",null,"At runtime, the ",(0,r.yg)("inlineCode",{parentName:"p"},"_")," function will return the translation of the given\nstring for the current language, or the given string itself\nif no translation is available."),(0,r.yg)("p",null,"In TypeScript/JavaScript, the technique is similar:\nwe import ",(0,r.yg)("inlineCode",{parentName:"p"},"t")," (simple translation), ",(0,r.yg)("inlineCode",{parentName:"p"},"tn")," (translation containing a number)."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},'import { t, tn } from "@superset-ui/translation";\n')),(0,r.yg)("h3",{id:"enabling-language-selection"},"Enabling language selection"),(0,r.yg)("p",null,"Add the ",(0,r.yg)("inlineCode",{parentName:"p"},"LANGUAGES")," variable to your ",(0,r.yg)("inlineCode",{parentName:"p"},"superset_config.py"),". Having more than one\noption inside will add a language selection dropdown to the UI on the right side\nof the navigation bar."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},"LANGUAGES = {\n    'en': {'flag': 'us', 'name': 'English'},\n    'fr': {'flag': 'fr', 'name': 'French'},\n    'zh': {'flag': 'cn', 'name': 'Chinese'},\n}\n")),(0,r.yg)("h3",{id:"updating-language-files"},"Updating language files"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"./scripts/babel_update.sh\n")),(0,r.yg)("p",null,"This script will"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},"update the template file ",(0,r.yg)("inlineCode",{parentName:"li"},"superset/translations/messages.pot")," with current application strings."),(0,r.yg)("li",{parentName:"ol"},"update language files with the new extracted strings.")),(0,r.yg)("p",null,"You can then translate the strings gathered in files located under\n",(0,r.yg)("inlineCode",{parentName:"p"},"superset/translation"),", where there's one per language. You can use ",(0,r.yg)("a",{parentName:"p",href:"https://poedit.net/features"},"Poedit"),"\nto translate the ",(0,r.yg)("inlineCode",{parentName:"p"},"po")," file more conveniently.\nThere are some ",(0,r.yg)("a",{parentName:"p",href:"https://wiki.lxde.org/en/Translate_*.po_files_with_Poedit"},"tutorials in the wiki"),"."),(0,r.yg)("p",null,"In the case of JS translation, we need to convert the PO file into a JSON file, and we need the global download of the npm package po2json."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"npm install -g po2json\n")),(0,r.yg)("p",null,"To convert all PO files to formatted JSON files you can use the ",(0,r.yg)("inlineCode",{parentName:"p"},"po2json.sh")," script."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"./scripts/po2json.sh\n")),(0,r.yg)("p",null,"If you get errors running ",(0,r.yg)("inlineCode",{parentName:"p"},"po2json"),", you might be running the Ubuntu package with the same\nname, rather than the Node.js package (they have a different format for the arguments). If\nthere is a conflict, you may need to update your ",(0,r.yg)("inlineCode",{parentName:"p"},"PATH")," environment variable or fully qualify\nthe executable path (e.g. ",(0,r.yg)("inlineCode",{parentName:"p"},"/usr/local/bin/po2json")," instead of ",(0,r.yg)("inlineCode",{parentName:"p"},"po2json"),").\nIf you get a lot of ",(0,r.yg)("inlineCode",{parentName:"p"},"[null,***]")," in ",(0,r.yg)("inlineCode",{parentName:"p"},"messages.json"),", just delete all the ",(0,r.yg)("inlineCode",{parentName:"p"},"null,"),".\nFor example, ",(0,r.yg)("inlineCode",{parentName:"p"},'"year":["\u5e74"]')," is correct while ",(0,r.yg)("inlineCode",{parentName:"p"},'"year":[null,"\u5e74"]'),"is incorrect."),(0,r.yg)("p",null,"For the translations to take effect we need to compile translation catalogs into binary MO files."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"pybabel compile -d superset/translations\n")),(0,r.yg)("h3",{id:"creating-a-new-language-dictionary"},"Creating a new language dictionary"),(0,r.yg)("p",null,"To create a dictionary for a new language, run the following, where ",(0,r.yg)("inlineCode",{parentName:"p"},"LANGUAGE_CODE")," is replaced with\nthe language code for your target language, e.g. ",(0,r.yg)("inlineCode",{parentName:"p"},"es")," (see ",(0,r.yg)("a",{parentName:"p",href:"https://flask-appbuilder.readthedocs.io/en/latest/i18n.html"},"Flask AppBuilder i18n documentation")," for more details):"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"pip install -r superset/translations/requirements.txt\npybabel init -i superset/translations/messages.pot -d superset/translations -l LANGUAGE_CODE\n")),(0,r.yg)("p",null,"Then, ",(0,r.yg)("a",{parentName:"p",href:"#updating-language-files"},"Updating language files"),"."),(0,r.yg)("h2",{id:"tips"},"Tips"),(0,r.yg)("h3",{id:"adding-a-new-datasource"},"Adding a new datasource"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Create Models and Views for the datasource, add them under superset folder, like a new my_models.py\nwith models for cluster, datasources, columns and metrics and my_views.py with clustermodelview\nand datasourcemodelview.")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Create DB migration files for the new models")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Specify this variable to add the datasource model and from which module it is from in config.py:"),(0,r.yg)("p",{parentName:"li"},"For example:"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-python"},"ADDITIONAL_MODULE_DS_MAP = {'superset.my_models': ['MyDatasource', 'MyOtherDatasource']}\n")),(0,r.yg)("p",{parentName:"li"},"This means it'll register MyDatasource and MyOtherDatasource in superset.my_models module in the source registry."))),(0,r.yg)("h3",{id:"visualization-plugins"},"Visualization Plugins"),(0,r.yg)("p",null,"The topic of authoring new plugins, whether you'd like to contribute\nit back or not has been well documented in the\n",(0,r.yg)("a",{parentName:"p",href:"https://superset.apache.org/docs/contributing/creating-viz-plugins"},"the documentation"),", and in ",(0,r.yg)("a",{parentName:"p",href:"https://preset.io/blog/building-custom-viz-plugins-in-superset-v2"},"this blog post"),"."),(0,r.yg)("p",null,"To contribute a plugin to Superset, your plugin must meet the following criteria:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"The plugin should be applicable to the community at large, not a particularly specialized use case"),(0,r.yg)("li",{parentName:"ul"},"The plugin should be written with TypeScript"),(0,r.yg)("li",{parentName:"ul"},"The plugin should contain sufficient unit/e2e tests"),(0,r.yg)("li",{parentName:"ul"},"The plugin should use appropriate namespacing, e.g. a folder name of ",(0,r.yg)("inlineCode",{parentName:"li"},"plugin-chart-whatever")," and a package name of ",(0,r.yg)("inlineCode",{parentName:"li"},"@superset-ui/plugin-chart-whatever")),(0,r.yg)("li",{parentName:"ul"},"The plugin should use them variables via Emotion, as passed in by the ThemeProvider"),(0,r.yg)("li",{parentName:"ul"},"The plugin should provide adequate error handling (no data returned, malformed data, invalid controls, etc.)"),(0,r.yg)("li",{parentName:"ul"},"The plugin should contain documentation in the form of a populated ",(0,r.yg)("inlineCode",{parentName:"li"},"README.md")," file"),(0,r.yg)("li",{parentName:"ul"},"The plugin should have a meaningful and unique icon"),(0,r.yg)("li",{parentName:"ul"},"Above all else, the plugin should come with a ",(0,r.yg)("em",{parentName:"li"},"commitment to maintenance")," from the original author(s)")),(0,r.yg)("p",null,"Submissions will be considered for submission (or removal) on a case-by-case basis."),(0,r.yg)("h3",{id:"adding-a-db-migration"},"Adding a DB migration"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Alter the model you want to change. This example will add a ",(0,r.yg)("inlineCode",{parentName:"p"},"Column")," Annotations model."),(0,r.yg)("p",{parentName:"li"},(0,r.yg)("a",{parentName:"p",href:"https://github.com/apache/superset/commit/6c25f549384d7c2fc288451222e50493a7b14104"},"Example commit"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Generate the migration file"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"superset db migrate -m 'add_metadata_column_to_annotation_model'\n")),(0,r.yg)("p",{parentName:"li"},"This will generate a file in ",(0,r.yg)("inlineCode",{parentName:"p"},"migrations/version/{SHA}_this_will_be_in_the_migration_filename.py"),"."),(0,r.yg)("p",{parentName:"li"},(0,r.yg)("a",{parentName:"p",href:"https://github.com/apache/superset/commit/d3e83b0fd572c9d6c1297543d415a332858e262"},"Example commit"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Upgrade the DB"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"superset db upgrade\n")),(0,r.yg)("p",{parentName:"li"},"The output should look like this:"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre"},"INFO  [alembic.runtime.migration] Context impl SQLiteImpl.\nINFO  [alembic.runtime.migration] Will assume transactional DDL.\nINFO  [alembic.runtime.migration] Running upgrade 1a1d627ebd8e -> 40a0a483dd12, add_metadata_column_to_annotation_model.py\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Add column to view"),(0,r.yg)("p",{parentName:"li"},"Since there is a new column, we need to add it to the AppBuilder Model view."),(0,r.yg)("p",{parentName:"li"},(0,r.yg)("a",{parentName:"p",href:"https://github.com/apache/superset/pull/5745/commits/6220966e2a0a0cf3e6d87925491f8920fe8a3458"},"Example commit"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Test the migration's ",(0,r.yg)("inlineCode",{parentName:"p"},"down")," method"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"superset db downgrade\n")),(0,r.yg)("p",{parentName:"li"},"The output should look like this:"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre"},"INFO  [alembic.runtime.migration] Context impl SQLiteImpl.\nINFO  [alembic.runtime.migration] Will assume transactional DDL.\nINFO  [alembic.runtime.migration] Running downgrade 40a0a483dd12 -> 1a1d627ebd8e, add_metadata_column_to_annotation_model.py\n")))),(0,r.yg)("h3",{id:"merging-db-migrations"},"Merging DB migrations"),(0,r.yg)("p",null,"When two DB migrations collide, you'll get an error message like this one:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-text"},"alembic.util.exc.CommandError: Multiple head revisions are present for\ngiven argument 'head'; please specify a specific target\nrevision, '<branchname>@head' to narrow to a specific head,\nor 'heads' for all heads`\n")),(0,r.yg)("p",null,"To fix it:"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Get the migration heads"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"superset db heads\n")),(0,r.yg)("p",{parentName:"li"},"This should list two or more migration hashes. E.g."),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"1412ec1e5a7b (head)\n67da9ef1ef9c (head)\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Pick one of them as the parent revision, open the script for the other revision\nand update ",(0,r.yg)("inlineCode",{parentName:"p"},"Revises")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"down_revision")," to the new parent revision. E.g.:"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-diff"},'--- a/67da9ef1ef9c_add_hide_left_bar_to_tabstate.py\n+++ b/67da9ef1ef9c_add_hide_left_bar_to_tabstate.py\n@@ -17,14 +17,14 @@\n"""add hide_left_bar to tabstate\n\nRevision ID: 67da9ef1ef9c\n-Revises: c501b7c653a3\n+Revises: 1412ec1e5a7b\nCreate Date: 2021-02-22 11:22:10.156942\n\n"""\n\n# revision identifiers, used by Alembic.\nrevision = "67da9ef1ef9c"\n-down_revision = "c501b7c653a3"\n+down_revision = "1412ec1e5a7b"\n\nimport sqlalchemy as sa\nfrom alembic import op\n')),(0,r.yg)("p",{parentName:"li"},"Alternatively you may also run ",(0,r.yg)("inlineCode",{parentName:"p"},"superset db merge")," to create a migration script\njust for merging the heads."),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"superset db merge {HASH1} {HASH2}\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Upgrade the DB to the new checkpoint"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"superset db upgrade\n")))))}d.isMDXComponent=!0}}]);