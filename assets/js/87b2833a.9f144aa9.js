"use strict";(self.webpackChunkdocs_v_2=self.webpackChunkdocs_v_2||[]).push([[6809],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=l(n),m=r,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(f,s(s({ref:t},p),{},{components:n})):a.createElement(f,s({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var l=2;l<o;l++)s[l]=n[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},47122:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return p},default:function(){return d}});var a=n(83117),r=n(80102),o=(n(67294),n(3905)),s=["components"],i={title:"Extra Database Settings",hide_title:!0,sidebar_position:40,version:1},c=void 0,l={unversionedId:"connecting-to-databases/extra-settings",id:"connecting-to-databases/extra-settings",isDocsHomePage:!1,title:"Extra Database Settings",description:"Extra Database Settings",source:"@site/docs/connecting-to-databases/extra-settings.mdx",sourceDirName:"connecting-to-databases",slug:"/connecting-to-databases/extra-settings",permalink:"/docs/connecting-to-databases/extra-settings",editUrl:"https://github.com/apache/superset/tree/master/docs-v2/docs/connecting-to-databases/extra-settings.mdx",tags:[],version:"current",sidebarPosition:40,frontMatter:{title:"Extra Database Settings",hide_title:!0,sidebar_position:40,version:1},sidebar:"tutorialSidebar",previous:{title:"Firebolt",permalink:"/docs/connecting-to-databases/firebolt"},next:{title:"Creating Your First Dashboard",permalink:"/docs/Creating Charts and Dashboards/creating-your-first-dashboard"}},p=[{value:"Extra Database Settings",id:"extra-database-settings",children:[{value:"Deeper SQLAlchemy Integration",id:"deeper-sqlalchemy-integration",children:[],level:3},{value:"Schemas",id:"schemas",children:[],level:3},{value:"External Password Store for SQLAlchemy Connections",id:"external-password-store-for-sqlalchemy-connections",children:[],level:3},{value:"SSL Access to Databases",id:"ssl-access-to-databases",children:[],level:3}],level:2}],u={toc:p};function d(e){var t=e.components,n=(0,r.Z)(e,s);return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"extra-database-settings"},"Extra Database Settings"),(0,o.kt)("h3",{id:"deeper-sqlalchemy-integration"},"Deeper SQLAlchemy Integration"),(0,o.kt)("p",null,"It is possible to tweak the database connection information using the parameters exposed by\nSQLAlchemy. In the ",(0,o.kt)("strong",{parentName:"p"},"Database edit")," view, you can edit the ",(0,o.kt)("strong",{parentName:"p"},"Extra")," field as a JSON blob."),(0,o.kt)("p",null,"This JSON string contains extra configuration elements. The ",(0,o.kt)("inlineCode",{parentName:"p"},"engine_params")," object gets unpacked\ninto the ",(0,o.kt)("inlineCode",{parentName:"p"},"sqlalchemy.create_engine")," call, while the ",(0,o.kt)("inlineCode",{parentName:"p"},"metadata_params")," get unpacked into the\n",(0,o.kt)("inlineCode",{parentName:"p"},"sqlalchemy.MetaData")," call. Refer to the SQLAlchemy docs for more information."),(0,o.kt)("h3",{id:"schemas"},"Schemas"),(0,o.kt)("p",null,"Databases like Postgres and Redshift use the ",(0,o.kt)("strong",{parentName:"p"},"schema")," as the logical entity on top of the\n",(0,o.kt)("strong",{parentName:"p"},"database"),". For Superset to connect to a specific schema, you can set the ",(0,o.kt)("strong",{parentName:"p"},"schema")," parameter in\nthe ",(0,o.kt)("strong",{parentName:"p"},"Edit Tables")," form (Sources > Tables > Edit record)."),(0,o.kt)("h3",{id:"external-password-store-for-sqlalchemy-connections"},"External Password Store for SQLAlchemy Connections"),(0,o.kt)("p",null,"Superset can be configured to use an external store for database passwords. This is useful if you a\nrunning a custom secret distribution framework and do not wish to store secrets in Superset\u2019s meta\ndatabase."),(0,o.kt)("p",null,"Example: Write a function that takes a single argument of type ",(0,o.kt)("inlineCode",{parentName:"p"},"sqla.engine.url")," and returns the\npassword for the given connection string. Then set ",(0,o.kt)("inlineCode",{parentName:"p"},"SQLALCHEMY_CUSTOM_PASSWORD_STORE")," in your config\nfile to point to that function."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def example_lookup_password(url):\n    secret = <<get password from external framework>>\n    return 'secret'\n\nSQLALCHEMY_CUSTOM_PASSWORD_STORE = example_lookup_password\n")),(0,o.kt)("p",null,"A common pattern is to use environment variables to make secrets available.\n",(0,o.kt)("inlineCode",{parentName:"p"},"SQLALCHEMY_CUSTOM_PASSWORD_STORE")," can also be used for that purpose."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def example_password_as_env_var(url):\n# assuming the uri looks like\n# mysql://localhost?superset_user:{SUPERSET_PASSWORD}\nreturn url.password.format(os.environ)\n\nSQLALCHEMY_CUSTOM_PASSWORD_STORE = example_password_as_env_var\n")),(0,o.kt)("h3",{id:"ssl-access-to-databases"},"SSL Access to Databases"),(0,o.kt)("p",null,"You can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"Extra")," field in the ",(0,o.kt)("strong",{parentName:"p"},"Edit Databases")," form to configure SSL:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-JSON"},'{\n    "metadata_params": {},\n    "engine_params": {\n          "connect_args":{\n              "sslmode":"require",\n              "sslrootcert": "/path/to/my/pem"\n        }\n     }\n}\n')))}d.isMDXComponent=!0}}]);