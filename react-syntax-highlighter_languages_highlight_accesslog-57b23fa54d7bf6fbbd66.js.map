{"version":3,"sources":["webpack:///./node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/accesslog.js"],"names":["source","re","concat","_len","arguments","length","args","Array","_key","joined","map","x","join","either","_len2","_key2","module","exports","_hljs","HTTP_VERBS","name","contains","className","begin","relevance","apply","end","keywords","illegal"],"mappings":"6EASA,SAASA,EAAOC,GACd,OAAKA,EACa,iBAAPA,EAAwBA,EAC5BA,EAAGD,OAFM,KAUlB,SAASE,IACP,IAAK,IAAIC,EAAOC,UAAUC,OAAQC,EAAO,IAAIC,MAAMJ,GAAOK,EAAO,EAAGA,EAAOL,EAAMK,IAC/EF,EAAKE,GAAQJ,UAAUI,GAGzB,IAAIC,EAASH,EAAKI,KAAI,SAAUC,GAC9B,OAAOX,EAAOW,MACbC,KAAK,IACR,OAAOH,EAWT,SAASI,IACP,IAAK,IAAIC,EAAQV,UAAUC,OAAQC,EAAO,IAAIC,MAAMO,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACpFT,EAAKS,GAASX,UAAUW,GAG1B,IAAIN,EAAS,IAAMH,EAAKI,KAAI,SAAUC,GACpC,OAAOX,EAAOW,MACbC,KAAK,KAAO,IACf,OAAOH,EAyETO,EAAOC,QA5DP,SAAmBC,GAEjB,IAAIC,EAAa,CAAC,MAAO,OAAQ,OAAQ,MAAO,SAAU,UAAW,UAAW,QAAS,SACzF,MAAO,CACLC,KAAM,oBACNC,SAAU,CACV,CACEC,UAAW,SACXC,MAAO,mDACPC,UAAW,GAEb,CACEF,UAAW,SACXC,MAAO,UACPC,UAAW,GAEb,CACEF,UAAW,SACXC,MAAOrB,EAAO,IAAKW,EAAOY,WAAM,EAAQN,IACxCO,IAAK,IACLC,SAAUR,EACVS,QAAS,KACTJ,UAAW,EACXH,SAAU,CAAC,CACTE,MAAO,kBACPC,UAAW,KAGf,CACEF,UAAW,SAIXC,MAAO,oBACPK,QAAS,KACTJ,UAAW,GACV,CACDF,UAAW,SACXC,MAAO,KACPG,IAAK,KACLE,QAAS,KACTJ,UAAW,GAEb,CACEF,UAAW,SACXC,MAAO,sBACPG,IAAK,IACLE,QAAS,KACTJ,UAAW,GAEb,CACEF,UAAW,SACXC,MAAO,IACPG,IAAK,IACLE,QAAS,KACTJ,UAAW","file":"react-syntax-highlighter_languages_highlight_accesslog-57b23fa54d7bf6fbbd66.js","sourcesContent":["/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n  return re.source;\n}\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\n\n\nfunction concat() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var joined = args.map(function (x) {\n    return source(x);\n  }).join(\"\");\n  return joined;\n}\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] } args\n * @returns {string}\n */\n\n\nfunction either() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  var joined = '(' + args.map(function (x) {\n    return source(x);\n  }).join(\"|\") + \")\";\n  return joined;\n}\n/*\n Language: Apache Access Log\n Author: Oleg Efimov <efimovov@gmail.com>\n Description: Apache/Nginx Access Logs\n Website: https://httpd.apache.org/docs/2.4/logs.html#accesslog\n Audit: 2020\n */\n\n/** @type LanguageFn */\n\n\nfunction accesslog(_hljs) {\n  // https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods\n  var HTTP_VERBS = [\"GET\", \"POST\", \"HEAD\", \"PUT\", \"DELETE\", \"CONNECT\", \"OPTIONS\", \"PATCH\", \"TRACE\"];\n  return {\n    name: 'Apache Access Log',\n    contains: [// IP\n    {\n      className: 'number',\n      begin: /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(:\\d{1,5})?\\b/,\n      relevance: 5\n    }, // Other numbers\n    {\n      className: 'number',\n      begin: /\\b\\d+\\b/,\n      relevance: 0\n    }, // Requests\n    {\n      className: 'string',\n      begin: concat(/\"/, either.apply(void 0, HTTP_VERBS)),\n      end: /\"/,\n      keywords: HTTP_VERBS,\n      illegal: /\\n/,\n      relevance: 5,\n      contains: [{\n        begin: /HTTP\\/[12]\\.\\d'/,\n        relevance: 5\n      }]\n    }, // Dates\n    {\n      className: 'string',\n      // dates must have a certain length, this prevents matching\n      // simple array accesses a[123] and [] and other common patterns\n      // found in other languages\n      begin: /\\[\\d[^\\]\\n]{8,}\\]/,\n      illegal: /\\n/,\n      relevance: 1\n    }, {\n      className: 'string',\n      begin: /\\[/,\n      end: /\\]/,\n      illegal: /\\n/,\n      relevance: 0\n    }, // User agent / relevance boost\n    {\n      className: 'string',\n      begin: /\"Mozilla\\/\\d\\.\\d \\(/,\n      end: /\"/,\n      illegal: /\\n/,\n      relevance: 3\n    }, // Strings\n    {\n      className: 'string',\n      begin: /\"/,\n      end: /\"/,\n      illegal: /\\n/,\n      relevance: 0\n    }]\n  };\n}\n\nmodule.exports = accesslog;"],"sourceRoot":""}