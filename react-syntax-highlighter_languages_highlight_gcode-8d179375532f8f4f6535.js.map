{"version":3,"sources":["webpack:///./node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/gcode.js"],"names":["module","exports","hljs","GCODE_KEYWORDS","$pattern","keyword","GCODE_CODE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","COMMENT","inherit","C_NUMBER_MODE","begin","C_NUMBER_RE","APOS_STRING_MODE","illegal","QUOTE_STRING_MODE","className","end","variants","name","aliases","case_insensitive","keywords","contains","concat"],"mappings":"8EA8DAA,EAAOC,QAxDP,SAAeC,GACb,IAEIC,EAAiB,CACnBC,SAHmB,oBAInBC,QAAS,6FAMPC,EAAa,CAACJ,EAAKK,oBAAqBL,EAAKM,qBAAsBN,EAAKO,QAAQ,KAAM,MAAOP,EAAKQ,QAAQR,EAAKS,cAAe,CAChIC,MAAO,iCAAmCV,EAAKW,cAC7CX,EAAKQ,QAAQR,EAAKY,iBAAkB,CACtCC,QAAS,OACPb,EAAKQ,QAAQR,EAAKc,kBAAmB,CACvCD,QAAS,OACP,CACFE,UAAW,OACXL,MAAO,2BACN,CACDK,UAAW,OACXL,MAAO,2BACN,CACDK,UAAW,OACXL,MAAO,YACPM,IAAK,UACJ,CACDD,UAAW,OACXL,MAAO,uBACN,CACDK,UAAW,WACXL,MAAO,6DACPM,IAAK,sCACJ,CACDD,UAAW,SACXE,SAAU,CAAC,CACTP,MAAO,IACPM,IAAK,OACLH,QAAS,UAGb,MAAO,CACLK,KAAM,oBACNC,QAAS,CAAC,MAGVC,kBAAkB,EAClBC,SAAUpB,EACVqB,SAAU,CAAC,CACTP,UAAW,OACXL,MAjDiB,OAKH,CAChBK,UAAW,OACXL,MAAO,kBA2CSa,OAAOnB","file":"react-syntax-highlighter_languages_highlight_gcode-8d179375532f8f4f6535.js","sourcesContent":["/*\n Language: G-code (ISO 6983)\n Contributors: Adam Joseph Cook <adam.joseph.cook@gmail.com>\n Description: G-code syntax highlighter for Fanuc and other common CNC machine tool controls.\n Website: https://www.sis.se/api/document/preview/911952/\n */\nfunction gcode(hljs) {\n  var GCODE_IDENT_RE = '[A-Z_][A-Z0-9_.]*';\n  var GCODE_CLOSE_RE = '\\\\%';\n  var GCODE_KEYWORDS = {\n    $pattern: GCODE_IDENT_RE,\n    keyword: 'IF DO WHILE ENDWHILE CALL ENDIF SUB ENDSUB GOTO REPEAT ENDREPEAT ' + 'EQ LT GT NE GE LE OR XOR'\n  };\n  var GCODE_START = {\n    className: 'meta',\n    begin: '([O])([0-9]+)'\n  };\n  var GCODE_CODE = [hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.COMMENT(/\\(/, /\\)/), hljs.inherit(hljs.C_NUMBER_MODE, {\n    begin: '([-+]?([0-9]*\\\\.?[0-9]+\\\\.?))|' + hljs.C_NUMBER_RE\n  }), hljs.inherit(hljs.APOS_STRING_MODE, {\n    illegal: null\n  }), hljs.inherit(hljs.QUOTE_STRING_MODE, {\n    illegal: null\n  }), {\n    className: 'name',\n    begin: '([G])([0-9]+\\\\.?[0-9]?)'\n  }, {\n    className: 'name',\n    begin: '([M])([0-9]+\\\\.?[0-9]?)'\n  }, {\n    className: 'attr',\n    begin: '(VC|VS|#)',\n    end: '(\\\\d+)'\n  }, {\n    className: 'attr',\n    begin: '(VZOFX|VZOFY|VZOFZ)'\n  }, {\n    className: 'built_in',\n    begin: '(ATAN|ABS|ACOS|ASIN|SIN|COS|EXP|FIX|FUP|ROUND|LN|TAN)(\\\\[)',\n    end: '([-+]?([0-9]*\\\\.?[0-9]+\\\\.?))(\\\\])'\n  }, {\n    className: 'symbol',\n    variants: [{\n      begin: 'N',\n      end: '\\\\d+',\n      illegal: '\\\\W'\n    }]\n  }];\n  return {\n    name: 'G-code (ISO 6983)',\n    aliases: ['nc'],\n    // Some implementations (CNC controls) of G-code are interoperable with uppercase and lowercase letters seamlessly.\n    // However, most prefer all uppercase and uppercase is customary.\n    case_insensitive: true,\n    keywords: GCODE_KEYWORDS,\n    contains: [{\n      className: 'meta',\n      begin: GCODE_CLOSE_RE\n    }, GCODE_START].concat(GCODE_CODE)\n  };\n}\n\nmodule.exports = gcode;"],"sourceRoot":""}