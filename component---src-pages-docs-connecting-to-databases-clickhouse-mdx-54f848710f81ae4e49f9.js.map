{"version":3,"sources":["webpack:///./src/pages/docs/Connecting to Databases/clickhouse.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"wPAQaA,G,UAAe,S,uOAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,cADR,cAGA,8GACA,uBAAK,gCAAMC,WAAW,OAAU,IAA3B,6DAGL,4FAA2E,0BAAYA,WAAW,KAAvB,mCAA3E,UACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,6DAGL,6EACF,6BAAGA,WAAW,KAAQ,CAChB,KAAQ,wDADd,yBADE,KAIA,gFACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,+IAEL,+EACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,yFAEL,oNAEA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,kD,qOAMTJ,EAAWK,gBAAiB","file":"component---src-pages-docs-connecting-to-databases-clickhouse-mdx-54f848710f81ae4e49f9.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/superset/superset/docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"clickhouse\"\n    }}>{`Clickhouse`}</h2>\n    <p>{`To use Clickhouse with Superset, you will need to add the following Python libraries:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`clickhouse-driver==0.2.0\nclickhouse-sqlalchemy==0.1.6\n`}</code></pre>\n    <p>{`If running Superset using Docker Compose, add the following to your `}<inlineCode parentName=\"p\">{`./docker/requirements-local.txt`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`clickhouse-driver>=0.2.0\nclickhouse-sqlalchemy>=0.1.6\n`}</code></pre>\n    <p>{`The recommended connector library for Clickhouse is\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/cloudflare/sqlalchemy-clickhouse\"\n      }}>{`sqlalchemy-clickhouse`}</a>{`.`}</p>\n    <p>{`The expected connection string is formatted as follows:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`clickhouse+native://<user>:<password>@<host>:<port>/<database>[?optionsâ€¦]clickhouse://{username}:{password}@{hostname}:{port}/{database}\n`}</code></pre>\n    <p>{`Here's a concrete example of a real connection string:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`clickhouse+native://demo:demo@github.demo.trial.altinity.cloud/default?secure=true\n`}</code></pre>\n    <p>{`If you're using Clickhouse locally on your computer, you can get away with using a native protocol URL that\nuses the default user without a password (and doesn't encrypt the connection):`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`clickhouse+native://localhost/default\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}