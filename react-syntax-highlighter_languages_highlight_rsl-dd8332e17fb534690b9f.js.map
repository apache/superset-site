{"version":3,"sources":["webpack:///./node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/rsl.js"],"names":["module","exports","hljs","name","keywords","keyword","built_in","illegal","contains","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","QUOTE_STRING_MODE","APOS_STRING_MODE","C_NUMBER_MODE","className","begin","end","beginKeywords"],"mappings":"gFA8BAA,EAAOC,QAvBP,SAAaC,GACX,MAAO,CACLC,KAAM,gBACNC,SAAU,CACRC,QAAS,2FACTC,SAAU,2iBAEZC,QAAS,KACTC,SAAU,CAACN,EAAKO,oBAAqBP,EAAKQ,qBAAsBR,EAAKS,kBAAmBT,EAAKU,iBAAkBV,EAAKW,cAAe,CACjIC,UAAW,OACXC,MAAO,IACPC,IAAK,KACJ,CACDF,UAAW,QACXG,cAAe,2CACfD,IAAK,OACJ,CACDC,cAAe,gCACfD,IAAK","file":"react-syntax-highlighter_languages_highlight_rsl-dd8332e17fb534690b9f.js","sourcesContent":["/*\nLanguage: RenderMan RSL\nAuthor: Konstantin Evdokimenko <qewerty@gmail.com>\nContributors: Shuen-Huei Guan <drake.guan@gmail.com>\nWebsite: https://renderman.pixar.com/resources/RenderMan_20/shadingLanguage.html\nCategory: graphics\n*/\nfunction rsl(hljs) {\n  return {\n    name: 'RenderMan RSL',\n    keywords: {\n      keyword: 'float color point normal vector matrix while for if do return else break extern continue',\n      built_in: 'abs acos ambient area asin atan atmosphere attribute calculatenormal ceil cellnoise ' + 'clamp comp concat cos degrees depth Deriv diffuse distance Du Dv environment exp ' + 'faceforward filterstep floor format fresnel incident length lightsource log match ' + 'max min mod noise normalize ntransform opposite option phong pnoise pow printf ' + 'ptlined radians random reflect refract renderinfo round setcomp setxcomp setycomp ' + 'setzcomp shadow sign sin smoothstep specular specularbrdf spline sqrt step tan ' + 'texture textureinfo trace transform vtransform xcomp ycomp zcomp'\n    },\n    illegal: '</',\n    contains: [hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE, hljs.C_NUMBER_MODE, {\n      className: 'meta',\n      begin: '#',\n      end: '$'\n    }, {\n      className: 'class',\n      beginKeywords: 'surface displacement light volume imager',\n      end: '\\\\('\n    }, {\n      beginKeywords: 'illuminate illuminance gather',\n      end: '\\\\('\n    }]\n  };\n}\n\nmodule.exports = rsl;"],"sourceRoot":""}