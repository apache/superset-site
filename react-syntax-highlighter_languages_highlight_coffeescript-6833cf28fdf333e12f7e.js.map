{"version":3,"sources":["webpack:///./node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/coffeescript.js"],"names":["KEYWORDS","LITERALS","BUILT_INS","concat","module","exports","hljs","list","KEYWORDS$1","keyword","filter","kw","includes","literal","built_in","JS_IDENT_RE","SUBST","className","begin","end","keywords","EXPRESSIONS","BINARY_NUMBER_MODE","inherit","C_NUMBER_MODE","starts","relevance","variants","contains","BACKSLASH_ESCAPE","HASH_COMMENT_MODE","subLanguage","excludeBegin","excludeEnd","TITLE","TITLE_MODE","PARAMS","returnBegin","name","aliases","illegal","COMMENT","beginKeywords","endsWithParent","returnEnd"],"mappings":"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","file":"react-syntax-highlighter_languages_highlight_coffeescript-6833cf28fdf333e12f7e.js","sourcesContent":["var KEYWORDS = [\"as\", // for exports\n\"in\", \"of\", \"if\", \"for\", \"while\", \"finally\", \"var\", \"new\", \"function\", \"do\", \"return\", \"void\", \"else\", \"break\", \"catch\", \"instanceof\", \"with\", \"throw\", \"case\", \"default\", \"try\", \"switch\", \"continue\", \"typeof\", \"delete\", \"let\", \"yield\", \"const\", \"class\", // JS handles these with a special rule\n// \"get\",\n// \"set\",\n\"debugger\", \"async\", \"await\", \"static\", \"import\", \"from\", \"export\", \"extends\"];\nvar LITERALS = [\"true\", \"false\", \"null\", \"undefined\", \"NaN\", \"Infinity\"];\nvar TYPES = [\"Intl\", \"DataView\", \"Number\", \"Math\", \"Date\", \"String\", \"RegExp\", \"Object\", \"Function\", \"Boolean\", \"Error\", \"Symbol\", \"Set\", \"Map\", \"WeakSet\", \"WeakMap\", \"Proxy\", \"Reflect\", \"JSON\", \"Promise\", \"Float64Array\", \"Int16Array\", \"Int32Array\", \"Int8Array\", \"Uint16Array\", \"Uint32Array\", \"Float32Array\", \"Array\", \"Uint8Array\", \"Uint8ClampedArray\", \"ArrayBuffer\", \"BigInt64Array\", \"BigUint64Array\", \"BigInt\"];\nvar ERROR_TYPES = [\"EvalError\", \"InternalError\", \"RangeError\", \"ReferenceError\", \"SyntaxError\", \"TypeError\", \"URIError\"];\nvar BUILT_IN_GLOBALS = [\"setInterval\", \"setTimeout\", \"clearInterval\", \"clearTimeout\", \"require\", \"exports\", \"eval\", \"isFinite\", \"isNaN\", \"parseFloat\", \"parseInt\", \"decodeURI\", \"decodeURIComponent\", \"encodeURI\", \"encodeURIComponent\", \"escape\", \"unescape\"];\nvar BUILT_IN_VARIABLES = [\"arguments\", \"this\", \"super\", \"console\", \"window\", \"document\", \"localStorage\", \"module\", \"global\" // Node.js\n];\nvar BUILT_INS = [].concat(BUILT_IN_GLOBALS, BUILT_IN_VARIABLES, TYPES, ERROR_TYPES);\n/*\nLanguage: CoffeeScript\nAuthor: Dmytrii Nagirniak <dnagir@gmail.com>\nContributors: Oleg Efimov <efimovov@gmail.com>, Cédric Néhémie <cedric.nehemie@gmail.com>\nDescription: CoffeeScript is a programming language that transcompiles to JavaScript. For info about language see http://coffeescript.org/\nCategory: common, scripting\nWebsite: https://coffeescript.org\n*/\n\n/** @type LanguageFn */\n\nfunction coffeescript(hljs) {\n  var COFFEE_BUILT_INS = ['npm', 'print'];\n  var COFFEE_LITERALS = ['yes', 'no', 'on', 'off'];\n  var COFFEE_KEYWORDS = ['then', 'unless', 'until', 'loop', 'by', 'when', 'and', 'or', 'is', 'isnt', 'not'];\n  var NOT_VALID_KEYWORDS = [\"var\", \"const\", \"let\", \"function\", \"static\"];\n\n  var excluding = function excluding(list) {\n    return function (kw) {\n      return !list.includes(kw);\n    };\n  };\n\n  var KEYWORDS$1 = {\n    keyword: KEYWORDS.concat(COFFEE_KEYWORDS).filter(excluding(NOT_VALID_KEYWORDS)),\n    literal: LITERALS.concat(COFFEE_LITERALS),\n    built_in: BUILT_INS.concat(COFFEE_BUILT_INS)\n  };\n  var JS_IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\n  var SUBST = {\n    className: 'subst',\n    begin: /#\\{/,\n    end: /\\}/,\n    keywords: KEYWORDS$1\n  };\n  var EXPRESSIONS = [hljs.BINARY_NUMBER_MODE, hljs.inherit(hljs.C_NUMBER_MODE, {\n    starts: {\n      end: '(\\\\s*/)?',\n      relevance: 0\n    }\n  }), // a number tries to eat the following slash to prevent treating it as a regexp\n  {\n    className: 'string',\n    variants: [{\n      begin: /'''/,\n      end: /'''/,\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: /'/,\n      end: /'/,\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: /\"\"\"/,\n      end: /\"\"\"/,\n      contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n    }, {\n      begin: /\"/,\n      end: /\"/,\n      contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n    }]\n  }, {\n    className: 'regexp',\n    variants: [{\n      begin: '///',\n      end: '///',\n      contains: [SUBST, hljs.HASH_COMMENT_MODE]\n    }, {\n      begin: '//[gim]{0,3}(?=\\\\W)',\n      relevance: 0\n    }, {\n      // regex can't start with space to parse x / 2 / 3 as two divisions\n      // regex can't start with *, and it supports an \"illegal\" in the main mode\n      begin: /\\/(?![ *]).*?(?![\\\\]).\\/[gim]{0,3}(?=\\W)/\n    }]\n  }, {\n    begin: '@' + JS_IDENT_RE // relevance booster\n\n  }, {\n    subLanguage: 'javascript',\n    excludeBegin: true,\n    excludeEnd: true,\n    variants: [{\n      begin: '```',\n      end: '```'\n    }, {\n      begin: '`',\n      end: '`'\n    }]\n  }];\n  SUBST.contains = EXPRESSIONS;\n  var TITLE = hljs.inherit(hljs.TITLE_MODE, {\n    begin: JS_IDENT_RE\n  });\n  var POSSIBLE_PARAMS_RE = '(\\\\(.*\\\\)\\\\s*)?\\\\B[-=]>';\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\([^\\\\(]',\n    returnBegin: true,\n\n    /* We need another contained nameless mode to not have every nested\n    pair of parens to be called \"params\" */\n    contains: [{\n      begin: /\\(/,\n      end: /\\)/,\n      keywords: KEYWORDS$1,\n      contains: ['self'].concat(EXPRESSIONS)\n    }]\n  };\n  return {\n    name: 'CoffeeScript',\n    aliases: ['coffee', 'cson', 'iced'],\n    keywords: KEYWORDS$1,\n    illegal: /\\/\\*/,\n    contains: EXPRESSIONS.concat([hljs.COMMENT('###', '###'), hljs.HASH_COMMENT_MODE, {\n      className: 'function',\n      begin: '^\\\\s*' + JS_IDENT_RE + '\\\\s*=\\\\s*' + POSSIBLE_PARAMS_RE,\n      end: '[-=]>',\n      returnBegin: true,\n      contains: [TITLE, PARAMS]\n    }, {\n      // anonymous function start\n      begin: /[:\\(,=]\\s*/,\n      relevance: 0,\n      contains: [{\n        className: 'function',\n        begin: POSSIBLE_PARAMS_RE,\n        end: '[-=]>',\n        returnBegin: true,\n        contains: [PARAMS]\n      }]\n    }, {\n      className: 'class',\n      beginKeywords: 'class',\n      end: '$',\n      illegal: /[:=\"\\[\\]]/,\n      contains: [{\n        beginKeywords: 'extends',\n        endsWithParent: true,\n        illegal: /[:=\"\\[\\]]/,\n        contains: [TITLE]\n      }, TITLE]\n    }, {\n      begin: JS_IDENT_RE + ':',\n      end: ':',\n      returnBegin: true,\n      returnEnd: true,\n      relevance: 0\n    }])\n  };\n}\n\nmodule.exports = coffeescript;"],"sourceRoot":""}