{"version":3,"sources":["webpack:///./src/pages/docs/Connecting to Databases/trino.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"wPAQaA,G,UAAe,S,kOAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,SADR,SAGA,kFAAiE,6BAAGC,WAAW,KAAQ,CACnF,KAAQ,+CADqD,oBAAjE,aAGA,iBAAQ,CACN,GAAM,qBADR,qBAGA,oEACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,gEAEL,uHACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,8CAEL,iBAAQ,CACN,GAAM,mBADR,mBAGA,iBAAQ,CACN,GAAM,0BADR,2BAGA,wCAAuB,0BAAYA,WAAW,KAAvB,YAAvB,IAAgF,0BAAYA,WAAW,KAAvB,YAAhF,uCAA4K,0BAAYA,WAAW,KAAvB,gBAA5K,aAAkP,0BAAYA,WAAW,KAAvB,wBAClP,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,wBACA,mBAAKA,WAAW,MAAK,gCAAMA,WAAW,OAAU,IAA3B,iEAGvB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,MAA0B,0BAAYA,WAAW,KAAvB,gBAA1B,UACA,mBAAKA,WAAW,MAAK,gCAAMA,WAAW,OAAU,CAC5C,UAAa,kBADI,4IAYzB,oDAAmC,0BAAYA,WAAW,KAAvB,gBAAnC,kCACA,iBAAQ,CACN,GAAM,6BADR,8BAGA,2BAAU,0BAAYA,WAAW,KAAvB,gBAAV,wCACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,qKAWL,sCAAqB,0BAAYA,WAAW,KAAvB,eAArB,+BAA4G,6BAAGA,WAAW,KAAQ,CAC9H,KAAQ,kFACP,0BAAYA,WAAW,KAAvB,2BAFL,WAGA,iBAAQ,CACN,GAAM,wBADR,yBAGA,+BAAc,0BAAYA,WAAW,KAAvB,eAAd,yBAA+F,0BAAYA,WAAW,KAAvB,gBAA/F,UACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,wGASL,iBAAQ,CACN,GAAM,2BADR,4BAGA,qFACF,0BAAYA,WAAW,KAAvB,iCADE,wCAEA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,oBADZ,yQAYL,gCAAe,0BAAYA,WAAW,KAAvB,gBAAf,WACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,wFASL,8FAA6E,0BAAYA,WAAW,KAAvB,6BAA7E,iDACoC,0BAAYA,WAAW,KAAvB,kBADpC,iBACgH,0BAAYA,WAAW,KAAvB,eADhH,KAEA,sCAAqB,0BAAYA,WAAW,KAAvB,eAArB,gDACA,qBAAG,sBAAQA,WAAW,KAAnB,aAAH,KACA,sBACE,kBAAIA,WAAW,MAAK,6BAAGA,WAAW,MAAS,CACvC,KAAQ,sCADQ,kC,gOAQ1BJ,EAAWK,gBAAiB","file":"component---src-pages-docs-connecting-to-databases-trino-mdx-31c021fc455c56b92102.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/superset/superset/docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"trino\"\n    }}>{`Trino`}</h2>\n    <p>{`Superset supports Trino >=352 via SQLAlchemy by using the `}<a parentName=\"p\" {...{\n        \"href\": \"https://pypi.org/project/sqlalchemy-trino/\"\n      }}>{`sqlalchemy-trino`}</a>{` library.`}</p>\n    <h3 {...{\n      \"id\": \"connection-string\"\n    }}>{`Connection String`}</h3>\n    <p>{`The connection string format is as follows:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`trino://{username}:{password}@{hostname}:{port}/{catalog}\n`}</code></pre>\n    <p>{`If you are running Trino with docker on local machine, please use the following connection URL`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`trino://trino@host.docker.internal:8080\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"authentications\"\n    }}>{`Authentications`}</h3>\n    <h4 {...{\n      \"id\": \"1-basic-authentication\"\n    }}>{`1. Basic Authentication`}</h4>\n    <p>{`You can provide `}<inlineCode parentName=\"p\">{`username`}</inlineCode>{`/`}<inlineCode parentName=\"p\">{`password`}</inlineCode>{` in the connection string or in the `}<inlineCode parentName=\"p\">{`Secure Extra`}</inlineCode>{` field at `}<inlineCode parentName=\"p\">{`Advanced / Security`}</inlineCode></p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`In Connection String`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`trino://{username}:{password}@{hostname}:{port}/{catalog}\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`In `}<inlineCode parentName=\"p\">{`Secure Extra`}</inlineCode>{` field`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-json\"\n          }}>{`{\n    \"auth_method\": \"basic\",\n    \"auth_params\": {\n        \"username\": \"<username>\",\n        \"password\": \"<password>\"\n    }\n}\n`}</code></pre>\n      </li>\n    </ul>\n    <p>{`NOTE: if both are provided, `}<inlineCode parentName=\"p\">{`Secure Extra`}</inlineCode>{` always takes higher priority.`}</p>\n    <h4 {...{\n      \"id\": \"2-kerberos-authentication\"\n    }}>{`2. Kerberos Authentication`}</h4>\n    <p>{`In `}<inlineCode parentName=\"p\">{`Secure Extra`}</inlineCode>{` field, config as following example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"auth_method\": \"kerberos\",\n    \"auth_params\": {\n        \"service_name\": \"superset\",\n        \"config\": \"/path/to/krb5.config\",\n        ...\n    }\n}\n`}</code></pre>\n    <p>{`All fields in `}<inlineCode parentName=\"p\">{`auth_params`}</inlineCode>{` are passed directly to the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/trinodb/trino-python-client/blob/0.306.0/trino/auth.py#L40\"\n      }}><inlineCode parentName=\"a\">{`KerberosAuthentication`}</inlineCode></a>{` class.`}</p>\n    <h4 {...{\n      \"id\": \"3-jwt-authentication\"\n    }}>{`3. JWT Authentication`}</h4>\n    <p>{`Config `}<inlineCode parentName=\"p\">{`auth_method`}</inlineCode>{` and provide token in `}<inlineCode parentName=\"p\">{`Secure Extra`}</inlineCode>{` field`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"auth_method\": \"jwt\",\n    \"auth_params\": {\n        \"token\": \"<your-jwt-token>\"\n    }\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"4-custom-authentication\"\n    }}>{`4. Custom Authentication`}</h4>\n    <p>{`To use custom authentication, first you need to add it into\n`}<inlineCode parentName=\"p\">{`ALLOWED_EXTRA_AUTHENTICATIONS`}</inlineCode>{` allow list in Superset config file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`from your.module import AuthClass\nfrom another.extra import auth_method\n\nALLOWED_EXTRA_AUTHENTICATIONS: Dict[str, Dict[str, Callable[..., Any]]] = {\n    \"trino\": {\n        \"custom_auth\": AuthClass,\n        \"another_auth_method\": auth_method,\n    },\n}\n`}</code></pre>\n    <p>{`Then in `}<inlineCode parentName=\"p\">{`Secure Extra`}</inlineCode>{` field:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"auth_method\": \"custom_auth\",\n    \"auth_params\": {\n        ...\n    }\n}\n`}</code></pre>\n    <p>{`You can also use custom authentication by providing reference to your `}<inlineCode parentName=\"p\">{`trino.auth.Authentication`}</inlineCode>{` class\nor factory function (which returns an `}<inlineCode parentName=\"p\">{`Authentication`}</inlineCode>{` instance) to `}<inlineCode parentName=\"p\">{`auth_method`}</inlineCode>{`.`}</p>\n    <p>{`All fields in `}<inlineCode parentName=\"p\">{`auth_params`}</inlineCode>{` are passed directly to your class/function.`}</p>\n    <p><strong parentName=\"p\">{`Reference`}</strong>{`:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://trino.io/episodes/12.html\"\n        }}>{`Trino-Superset-Podcast`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}