{"version":3,"sources":["webpack:///./src/pages/docs/Contributing/conventions-and-typing.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"wPAQaA,G,UAAe,S,wOAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,eADR,eAGA,iBAAQ,CACN,GAAM,UADR,UAGA,0CAAyB,0BAAYC,WAAW,KAAvB,aAAzB,0IACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,oBADZ,4CAIL,qCACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,oBADZ,gDAIL,gGAA+E,0BAAYA,WAAW,KAAvB,kBAA/E,iCAA2K,0BAAYA,WAAW,KAAvB,4BAA3K,KACA,iBAAQ,CACN,GAAM,UADR,UAGA,iBAAQ,CACN,GAAM,YADR,UAGA,yEAAwD,kBAAIA,WAAW,KAAf,OAAxD,8BACF,6BAAGA,WAAW,KAAQ,CAChB,KAAQ,kDADd,cADE,8BAKA,iCAAgB,6BAAGA,WAAW,KAAQ,CAClC,KAAQ,yDADI,WAAhB,kJAKA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,oBADZ,qTAiBL,iBAAQ,CACN,GAAM,cADR,cAGA,gTAA+R,6BAAGA,WAAW,KAAQ,CACjT,KAAQ,iDADmR,SAA/R,QAE2B,6BAAGA,WAAW,KAAQ,CAC7C,KAAQ,iDADe,SAF3B,W,sOASJJ,EAAWK,gBAAiB","file":"component---src-pages-docs-contributing-conventions-and-typing-mdx-54d1e005f2a8e5c2b16f.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/superset/superset/docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"conventions\"\n    }}>{`Conventions`}</h2>\n    <h3 {...{\n      \"id\": \"python\"\n    }}>{`Python`}</h3>\n    <p>{`Parameters in the `}<inlineCode parentName=\"p\">{`config.py`}</inlineCode>{` (which are accessible via the Flask app.config dictionary) are assumed to always be defined and thus should be accessed directly via,`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`blueprints = app.config[\"BLUEPRINTS\"]\n`}</code></pre>\n    <p>{`rather than,`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`blueprints = app.config.get(\"BLUEPRINTS\")\n`}</code></pre>\n    <p>{`or similar as the later will cause typing issues. The former is of type `}<inlineCode parentName=\"p\">{`List[Callable]`}</inlineCode>{` whereas the later is of type `}<inlineCode parentName=\"p\">{`Optional[List[Callable]]`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"typing\"\n    }}>{`Typing`}</h2>\n    <h3 {...{\n      \"id\": \"python-1\"\n    }}>{`Python`}</h3>\n    <p>{`To ensure clarity, consistency, all readability, `}<em parentName=\"p\">{`all`}</em>{` new functions should use\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.python.org/3/library/typing.html\"\n      }}>{`type hints`}</a>{` and include a\ndocstring.`}</p>\n    <p>{`Note per `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.python.org/dev/peps/pep-0484/#exceptions\"\n      }}>{`PEP-484`}</a>{` no\nsyntax for listing explicitly raised exceptions is proposed and thus the\nrecommendation is to put this information in a docstring, i.e.,`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`import math\nfrom typing import Union\n\n\ndef sqrt(x: Union[float, int]) -> Union[float, int]:\n    \"\"\"\n    Return the square root of x.\n\n    :param x: A number\n    :returns: The square root of the given number\n    :raises ValueError: If the number is negative\n    \"\"\"\n\n    return math.sqrt(x)\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"typescript\"\n    }}>{`TypeScript`}</h3>\n    <p>{`TypeScript is fully supported and is the recommended language for writing all new frontend components. When modifying existing functions/components, migrating to TypeScript is appreciated, but not required. Examples of migrating functions/components to TypeScript can be found in `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/apache/superset/pull/9162\"\n      }}>{`#9162`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/apache/superset/pull/9180\"\n      }}>{`#9180`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}